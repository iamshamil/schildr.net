{"version":3,"file":"static/js/114.acdeff81.chunk.js","mappings":"oTAgBMA,EAAQ,CAAC,kBAAmB,oBAAqB,kBAwHvD,UAtHe,WACX,OAA0BC,EAAAA,EAAAA,KAAlBC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QACRC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,CACjCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNC,OAAQ,GACRC,YAAa,KACf,eATKC,EAAM,KAAEC,EAAS,KAUhBP,EAA6EM,EAA7EN,MAAOC,EAAsEK,EAAtEL,SAAUI,EAA4DC,EAA5DD,YAAaP,EAA+CQ,EAA/CR,UAAWC,EAAoCO,EAApCP,SAAUI,EAA0BG,EAA1BH,KAAMD,EAAoBI,EAApBJ,QAASE,EAAWE,EAAXF,OAEpEI,EAAc,SAACC,GAAWF,GAAU,kBAAKD,GAAWG,GAAQ,EAE5DC,EAAM,yCAAG,WAAOC,GAAC,4EACA,GAAnBA,EAAEC,iBACEX,IAAaC,EAAO,gBAC+D,OAAnFM,EAAY,CAAEH,YAAa,CAAC,sDAAuD,2CAGrEQ,EAAAA,EAAAA,IAASP,GAAQ,KAAD,GAA9BQ,EAAK,QACCC,QACNrB,EAAQoB,EAAML,OACdO,EAAAA,EAAAA,IAAWF,EAAML,KAAKQ,KACtBC,OAAOC,SAASC,KAAO,SAEvBZ,EAAY,CAAEH,YAAaS,EAAML,KAAKY,KAAI,SAACV,GAAC,OAAKA,EAAEW,GAAG,MACzD,2CACJ,gBAdW,sCA6BZ,OANAC,EAAAA,EAAAA,YAAU,WACF9B,GAAQA,EAAK+B,QACbN,OAAOC,SAASC,KAAO,QAE/B,GAAG,CAAC3B,KAGA,UAAC,IAAK,CAACgC,WAAW,SAASC,eAAe,SAASC,GAAI,CAAEC,OAAQ,QAAS,WACtE,SAAC,IAAK,CAACH,WAAW,SAASC,eAAe,SAAQ,UAC9C,SAAC,IAAG,CAACG,UAAU,MAAMC,IAAKC,EAAMJ,GAAI,CAAEK,MAAO,IAAKC,GAAI,QAE1D,SAAC,IAAK,CAACR,WAAW,SAASC,eAAe,SAASC,GAAI,CAAEK,MAAO,QAAS,UACrE,kBAAME,SAAUxB,EAAO,WACnB,UAAC,IAAK,CAACyB,QAAS,EAAE,WACd,SAAC,IAAG,CAACC,GAAI,EAAE,UACP,SAAC,IAAS,CAACC,MAAM,aAAaC,QAAQ,WAAWX,GAAI,CAAEK,MAAO,CAAEO,GAAI,IAAKH,GAAI,IAAKI,GAAI,MAASC,KAAM,OAAQC,MAAO5C,EAAW6C,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAEV,UAAWa,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAE/M,SAAC,IAAG,CAAC+B,GAAI,EAAE,UACP,SAAC,IAAS,CAACC,MAAM,YAAYC,QAAQ,WAAWX,GAAI,CAAEK,MAAO,CAAEO,GAAI,IAAKH,GAAI,IAAKI,GAAI,MAASC,KAAM,OAAQC,MAAO3C,EAAU4C,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAET,SAAUY,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAE5M,SAAC,IAAG,CAAC+B,GAAI,EAAE,UACP,SAAC,IAAS,CAACC,MAAM,aAAaC,QAAQ,WAAWX,GAAI,CAAEK,MAAO,CAAEO,GAAI,IAAKH,GAAI,IAAKI,GAAI,MAASC,KAAM,QAASC,MAAO1C,EAAO2C,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAER,MAAOW,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAExM,SAAC,IAAG,CAAC+B,GAAI,EAAE,UACP,SAAC,IAAS,CAACC,MAAM,WAAWC,QAAQ,WAAWX,GAAI,CAAEK,MAAO,CAAEO,GAAI,IAAKH,GAAI,IAAKI,GAAI,MAASC,KAAM,WAAYC,MAAOzC,EAAU0C,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAEP,SAAUU,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAE/M,SAAC,IAAG,CAAC+B,GAAI,EAAE,UACP,SAAC,IAAS,CAACC,MAAM,mBAAmBC,QAAQ,WAAWX,GAAI,CAAEK,MAAO,CAAEO,GAAI,IAAKH,GAAI,IAAKI,GAAI,MAASC,KAAM,WAAYC,MAAOxC,EAASyC,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAEN,QAASS,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAErN,SAAC,IAAG,CAAC+B,GAAI,EAAE,UACP,UAAC,IAAW,CAACS,WAAS,EAACP,QAAQ,WAAU,WACrC,SAAC,IAAU,oBACX,SAAC,IAAM,CACHI,MAAOvC,EACPwC,SAzCX,SAACG,GAClB,IACcJ,EACVI,EADAF,OAAUF,MAEdlC,EAAY,CAAEL,KAAMuC,GACxB,EAoCuD,SAEtBnD,EAAM8B,KAAI,SAAC0B,EAAMC,GAAC,OACf,UAAC,IAAQ,CAASN,MAAOK,EAAK,cAAIA,EAAI,MAAvBC,EAAoC,WAMtD,cAAT7C,IACA,SAAC,IAAG,WACA,SAAC,IAAS,CACNkC,MAAM,cACNQ,WAAS,EACTI,WAAS,EACTC,KAAM,EACNC,YAAY,2BACZb,QAAQ,WACRI,MAAOtC,EACPuC,SAAU,SAAChC,GAAC,OAAKH,EAAY,CAAEJ,OAAQO,EAAEiC,OAAOF,MAAOrC,YAAa,IAAK,OAIrF,SAAC,IAAK,CAACoB,WAAW,SAAS2B,UAAW,EAAGzB,GAAI,CAAEK,MAAO,QAAS,UAC3D,SAAC,IAAM,CAACM,QAAQ,YAAYe,MAAM,UAAU1B,GAAI,CAAE2B,GAAI,OAAQtB,MAAO,CAAEO,GAAI,IAAKC,GAAI,KAAOe,cAAe,cAAgBd,KAAK,SAAQ,0BAI3IpC,EAAYmD,OACRnD,EAAYgB,KAAI,SAACoC,EAAOT,GAAC,OACrB,SAAC,IAAG,CAACrB,GAAI,CAAE+B,GAAI,EAAGC,QAAS,UAAWC,aAAc,EAAGC,EAAG,GAAI,UAC1D,SAAC,IAAU,CAACvB,QAAQ,KAAKX,GAAI,CAAE0B,MAAO,QAAS,SAAEI,KADeT,EAE9D,IACL,MAEb,SAAC,IAAG,CAACI,UAAW,EAAGU,UAAW,SAAS,UACnC,UAAC,IAAU,CAACxB,QAAQ,KAAKyB,MAAM,SAASpC,GAAI,CAAEqC,OAAQ,WAAY,uCAA0B,SAAC,IAAU,CAAC1B,QAAQ,OAAO2B,QAAS,kBAAMtE,EAAS,cAAc,EAAC,kCAMtL,C","sources":["pages/Auth/Register.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { Stack, Box, Typography, TextField, Button } from '@mui/material';\n\nimport { register } from '../../utilis/request';\n\nimport logo from '../../assets/img/logo/dark-logo.png';\nimport useConfig from '../../hooks/useConfig';\nimport { setSession } from '../../utilis/auth';\n\nconst roles = [\"Project Manager\", \"Portfolio manager\", \"Project member\"];\n\nconst SignIn = () => {\n    const { user, setUser } = useConfig();\n    const navigate = useNavigate()\n    const [values, setValues] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirm: \"\",\n        role: \"\",\n        skills: \"\",\n        invalidPass: [],\n    });\n    const { email, password, invalidPass, firstName, lastName, role, confirm, skills } = values;\n\n    const handleValue = (data) => { setValues({ ...values, ...data }) }\n\n    const signup = async (e) => {\n        e.preventDefault();\n        if (password !== confirm) {\n            handleValue({ invalidPass: [\"Please check password and confirm password again\"] });\n            return;\n        }\n        let rdata = await register(values);\n        if (rdata.status) {\n            setUser(rdata.data);\n            setSession(rdata.data._id);\n            window.location.href = '/main';\n        } else {\n            handleValue({ invalidPass: rdata.data.map((e) => e.msg) })\n        }\n    }\n\n    const handleChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        handleValue({ role: value });\n    };\n\n    useEffect(() => {\n        if (user && user.token) {\n            window.location.href = '/main';\n        }\n    }, [user])\n\n    return (\n        <Stack alignItems='center' justifyContent='center' sx={{ height: '100%' }}>\n            <Stack alignItems='center' justifyContent='center'>\n                <Box component='img' src={logo} sx={{ width: 200, mb: 2 }} />\n            </Stack>\n            <Stack alignItems='center' justifyContent='center' sx={{ width: '100%' }} >\n                <form onSubmit={signup}>\n                    <Stack spacing={3}>\n                        <Box sm={1}>\n                            <TextField label=\"First Name\" variant='standard' sx={{ width: { md: 400, sm: 300, xs: 250 } }} type={'text'} value={firstName} onChange={(e) => handleValue({ firstName: e.target.value, invalidPass: [] })} />\n                        </Box>\n                        <Box sm={1}>\n                            <TextField label=\"Last Name\" variant='standard' sx={{ width: { md: 400, sm: 300, xs: 250 } }} type={'text'} value={lastName} onChange={(e) => handleValue({ lastName: e.target.value, invalidPass: [] })} />\n                        </Box>\n                        <Box sm={1}>\n                            <TextField label=\"Your Email\" variant='standard' sx={{ width: { md: 400, sm: 300, xs: 250 } }} type={'email'} value={email} onChange={(e) => handleValue({ email: e.target.value, invalidPass: [] })} />\n                        </Box>\n                        <Box sm={1}>\n                            <TextField label=\"Password\" variant='standard' sx={{ width: { md: 400, sm: 300, xs: 250 } }} type={'password'} value={password} onChange={(e) => handleValue({ password: e.target.value, invalidPass: [] })} />\n                        </Box>\n                        <Box sm={1}>\n                            <TextField label=\"Confirm Password\" variant='standard' sx={{ width: { md: 400, sm: 300, xs: 250 } }} type={'password'} value={confirm} onChange={(e) => handleValue({ confirm: e.target.value, invalidPass: [] })} />\n                        </Box>\n                        <Box sm={1}>\n                            <FormControl fullWidth variant=\"standard\">\n                                <InputLabel>Role</InputLabel>\n                                <Select\n                                    value={role}\n                                    onChange={handleChange}\n                                >\n                                    {roles.map((name, i) => (\n                                        <MenuItem key={i} value={name} > {name} </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        {\n                            role === \"Developer\" &&\n                            <Box>\n                                <TextField\n                                    label=\"Your Skills\"\n                                    fullWidth\n                                    multiline\n                                    rows={4}\n                                    placeholder=\"React, Node, PHP, etc...\"\n                                    variant=\"standard\"\n                                    value={skills}\n                                    onChange={(e) => handleValue({ skills: e.target.value, invalidPass: [] })}\n                                />\n                            </Box>\n                        }\n                        <Stack alignItems='center' marginTop={5} sx={{ width: '100%' }}>\n                            <Button variant='contained' color='primary' sx={{ mx: 'auto', width: { md: 300, xs: 200 }, textTransform: 'capitalize' }} type='submit'>Sign Up</Button>\n                        </Stack>\n                    </Stack>\n                    {\n                        invalidPass.length ?\n                            invalidPass.map((error, i) => (\n                                <Box sx={{ my: 1, bgcolor: '#ff4c4c', borderRadius: 1, p: 1 }} key={i}>\n                                    <Typography variant='h7' sx={{ color: '#fff' }}>{error}</Typography>\n                                </Box>\n                            )) : null\n                    }\n                    <Box marginTop={3} textAlign={'center'}>\n                        <Typography variant='h7' align='center' sx={{ cursor: \"pointer\" }}>Already have an account? <Typography variant='span' onClick={() => navigate(\"/auth/login\")} >Sign In!</Typography></Typography>\n                    </Box>\n                </form>\n            </Stack>\n        </Stack>\n    )\n}\n\nexport default SignIn\n"],"names":["roles","useConfig","user","setUser","navigate","useNavigate","useState","firstName","lastName","email","password","confirm","role","skills","invalidPass","values","setValues","handleValue","data","signup","e","preventDefault","register","rdata","status","setSession","_id","window","location","href","map","msg","useEffect","token","alignItems","justifyContent","sx","height","component","src","logo","width","mb","onSubmit","spacing","sm","label","variant","md","xs","type","value","onChange","target","fullWidth","event","name","i","multiline","rows","placeholder","marginTop","color","mx","textTransform","length","error","my","bgcolor","borderRadius","p","textAlign","align","cursor","onClick"],"sourceRoot":""}