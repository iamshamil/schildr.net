{"version":3,"file":"static/js/22.fd504da8.chunk.js","mappings":"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","sources":["assets/img/svg/sortAZ.svg","pages/Main/GridTabs.js","pages/Main/SubTools/Hide.js","pages/Main/SubTools/Filter.js","pages/Main/SubTools/index.js","assets/img/svg/sortZA.svg","pages/Main/TableContent/TableHeader.js","pages/Main/TableContent/AllCheck.js","assets/img/svg/file.svg","assets/img/svg/delete.svg","components/UploadModal.js","pages/Main/TableContent/CellType/ModalSelectCell.js","pages/Main/TableContent/CellType/MultiModalSelect.js","pages/Main/TableContent/CellType/SimpleString.js","pages/Main/TableContent/CellType/LongText.js","pages/Main/TableContent/CellType/LinkField.js","pages/Main/TableContent/CellType/DateCell.js","pages/Main/TableContent/CellType/CheckBoxCell.js","pages/Main/TableContent/CellType/LogDate.js","pages/Main/TableContent/CellType/LogUser.js","components/EditModal.js","pages/Main/TableContent/FirstCell.js","pages/Main/TableContent/CellType/Attached.js","pages/Main/TableContent/CellType/SelectCell.js","pages/Main/TableContent/CellType/MultiSelectCell.js","pages/Main/TableContent/CellType/index.js","pages/Main/TableContent/Cell.js","pages/Main/TableContent/TableRow.js","pages/Main/TableContent/TableBody.js","pages/Main/TableContent/index.js","pages/Main/index.js","utilis/bytes-to-size.js","utilis/file-to-base64.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSortAz(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    className: \"flex-none mr1 text-color-quiet\",\n    style: {\n      shapeRendering: \"geometricprecision\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    fill: \"currentColor\",\n    d: \"M14 4h1a.5.5 0 0 1 .416.777l-1.341 1.906c-.317.45-.832.451-1.15 0l-1.341-1.906A.5.5 0 0 1 12 4h1V.5c0-.275.225-.5.5-.5s.5.225.5.5V4zM1 2a1 1 0 0 1 1.01-1h1.98a1 1 0 1 1 0 2H2.01C1.451 3 1 2.556 1 2zm0 3a1 1 0 0 1 .99-1h4.02c.546 0 .99.444.99 1a1 1 0 0 1-.99 1H1.99A.993.993 0 0 1 1 5zm0 3c0-.552.453-1 .997-1h6.006C8.553 7 9 7.444 9 8c0 .552-.453 1-.997 1H1.997A.996.996 0 0 1 1 8zm0 3c0-.552.445-1 .996-1h9.008c.55 0 .996.444.996 1 0 .552-.445 1-.996 1H1.996A.995.995 0 0 1 1 11zm0 3c0-.552.45-1 1.007-1h11.986c.556 0 1.007.444 1.007 1 0 .552-.45 1-1.007 1H2.007A1.001 1.001 0 0 1 1 14z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSortAz);\nexport default __webpack_public_path__ + \"static/media/sortAZ.35ca2659132cdf3eb53abc586d31961e.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { toast } from 'react-toastify';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InputLabel from '@mui/material/InputLabel';\nimport DialogContent from '@mui/material/DialogContent';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport ShareIcon from '@mui/icons-material/Share';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport useConfig from '../../hooks/useConfig';\nimport useTableContext from '../../hooks/useTable';\nimport AntSwitch from '../../components/AntSwitch';\n\nimport { makeHeaderData } from '../../utilis/util';\nimport { transferTable, getProjects, changeTab, createTab, updateTab, deleteTab, updateHeaderOrder, updateUser, createInviteLink } from '../../utilis/request';\n\nconst GridTabs = ({ headerNames, setHeaderNames }) => {\n    const { projectId } = useParams();\n    const [active, setActive] = useState(0);\n    const [anchor, setAnchor] = useState(null);\n    const [editAnchor, setEditAnchor] = useState(null);\n    const [label, setLabel] = useState(\"\");\n    const [projectName, setProjectName] = useState(10);\n    const [headerList, setHeaderList] = useState([]);\n    const [selectKey, setSelectKey] = useState(\"\");\n    const [trnasferModal, setTrnasferModal] = useState(false);\n    const open = Boolean(anchor);\n    const edit = Boolean(editAnchor);\n    const [projects, setProjects] = useState([]);\n    const [link, setLink] = useState(\"\");\n\n    const { user } = useConfig();\n    const { changeHeader, changeBody, setHid, selectEditabled, isAdmin, users, setUsers } = useTableContext();\n\n    const popUp = (e) => {\n        setAnchor(e.target)\n    }\n\n    const editPopUp = (e, index) => {\n        setEditAnchor(e.target)\n    }\n\n    const closePop = (params) => {\n        setAnchor(null)\n        setEditAnchor(null)\n        setLabel(\"\")\n    }\n\n    const generateLink = async () => {\n        const inviteLink = await createInviteLink(headerList[active]._id, user._id);\n        if (inviteLink.status) {\n            setLink(inviteLink.key)\n        } else {\n            toast.error('Link generation failed!')\n        }\n    }\n\n    const selectTab = async (i, id) => {\n        setActive(i);\n        setLink(\"\")\n        let rdata = await changeTab(id);\n        if (rdata.status) {\n            setHid(id);\n            selectEditabled(\"\")\n            const header = await makeHeaderData(user, id, user, rdata.header.row)\n            changeHeader(header)\n            changeBody(rdata.body)\n        } else {\n            alert(\"Failed\")\n        }\n    }\n\n    const onDragEnd = (result) => {\n        if (result.destination) {\n            let tempHeader = headerList, startIndex = result.source.index, endIndex = result.destination.index, newOrder = [];\n            if (startIndex < endIndex) {\n                for (let item of tempHeader) {\n                    if (item.order === startIndex) {\n                        item.order = endIndex;\n                    } else if (item.order > startIndex && item.order <= endIndex) {\n                        item.order--;\n                    }\n                    newOrder.push(item);\n                }\n            } else {\n                for (let item of tempHeader) {\n                    if (item.order === startIndex) {\n                        item.order = endIndex;\n                    } else if (item.order >= endIndex && item.order < startIndex) {\n                        item.order++;\n                    }\n                    newOrder.push(item);\n                }\n            }\n            setHeaderNames(newOrder)\n            updateHeaderOrder({ startIndex, endIndex });\n        }\n    }\n\n    const handleCreate = async (params) => {\n        if (projectId) {\n            setLink(\"\")\n            let rdata = await createTab({ name: label, pId: projectId })\n            if (rdata.status) {\n                setHeaderList([...headerList, rdata.data]);\n                setHeaderNames([...headerNames, rdata.data]);\n\n                setActive(headerList.length);\n                setHid(rdata.data._id);\n                selectEditabled(\"\")\n                changeHeader([])\n                changeBody([])\n            } else {\n                alert('Faliled!')\n            }\n            closePop()\n            setLabel(\"\")\n        } else {\n            toast.error(\"Required Project Id\")\n        }\n    }\n\n    const changName = async () => {\n        let origin = headerList[active];\n        if (!label) return;\n        if (label === origin.name) {\n            closePop();\n            return;\n        }\n        let rdata = await updateTab(origin._id, label);\n        if (rdata.status) {\n            headerList[active].name = label;\n        } else {\n            alert(rdata.message);\n        }\n        closePop();\n    }\n\n    const deleteHandle = async () => {\n        let origin = headerList[active];\n        let rdata = await deleteTab(origin._id);\n        if (rdata.status) {\n            if (headerList[active + 1]) {\n                headerList.splice(active, 1);\n                selectTab(active, headerList[active]._id)\n            } else if (headerList[active - 1]) {\n                headerList.splice(active, 1);\n                selectTab(active - 1, headerList[active - 1]._id)\n            } else {\n                setHeaderNames([])\n                setHeaderList([])\n            }\n            closePop()\n        } else {\n            alert(rdata.message)\n        }\n    }\n\n    const switchFunction = (event, index, id, flag) => {\n        if (flag) {\n            if (!isAdmin) return;\n            editPopUp(event, index)\n        } else {\n            selectTab(index, id)\n        }\n    }\n\n    const allowTable = async (userId, tableId, allowed) => {\n        let index = users.findIndex((e) => e._id === userId);\n        let temp = [...users];\n        if (allowed) {\n            let itemIdx = temp[index].myTable.findIndex((e) => e === tableId);\n            temp[index].myTable.splice(itemIdx, 1);\n        } else {\n            temp[index].myTable.push(tableId)\n        }\n        let rdata = await updateUser({ id: userId, data: { myTable: temp[index].myTable } });\n        if (rdata.status) {\n            setUsers(temp);\n        } else {\n            alert(rdata.message)\n        }\n    }\n\n    const openTransferModal = async () => {\n        if (projects.length) {\n            setProjectName(projects[0]?._id)\n            setTrnasferModal(true)\n        } else {\n            const data = await getProjects();\n            if (data.status) {\n                if (data.data.length === 1) {\n                    toast.info(\"There are no other projects\")\n                } else {\n                    const temp = data.data.filter(e => e._id !== projectId)\n                    setProjects(temp)\n                    setProjectName(temp[0]?._id)\n                    setTrnasferModal(true)\n                }\n            } else {\n                toast.error(data.message)\n            }\n        }\n        setEditAnchor(null);\n    }\n\n    const closeTransferModal = () => {\n        setTrnasferModal(false)\n    }\n\n    const handleProjectName = (event) => {\n        setProjectName(event.target.value);\n    }\n\n    const handleTransfer = async () => {\n        const origin = headerList[active];\n        if (!projectName || !origin._id) {\n            toast.error(\"Invalid params\");\n            return;\n        }\n        const data = await transferTable({ projectId: projectName, tableId: origin._id })\n        if (data.status) {\n            if (headerList[active + 1]) {\n                headerList.splice(active, 1);\n                selectTab(active, headerList[active]._id)\n            } else if (headerList[active - 1]) {\n                headerList.splice(active, 1);\n                selectTab(active - 1, headerList[active - 1]._id)\n            } else {\n                setHeaderNames([])\n                setHeaderList([])\n            }\n            closeTransferModal();\n        } else {\n            toast.error(data.message)\n        }\n    }\n\n\n    useEffect(() => {\n        setHeaderList(headerNames);\n    }, [headerNames, setHeaderList]);\n\n    return (\n        <>\n            <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ bgcolor: '#0000001a', height: 32, px: 2, position: 'relative', }}>\n                <Box sx={{ width: '100%', position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, px: 2 }}>\n                    <Stack direction='row' alignItems='center'>\n                        <Stack direction='row'>\n                            <Stack direction='row' sx={{ height: 32 }}>\n                                <DragDropContext onDragEnd={onDragEnd}>\n                                    <Droppable droppableId=\"tab-order\" type=\"tab-order\" direction=\"horizontal\">\n                                        {(provided, snapshot) => (\n                                            <Stack direction='row' sx={{ flex: 'one', zIndex: 1, position: 'relative', }} ref={provided.innerRef} {...provided.droppableProps}>\n                                                {\n                                                    headerList.map((one, i) => {\n                                                        return (\n                                                            <Draggable draggableId={one.name} index={i} key={one.name + i} DraggingStyle={{ backgroundColor: '#000000', }}>\n                                                                {(provided, snapshot) => (\n                                                                    <Stack\n                                                                        {...provided.draggableProps}\n                                                                        {...provided.dragHandleProps}\n                                                                        ref={provided.innerRef}\n                                                                        key={i}\n                                                                        onClick={(e) => switchFunction(e, i, one._id, i === active)}\n                                                                        direction='row'\n                                                                        sx={{\n                                                                            order: one.order,\n                                                                            position: 'relative',\n                                                                            cursor: 'pointer',\n                                                                            borderTopRightRadius: '3px',\n                                                                            borderTopLeftRadius: '3px',\n                                                                            bgcolor: i === active ? '#fff' : \"\",\n                                                                            boxShadow: i === active ? '#00000014 0px 0px 2px, #00000029 0px -1px 3px' : \"\",\n                                                                            '&:after': {\n                                                                                content: `''`,\n                                                                                width: '1px',\n                                                                                height: 15,\n                                                                                bgcolor: '#ffffff85',\n                                                                                top: 8,\n                                                                                right: 0,\n                                                                                position: 'absolute'\n                                                                            },\n                                                                            '&:hover': {\n                                                                                bgcolor: i !== active && '#00000029',\n                                                                                '&:after': {\n                                                                                    width: 0\n                                                                                }\n                                                                            }\n                                                                        }}>\n                                                                        <Box>\n                                                                            <Box\n                                                                                sx={{\n                                                                                    outlineOffset: '-5px',\n                                                                                    height: '100%',\n                                                                                    display: 'flex',\n                                                                                    justifyContent: 'center',\n                                                                                    alignItems: 'center',\n                                                                                    pr: i === active ? 4 : 2,\n                                                                                    pl: i === active ? 1 : 2\n                                                                                }}>\n                                                                                <Typography variant='span' sx={{ fontSize: 13, userSelect: 'none', color: i !== active ? '#fff' : '' }}>{one.name}</Typography>\n                                                                            </Box>\n                                                                            {\n                                                                                i === active &&\n                                                                                <Stack alignItems='center' justifyContent=\"center\"\n                                                                                    sx={{\n                                                                                        position: 'absolute',\n                                                                                        top: 0,\n                                                                                        right: 12,\n                                                                                        height: '100%'\n                                                                                    }}>\n                                                                                    <ExpandMoreIcon sx={{ fontSize: 12 }} />\n                                                                                </Stack>\n                                                                            }\n                                                                        </Box>\n                                                                    </Stack>\n                                                                )}\n                                                            </Draggable>\n                                                        )\n                                                    })\n                                                }\n                                                {provided.placeholder}\n                                            </Stack>\n                                        )}\n                                    </Droppable>\n                                </DragDropContext>\n                                {\n                                    isAdmin &&\n                                    <Stack justifyContent='center' alignItems=\"center\" sx={{ order: headerList.length }}>\n                                        <IconButton sx={{ p: 0, ml: 1 }} onClick={popUp}>\n                                            <AddIcon sx={{ color: '#fff' }} />\n                                        </IconButton>\n                                    </Stack>\n                                }\n                            </Stack>\n                        </Stack>\n                    </Stack>\n                </Box>\n            </Stack>\n            <Popover\n                anchorEl={anchor}\n                open={open}\n                onClose={closePop}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: \"right\",\n                }}\n                sx={{ '& .MuiPopover-paper': { boxShadow: '0 0 0 2px #00000040' } }}\n            >\n                <Box sx={{ py: 1, px: 2, width: 400 }}>\n                    <TextField placeholder='Field name' value={label} onChange={(e) => setLabel(e.target.value)} autoFocus sx={{ py: 1, width: '100%', '& input': { py: 1, px: 1, fontSize: 15 }, '& fieldset': { borderWidth: 2 } }} />\n                    <Stack direction='row' justifyContent='flex-end' spacing={1} sx={{ mt: 1 }}>\n                        <Button variant='outlined' sx={{ textTransform: 'capitalize', px: 1, py: .5, color: '#4d4d4d', borderColor: '#e0e0e0', '&:hover': { borderColor: '#4d4d4d' } }} onClick={closePop} >Cancel</Button>\n                        <Button variant='contained' sx={{ textTransform: 'capitalize', px: 1, py: .5 }} color='primary' disabled={!label} onClick={() => handleCreate()}>Create</Button>\n                    </Stack>\n                </Box >\n            </Popover >\n            <Popover\n                anchorEl={editAnchor}\n                open={edit}\n                onClose={closePop}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: \"center\",\n                }}\n                sx={{ '& .MuiPopover-paper': { boxShadow: '0 0 0 2px #00000040' } }}\n            >\n                <Box sx={{ py: 1, px: 2, width: 300 }}>\n                    <Stack direction='row' justifyContent='flex-end' spacing={1} >\n                        <TextField placeholder='Rename' value={label} onChange={(e) => setLabel(e.target.value)} autoFocus sx={{ width: '100%', '& input': { py: 1, px: 1, fontSize: 15 }, '& fieldset': { borderWidth: 2 } }} />\n                        <Button variant='contained' sx={{ textTransform: 'capitalize', px: 1, py: .5 }} color='primary' disabled={!label} onClick={() => changName()}>Update</Button>\n                    </Stack>\n                    <Divider sx={{ my: 1 }} />\n                    <TextField placeholder='Find Users' value={selectKey} onChange={(e) => setSelectKey(e.target.value)} sx={{ width: '100%', mb: 1, '& input': { p: 1, fontSize: 13 }, '& fieldset': { borderWidth: 2 } }} />\n                    <Stack\n                        spacing={.5}\n                        sx={{ maxWidth: 500, bgcolor: '#fff' }}\n                    >\n                        {\n                            (() => {\n                                const filtered = users.filter((e) => (e.firstName + \" \" + e.lastName).toLowerCase().search(selectKey) !== -1);\n                                return (\n                                    <Box sx={{ minHeight: filtered.length * 31 }}>\n                                        {\n                                            filtered.length ? filtered.map((item, i) => {\n                                                return (\n                                                    <Stack\n                                                        key={i}\n                                                        direction='row'\n                                                        alignItems='center'\n                                                        justifyContent=\"space-between\"\n                                                        sx={{ px: 1, py: .5, cursor: 'pointer', borderRadius: 1, bgcolor: '#fff', '&:hover': { bgcolor: '#0000000d' } }}\n                                                    >\n                                                        <Stack direction='row' alignItems='center' sx={{ overflow: 'hidden', }}>\n                                                            <Typography sx={{ ml: .2, userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                                                                {`${item.firstName} ${item.lastName}`}\n                                                            </Typography>\n                                                        </Stack>\n                                                        {\n                                                            (() => {\n                                                                let idx = -1;\n                                                                if (headerList[active]) {\n                                                                    idx = item.myTable.findIndex(e => e === headerList[active]._id);\n                                                                }\n                                                                let check = (idx !== -1);\n                                                                return (\n                                                                    <AntSwitch inputProps={{ 'aria-label': 'ant design' }} checked={check} onClick={() => allowTable(item._id, headerList[active]._id, check)} />\n                                                                )\n                                                            })()\n                                                        }\n                                                    </Stack>\n                                                )\n                                            })\n                                                : <Typography sx={{ fontSize: 12, display: 'flex' }} component='div'>No results. {selectKey ? <Typography onClick={() => setSelectKey(\"\")} sx={{ ml: 1, cursor: 'pointer', fontSize: 12, textDecoration: 'underline' }}>Clear</Typography> : null}</Typography>\n                                        }\n                                    </Box>\n                                )\n                            })()\n                        }\n                    </Stack>\n                    <Divider sx={{ my: 1 }} />\n                    <Stack >\n                        <ListItem disablePadding>\n                            <ListItemButton sx={{ py: 0, px: 0.5 }} onClick={openTransferModal}>\n                                <ListItemIcon sx={{ minWidth: 36 }}>\n                                    <SwapHorizIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Transfer\" />\n                            </ListItemButton>\n                        </ListItem>\n                        {\n                            link ?\n                                <ListItem disablePadding>\n                                    <CopyToClipboard text={`${origin}/view/${link}`}>\n                                        <ListItemButton sx={{ py: 0, px: 0.5 }}  >\n                                            <ListItemIcon sx={{ minWidth: 36 }}>\n                                                <ShareIcon />\n                                            </ListItemIcon>\n                                            <ListItemText sx={{ width: \"100%\", overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }} primary={`Link: ${link}`} />\n                                        </ListItemButton>\n                                    </CopyToClipboard>\n                                </ListItem>\n                                :\n                                <ListItem disablePadding>\n                                    <ListItemButton sx={{ py: 0, px: 0.5 }} onClick={generateLink}>\n                                        <ListItemIcon sx={{ minWidth: 36 }}>\n                                            <ShareIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"Generate link\" />\n                                    </ListItemButton>\n                                </ListItem>\n                        }\n                        <ListItem disablePadding>\n                            <ListItemButton sx={{ py: 0, px: 0.5 }} onClick={deleteHandle}>\n                                <ListItemIcon sx={{ minWidth: 36 }}>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Delete\" />\n                            </ListItemButton>\n                        </ListItem>\n                    </Stack>\n                </Box >\n            </Popover >\n            <Dialog open={trnasferModal}>\n                <DialogTitle>\n                    Transfer Table\n                </DialogTitle>\n                <DialogContent>\n                    <Stack spacing={1} sx={{ py: 1 }}>\n                        <FormControl fullWidth>\n                            <InputLabel>Project Name</InputLabel>\n                            <Select\n                                sx={{ minWidth: 300 }}\n                                value={projectName}\n                                label=\"Project Name\"\n                                onChange={handleProjectName}\n                            >\n                                {\n                                    projects.map((e, i) => (\n                                        <MenuItem value={e._id} key={i}>{e.name}</MenuItem>\n                                    ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </Stack>\n                    <Stack direction='row' justifyContent='flex-end' sx={{ pt: 2 }}>\n                        <Button variant='contained' color='error' sx={{ mr: 1 }} onClick={closeTransferModal}>Cancel</Button>\n                        <Button variant='contained' color='info' onClick={handleTransfer} >\n                            Transfer\n                        </Button>\n                    </Stack>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n\nexport default GridTabs;","import { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AppsIcon from '@mui/icons-material/Apps';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { ReactComponent as Font } from '../../../assets/img/svg/font.svg';\nimport { ReactComponent as LongText } from '../../../assets/img/svg/longText.svg';\nimport { ReactComponent as Attached } from '../../../assets/img/svg/attached.svg';\nimport { ReactComponent as Option } from '../../../assets/img/svg/option.svg';\nimport { ReactComponent as Date } from '../../../assets/img/svg/date.svg';\n\nimport { updateAllowed, updateHeader, updateShowList, updateEditable } from '../../../utilis/request';\nimport AntSwitch from '../../../components/AntSwitch';\nimport useConfig from '../../../hooks/useConfig';\nimport useTableContext from '../../../hooks/useTable';\nimport { toast } from 'react-toastify';\n\nconst HideOption = () => {\n    const { user, setUser } = useConfig();\n    const { header, changeHeader, users, setUsers, hId, isAdmin } = useTableContext();\n    const [uidx, setUidx] = useState(-1);\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClose = () => setAnchorEl(null);\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\n\n    const handleHide = (e, idx, userStatus) => {\n        if (userStatus || userStatus === 0) {\n            let temp = list;\n            temp[idx].allowed = e.target.checked;\n            setList([...temp]);\n        } else {\n            let nHeader = header;\n            nHeader[idx].hide = !e.target.checked;\n            list[idx].hide = !e.target.checked;\n            let newShowList = { ...user.showList, [list[idx].id]: !e.target.checked };\n            updateShowList(user._id, newShowList);\n            setUser({ ...user, showList: newShowList });\n            setList(list);\n            changeHeader(nHeader);\n        }\n    }\n\n    const handleAll = (flag, uidx) => {\n        if (uidx > -1) {\n            let temp = list.map((e) => {\n                e.allowed = !flag;\n                return e;\n            })\n            setList([...temp]);\n        } else {\n            let nHeader = header.map((e, i) => ({ ...e, hide: flag }));\n            changeHeader(nHeader);\n        }\n    }\n\n    const userChange = (event) => {\n        setUidx(event.target.value);\n    };\n\n    const handleAllowSave = async (id) => {\n        let allowed = list.map((e) => e.allowed);\n        let allowIds = list.filter((e) => e.allowed).map((e) => e.id);\n        let editable = list.filter((e) => e.editable).map((e) => e.id);\n        let temp = users;\n        let i = users.findIndex((e) => e._id === id);\n        if (i > -1) {\n            temp[i].allowed[hId] = allowed;\n            temp[i].allowIds[hId] = allowIds;\n            temp[i].editable[hId] = editable;\n            setUsers(temp);\n            const rdata = await updateAllowed({ id: temp[i]._id, allowed, allowIds, editable, hId });\n            if (!rdata.status) {\n                toast.error(\"Can not update data\")\n            }\n            handleClose();\n        } else {\n            toast.error(\"User not found\")\n            handleClose();\n        }\n    }\n\n    const onDragEnd = (result, header) => {\n        if (result.destination) {\n            let tempHeader = header, startIndex = result.source.index, endIndex = result.destination.index, newOrder = [];\n\n            if (startIndex < endIndex) {\n                for (let item of tempHeader) {\n                    if (item.order === startIndex) {\n                        item.order = endIndex;\n                    } else if (item.order > startIndex && item.order <= endIndex) {\n                        item.order--;\n                    }\n                    console.log(item.order)\n                    newOrder.push(item);\n                }\n            } else {\n                for (let item of tempHeader) {\n                    if (item.order === startIndex) {\n                        item.order = endIndex;\n                    } else if (item.order >= endIndex && item.order < startIndex) {\n                        item.order++;\n                    }\n                    newOrder.push(item);\n                }\n            }\n            changeHeader([...newOrder]);\n            getHeaderData();\n            updateHeader({ row: newOrder, hId });\n        }\n    }\n\n    const handleEdit = (e, idx, userStatus) => {\n        if (userStatus > -1) {\n            let temp = list;\n            temp[idx].editable = e.target.checked;\n            setList([...temp]);\n        } else {\n            let nHeader = header;\n            list[idx].editable = !e.target.checked;\n            let editable = user.editable ?? {};\n            let oldEditable = user.editable && user.editable[hId] ? user.editable[hId] : {};\n            let newEditable = { ...oldEditable, [list[idx].id]: e.target.checked };\n            updateEditable(user._id, { ...editable, [hId]: newEditable });\n            setUser({ ...user, editable: { ...editable, [hId]: newEditable } });\n            setList(list);\n            changeHeader(nHeader);\n        }\n    }\n\n    const getHeaderData = () => {\n        if (uidx > -1) {\n            let fUsers = users.filter((e) => { return (e.role !== 'Admin') });       // only users, not admins\n            let allowed = fUsers[uidx].allowed && fUsers[uidx].allowed[hId] ? fUsers[uidx].allowed[hId] : [];\n            let editable = fUsers[uidx].editable && fUsers[uidx].editable[hId] ? fUsers[uidx].editable[hId] : [];\n\n            if (allowed.length) {\n                const aList = header.map((e, i) => {\n                    let eVal = false;\n                    for (let eId of editable) {\n                        if (eId === e.id) {\n                            eVal = true;\n                            break;\n                        }\n                    }\n                    return { ...e, allowed: allowed[i], index: i, editable: eVal }\n                });\n                setList(aList)\n            } else {\n                const nList = header.map((e, i) => {\n                    let eVal = false;\n                    for (let eId of editable) {\n                        if (eId === e.id) {\n                            eVal = true;\n                            break;\n                        }\n                    }\n                    return { ...e, allowed: false, index: i, editable: eVal }\n                });\n                setList(nList)\n            }\n        } else {\n            const iList = header.filter((e) => e.allowed).map((e, i) => ({ ...e, index: i, editable: true }));\n            setList(iList)\n        }\n    }\n\n    useEffect(() => {\n        getHeaderData();\n        /* eslint-disable-next-line */\n    }, [header, uidx])\n\n    return (\n        <Box>\n            <Button\n                size='small'\n                startIcon={<VisibilityOffIcon sx={{ fontSize: 16 }} />}\n                onClick={handleClick}\n                sx={{\n                    px: 1,\n                    fontSize: 13,\n                    color: '#4d4d4d',\n                    textTransform: 'capitalize',\n                    '&:hover': { bgcolor: '#0000000d' }\n                }}>\n                Hide fields\n            </Button>\n            {\n                isAdmin ?\n                    <Popover\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={handleClose}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                    >\n                        <Box sx={{ py: 1, px: 2 }}>\n                            <TextField placeholder='Find an option' value={selectKey} onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ borderBottom: '1px solid #0000001a', pt: 1, pb: .5, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                            {\n                                (() => {\n                                    let list = users.filter((e) => {\n                                        return (e.role !== 'Admin');\n                                    });\n\n                                    if (list[uidx]) {\n                                        return (\n                                            <Typography sx={{ fontSize: 11, py: 1 }}>For {`${list[uidx].firstName} ${list[uidx].lastName}`}</Typography>\n                                        )\n                                    } else {\n                                        return null;\n                                    }\n                                })()\n                            }\n                            <Stack direction='row'>\n                                <Typography sx={{ fontSize: 12, color: '#1976d2' }}>Visible</Typography>\n                                <Typography sx={{ fontSize: 12, ml: 2, color: '#1976d2' }}>Editable</Typography>\n                            </Stack>\n                            <Box sx={{ py: 1 }}>\n                                <DragDropContext onDragEnd={(e) => onDragEnd(e, header)}>\n                                    <Droppable droppableId=\"field-order\" type=\"field-order\">\n                                        {(provided, snapshot) => (\n                                            <Stack\n                                                ref={provided.innerRef}\n                                                {...provided.droppableProps}\n                                                spacing={.5}\n                                                sx={{ maxWidth: 500, minWidth: 300, bgcolor: '#fff' }}\n                                            >\n                                                {\n                                                    (() => {\n                                                        const filtered = list.filter((e) => e.name.toLowerCase().search(selectKey) !== -1).sort((a, b) => a.order - b.order);\n                                                        return (\n                                                            <Box sx={{ minWidth: filtered.length * 27.5 }}>\n                                                                {\n                                                                    filtered.length ? filtered.map((item, i) => {\n                                                                        return (\n                                                                            <Draggable draggableId={item.name} index={i} key={item.name + i}>\n                                                                                {(provided, snapshot) => (\n                                                                                    <Stack\n                                                                                        {...provided.draggableProps}\n                                                                                        {...provided.dragHandleProps}\n                                                                                        ref={provided.innerRef}\n                                                                                        direction='row'\n                                                                                        alignItems='center'\n                                                                                        justifyContent='space-between'\n                                                                                        sx={{ px: 1, py: .5, cursor: 'pointer', borderRadius: 1, bgcolor: '#fff', '&:hover': { bgcolor: '#0000000d' }, boxShadow: snapshot.isDragging ? '0 0 6px #898585' : '' }}\n                                                                                    >\n                                                                                        <Stack direction='row' alignItems='center'>\n                                                                                            <AntSwitch checked={(uidx >= 0) ? (item.allowed ? true : false) : !item.hide} inputProps={{ 'aria-label': 'ant design' }} onChange={(e) => handleHide(e, item.index, uidx)} />\n                                                                                            <AntSwitch disabled={(uidx === -1)} checked={item.editable} sx={{ ml: 4, opacity: uidx === -1 ? 0.5 : 1 }} onChange={(e) => handleEdit(e, item.index, uidx)} />\n                                                                                            <Stack direction='row' alignItems='center' sx={{ overflow: 'hidden', }}>\n                                                                                                <Stack sx={{ mr: 1, ml: 2, '& svg': { height: 13, width: 15 } }}>\n                                                                                                    {\n                                                                                                        (() => {\n                                                                                                            switch (item.type) {\n                                                                                                                case 'text':\n                                                                                                                    return <Font />\n                                                                                                                case 'longText':\n                                                                                                                    return <LongText />\n                                                                                                                case 'email':\n                                                                                                                    return <Font />\n                                                                                                                case 'attached':\n                                                                                                                    return <Attached />\n                                                                                                                case 'date':\n                                                                                                                    return <Date />\n                                                                                                                case 'select':\n                                                                                                                    return <Option />\n                                                                                                                default:\n                                                                                                                    return <Font />\n                                                                                                            }\n                                                                                                        })()\n                                                                                                    }\n                                                                                                </Stack>\n                                                                                                <Typography sx={{ ml: .2, userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                                                                                                    {item.name}\n                                                                                                </Typography>\n                                                                                            </Stack>\n                                                                                        </Stack>\n                                                                                        <AppsIcon sx={{ fontSize: 13, color: 'gray' }} />\n                                                                                    </Stack>\n                                                                                )}\n                                                                            </Draggable>\n                                                                        )\n                                                                    })\n                                                                        : <Typography sx={{ fontSize: 12, display: 'flex' }} component='div'>No results. {selectKey ? <Typography onClick={() => setSelectKey(\"\")} sx={{ ml: 1, cursor: 'pointer', fontSize: 12, textDecoration: 'underline' }}>Clear</Typography> : null}</Typography>\n                                                                }\n                                                                {provided.placeholder}\n                                                            </Box>\n                                                        )\n                                                    })()\n                                                }\n                                            </Stack>\n                                        )}\n                                    </Droppable>\n                                </DragDropContext>\n                            </Box>\n                            {\n                                list.filter((e) => e.name.toLowerCase().search(selectKey) !== -1).length ?\n                                    <Stack direction='row' spacing={2}>\n                                        <Button variant='contained' onClick={() => handleAll(true, uidx)} sx={{ width: '50%', textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Hide all</Button>\n                                        <Button variant='contained' onClick={() => handleAll(false, uidx)} sx={{ width: '50%', textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Show all</Button>\n                                    </Stack>\n                                    : null\n                            }\n                            {\n                                (() => {\n                                    if (isAdmin) {\n                                        const onlyUser = users.filter((e) => e.role !== 'Admin')\n                                        return (\n                                            <Box sx={{ pt: 1 }}>\n                                                <Divider />\n                                                <Select\n                                                    sx={{ width: '100%', mt: 1, '& .MuiSelect-select': { py: 1, } }}\n                                                    value={uidx}\n                                                    onChange={userChange}\n                                                >\n                                                    <MenuItem value={-1}>\n                                                        <em>For Admin</em>\n                                                    </MenuItem>\n                                                    {\n                                                        onlyUser.map(({ _id, firstName, lastName, department }, i) => (\n                                                            <MenuItem key={_id} value={i}>\n                                                                <Stack direction='row' justifyContent='space-between' alignItems='center' width='100%'>\n                                                                    <Typography sx={{ fontSize: 14 }}> {`${firstName} ${lastName}`}</Typography>\n                                                                    <Typography sx={{ fontSize: 10 }} align=\"right\" > {department}</Typography>\n                                                                </Stack>\n                                                            </MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                                <Button disabled={uidx < 0} onClick={() => handleAllowSave(onlyUser[uidx]._id)} variant='contained' sx={{ width: '100%', mt: 1, textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Save options</Button>\n                                            </Box>\n                                        )\n                                    } else {\n                                        return null;\n                                    }\n                                })()\n                            }\n                        </Box>\n                    </Popover>\n                    :\n                    <Popover\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={handleClose}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                    >\n                        <Box sx={{ py: 1, px: 2 }}>\n                            <TextField placeholder='Find an option' onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ borderBottom: '1px solid #0000001a', pt: 1, pb: .5, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                            <Box sx={{ py: 1 }}>\n                                <Stack\n                                    spacing={.5}\n                                    sx={{ maxWidth: 500, minWidth: 300, bgcolor: '#fff' }}\n                                >\n                                    {\n                                        (() => {\n                                            const filtered = list.filter((e) => e.name.toLowerCase().search(selectKey) !== -1).sort((a, b) => a.order - b.order);\n                                            return (\n                                                <Box sx={{ minHeight: filtered.length * 31 }}>\n                                                    {\n                                                        filtered.length ? filtered.map((item, i) => {\n                                                            return (\n                                                                <Stack\n                                                                    key={i}\n                                                                    direction='row'\n                                                                    alignItems='center'\n                                                                    sx={{ px: 1, py: .5, cursor: 'pointer', borderRadius: 1, bgcolor: '#fff', '&:hover': { bgcolor: '#0000000d' } }}\n                                                                >\n                                                                    <AntSwitch checked={(uidx || uidx === 0) ? (item.allowed ? true : false) : !item.hide} inputProps={{ 'aria-label': 'ant design' }} onChange={(e) => handleHide(e, item.index, uidx)} />\n                                                                    <Stack direction='row' alignItems='center' sx={{ overflow: 'hidden', }}>\n                                                                        <Stack sx={{ mr: 1, ml: 2, '& svg': { height: 13, width: 15 } }}>\n                                                                            {\n                                                                                (() => {\n                                                                                    switch (item.type) {\n                                                                                        case 'text':\n                                                                                            return <Font />\n                                                                                        case 'longText':\n                                                                                            return <LongText />\n                                                                                        case 'email':\n                                                                                            return <Font />\n                                                                                        case 'attached':\n                                                                                            return <Attached />\n                                                                                        case 'date':\n                                                                                            return <Date />\n                                                                                        case 'select':\n                                                                                            return <Option />\n                                                                                        default:\n                                                                                            return <Font />\n                                                                                    }\n                                                                                })()\n                                                                            }\n                                                                        </Stack>\n                                                                        <Typography sx={{ ml: .2, userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                                                                            {item.name}\n                                                                        </Typography>\n                                                                    </Stack>\n                                                                </Stack>\n                                                            )\n                                                        })\n                                                            : <Typography sx={{ fontSize: 12, display: 'flex' }} component='div'>No results. {selectKey ? <Typography onClick={() => setSelectKey(\"\")} sx={{ ml: 1, cursor: 'pointer', fontSize: 12, textDecoration: 'underline' }}>Clear</Typography> : null}</Typography>\n                                                    }\n                                                </Box>\n                                            )\n                                        })()\n                                    }\n                                </Stack>\n                            </Box>\n\n                            {\n                                list.filter((e) => e.name.toLowerCase().search(selectKey) !== -1).length ?\n                                    <Stack direction='row' spacing={2}>\n                                        <Button variant='contained' onClick={() => handleAll(true, uidx)} sx={{ width: '50%', textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Hide all</Button>\n                                        <Button variant='contained' onClick={() => handleAll(false, uidx)} sx={{ width: '50%', textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Show all</Button>\n                                    </Stack>\n                                    : null\n                            }\n                        </Box>\n                    </Popover>\n            }\n        </Box>\n    )\n}\n\nexport default HideOption;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Select from '@mui/material/Select';\nimport Popover from '@mui/material/Popover';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\n\nimport { ReactComponent as Font } from '../../../assets/img/svg/font.svg';\nimport { ReactComponent as LongText } from '../../../assets/img/svg/longText.svg';\nimport { ReactComponent as Attached } from '../../../assets/img/svg/attached.svg';\nimport { ReactComponent as Option } from '../../../assets/img/svg/option.svg';\nimport { ReactComponent as Date } from '../../../assets/img/svg/date.svg';\n\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport useTableContext from '../../../hooks/useTable';\n\nconst conditions = [{ label: 'contains...', value: 'contain' }, { label: 'does not contain...', value: 'notContain' }, { label: 'is...', value: 'is' }, { label: 'is not...', value: 'isNot' }, { label: 'is empty', value: 'isEmpty' }, { label: 'is not empty', value: 'notEmpty' }];\n\nexport const compare = (data, condition, key) => {\n    switch (condition) {\n        case 'contain':\n            if (data.toLocaleLowerCase().search(key.toLocaleLowerCase()) > -1) return true;\n            return false;\n        case 'notContain':\n            if (data.toLocaleLowerCase().search(key.toLocaleLowerCase()) > -1) return false;\n            return true;\n        case 'is':\n            if (data.toLocaleLowerCase() === key.toLocaleLowerCase()) return true;\n            return false;\n        case 'isNot':\n            if (data.toLocaleLowerCase() === key.toLocaleLowerCase()) return false;\n            return true;\n        case 'isEmpty':\n            if (data.toLocaleLowerCase() === '') return true;\n            return false;\n        case 'notEmpty':\n            if (data.toLocaleLowerCase() !== '') return true;\n            return false;\n        default:\n            return false;\n    }\n}\n\nconst Filter = () => {\n    const { header, changeFilterBody, filterItem, setFilterItem, body, setFilter } = useTableContext();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const [type, setType] = useState('or');\n\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\n    const handleClose = (event) => setAnchorEl(null);\n    const handleAdd = () => {\n        let one = {\n            field: 0,\n            condition: 'contain',\n            value: ''\n        }\n        setFilterItem([...filterItem, one])\n    };\n    const handleChange = (i, k, v) => {\n        let temp = filterItem;\n        filterItem[i][k] = v;\n        setFilterItem([...temp]);\n    }\n    const handleDelete = (i) => {\n        let temp = filterItem;\n        temp.splice(i, 1);\n        setFilterItem([...temp]);\n    }\n    /* eslint-disable */\n    useEffect(() => {\n        if (filterItem.length) {\n            setFilter(true);\n            let temp = body.filter((e) => {\n                let result = [];\n                for (const k in filterItem) {\n                    let data = '', n, idx = filterItem[k].field;\n                    switch (header[idx].type) {\n                        case 'text':\n                        case 'date':\n                        case 'email':\n                        case 'longText':\n                            data = e.row[filterItem[k].field].data;\n                            break;\n                        case 'select':\n                            n = e.row[filterItem[k].field].data;\n                            data = header[filterItem[k].field].list[Number(n)].label;\n                            break;\n                        case 'attached':\n                            let imgs = e.row[filterItem[k].field].data;\n                            data = imgs.map((e) => e.originalname).join(',');\n                            break;\n                        default:\n                            data = e.row[filterItem[k].field].data;\n                            return data;\n\n                    }\n                    result.push(compare(data, filterItem[k].condition, filterItem[k].value));\n                }\n                if (type === 'and' && result.filter(p => !p).length === 0) {\n                    return true;\n                } else if (type === 'or' && result.filter(p => p).length > 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            })\n            changeFilterBody([...temp])\n        } else {\n            setFilter(false);\n            changeFilterBody([]);\n        }\n    }, [filterItem, type])\n    /* eslint-enable */\n\n    return (\n        <Box>\n            <Button\n                size='small'\n                startIcon={<FilterListIcon sx={{ fontSize: 16 }} />}\n                onClick={handleClick}\n                sx={{\n                    px: 1,\n                    fontSize: 13,\n                    color: '#4d4d4d',\n                    textTransform: 'capitalize',\n                    '&:hover': { bgcolor: '#0000000d' }\n                }}>\n                Filter\n            </Button>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <Box sx={{ py: 1, px: 2 }}>\n                    <Typography sx={{ ml: .2, userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                        In this view, show tasks\n                    </Typography>\n                    <Box sx={{ py: 1 }}>\n                        <Stack spacing={1} sx={{ minWidth: 300 }}>\n                            {\n                                filterItem.map((one, a) => (\n                                    <Stack direction='row' alignItems='center' key={a}>\n                                        {\n                                            (() => {\n                                                if (a === 0) {\n                                                    return (\n                                                        <Typography sx={{ width: 60, mr: 1, display: 'flex', justifyContent: 'center', userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                                                            Where\n                                                        </Typography>\n                                                    )\n                                                } else if (a === 1) {\n                                                    return (\n                                                        <Select\n                                                            value={type}\n                                                            onChange={(e) => setType(e.target.value)}\n                                                            sx={{\n                                                                width: 60,\n                                                                mr: 1,\n                                                                borderRadius: 0,\n                                                                border: '1px solid #0000001a',\n                                                                '& .MuiSelect-select': {\n                                                                    py: 0,\n                                                                    pl: .5,\n                                                                    display: 'flex',\n                                                                    alignItems: 'center',\n                                                                    '& .MuiTypography-root': {\n                                                                        fontSize: 13,\n                                                                    }\n                                                                },\n                                                                '& fieldset': { display: 'none' },\n                                                                '& .MuiListItemIcon-root': {\n                                                                    minWidth: 0,\n                                                                    '& div': { margin: 0 }\n                                                                }\n                                                            }} >\n                                                            {\n                                                                ['or', 'and',].map((item, i) => (\n                                                                    <MenuItem value={item} key={i}>\n                                                                        <ListItemText>{item}</ListItemText>\n                                                                    </MenuItem>\n                                                                ))\n                                                            }\n                                                        </Select>\n                                                    )\n                                                } else {\n                                                    return (\n                                                        <Typography sx={{ width: 60, mr: 1, display: 'flex', justifyContent: 'center', userSelect: 'none', fontSize: 13, color: '#4d4d4d', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '100%' }}>\n                                                            {type}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            })()\n                                        }\n                                        <Stack>\n                                            <Stack direction='row' alignItems='center'>\n                                                <Select\n                                                    value={one.field}\n                                                    onChange={(e) => handleChange(a, 'field', e.target.value)}\n                                                    sx={{\n                                                        width: 140,\n                                                        borderRadius: 0,\n                                                        border: '1px solid #0000001a',\n                                                        borderRight: 0,\n                                                        '& .MuiSelect-select': {\n                                                            py: 0,\n                                                            pl: .5,\n                                                            display: 'flex',\n                                                            alignItems: 'center',\n                                                            '& .MuiTypography-root': {\n                                                                fontSize: 13,\n                                                                overflow: 'hidden',\n                                                                textOverflow: 'ellipsis'\n                                                            }\n                                                        },\n                                                        '& fieldset': { display: 'none' },\n                                                        '& .MuiListItemIcon-root': {\n                                                            minWidth: 0,\n                                                            '& div': { margin: 0 }\n                                                        }\n                                                    }}\n                                                >\n                                                    {\n                                                        header.map((item, i) => (\n                                                            <MenuItem value={i} key={i}>\n                                                                <ListItemIcon sx={{ minWidth: '0px !important', }}>\n                                                                    <Stack sx={{ mr: .5, '& svg': { height: 13 } }}>\n                                                                        {\n                                                                            (() => {\n                                                                                switch (item.type) {\n                                                                                    case 'text':\n                                                                                        return <Font />\n                                                                                    case 'longText':\n                                                                                        return <LongText />\n                                                                                    case 'email':\n                                                                                        return <Font />\n                                                                                    case 'attached':\n                                                                                        return <Attached />\n                                                                                    case 'date':\n                                                                                        return <Date />\n                                                                                    case 'select':\n                                                                                        return <Option />\n                                                                                    default:\n                                                                                        return <Font />\n                                                                                }\n                                                                            })()\n                                                                        }\n                                                                    </Stack>\n                                                                </ListItemIcon>\n                                                                <ListItemText>{item.name}</ListItemText>\n                                                            </MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                                <Select\n                                                    value={one.condition}\n                                                    onChange={(e) => handleChange(a, 'condition', e.target.value)}\n                                                    sx={{\n                                                        width: 140,\n                                                        borderRadius: 0,\n                                                        border: '1px solid #0000001a',\n                                                        borderRight: 0,\n                                                        '& .MuiSelect-select': {\n                                                            py: 0,\n                                                            pl: .5,\n                                                            display: 'flex',\n                                                            alignItems: 'center',\n                                                            '& .MuiTypography-root': {\n                                                                fontSize: 13,\n                                                            }\n                                                        },\n                                                        '& fieldset': { display: 'none' },\n                                                        '& .MuiListItemIcon-root': {\n                                                            minWidth: 0,\n                                                            '& div': { margin: 0 }\n                                                        }\n                                                    }} >\n                                                    {\n                                                        conditions.map((item, i) => (\n                                                            <MenuItem value={item.value} key={i}>\n                                                                <ListItemText>{item.label}</ListItemText>\n                                                            </MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                                <TextField onChange={(e) => handleChange(a, 'value', e.target.value)} placeholder='Enter a value' value={one.value} sx={{ borderRadius: 0, border: '1px solid #0000001a', borderRight: 0, '& fieldset': { display: 'none' }, '& input': { p: .5, fontSize: 13 } }} />\n                                                <Box onClick={() => handleDelete(a)} sx={{ cursor: 'pointer', borderRadius: 0, border: '1px solid #0000001a', p: .5, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                    <DeleteIcon sx={{ fontSize: 19 }} />\n                                                </Box>\n                                            </Stack>\n                                        </Stack>\n                                    </Stack>\n                                ))\n                            }\n                        </Stack>\n                    </Box>\n                    <Stack direction='row' spacing={2}>\n                        <Button onClick={handleAdd} startIcon={<AddIcon sx={{ fontSiz: 13 }} />} variant='contained' sx={{ textTransform: 'capitalize', color: '#4d4d4d', fontSize: 11, bgcolor: '#0000000d', py: .5, '&:hover': { bgcolor: '#0000000d' } }}>Add condition</Button>\n                    </Stack>\n                </Box>\n            </Popover >\n        </Box >\n    )\n}\n\nexport default Filter;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { deleteSelected } from '../../../utilis/request';\nimport useTableContext from '../../../hooks/useTable';\nimport HideOption from './Hide';\nimport Filter, { compare } from './Filter';\n\nconst SubTools = () => {\n    const [selectKey, setSelectKey] = useState(\"\");\n    const { header, changeFilterBody, body, changeBody, deleteRowList, setDeleteRowList } = useTableContext();\n\n    const [showSearch, setShowSearch] = useState(false);\n    const deleteAll = () => {\n        deleteSelected(deleteRowList);\n        let remain = body.filter((one) => {\n            let flag = deleteRowList.findIndex((idOne) => idOne === one._id);\n            return (flag === -1);\n        });\n        remain.sort((a, b) => a.order - b.order);\n        for (let i = 0; i < remain.length; i++) {\n            remain[i].order = i;\n        }\n        changeBody([...remain]);\n        setDeleteRowList([]);\n    }\n\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (selectKey) {\n            let newBody = body;\n            let temp = newBody.map((item) => {\n                for (let i = 0; i < item.row.length; i++) {\n                    let data = '', n;\n                    switch (header[i].type) {\n                        case 'text':\n                        case 'date':\n                        case 'email':\n                        case 'longText':\n                            data = item.row[i].data;\n                            break;\n                        case 'select':\n                            n = item.row[i].data;\n                            data = header[i].list[Number(n)] ? header[i].list[Number(n)].label : \"\";\n                            break;\n                        case 'attached':\n                            let imgs = item.row[i].data;\n                            data = imgs.map((e) => e.originalname).join(',');\n                            break;\n                        default:\n                            data = item.row[i].data;\n                            return data;\n\n                    }\n                    if (compare(data, 'contain', selectKey)) {\n                        item.row[i].search = true;\n                    } else {\n                        item.row[i].search = false;\n                    }\n                }\n                return item;\n            })\n            changeFilterBody([...temp])\n            // setFilter(true);\n        } else {\n            // setFilter(false);\n            let newBody = body;\n            let temp = newBody.map((item) => {\n                for (let i = 0; i < item.row.length; i++) {\n                    item.row[i].search = false;\n                }\n                return item;\n            })\n            changeFilterBody([...temp])\n        }\n    }, [selectKey])\n    /* eslint-enable */\n\n    return (\n        <Stack\n            direction='row'\n            alignItems='center'\n            justifyContent='space-between'\n            sx={{\n                top: 0,\n                left: 0,\n                zIndex: 7,\n                height: 44,\n                position: 'relative',\n                bgcolor: '#fff',\n                whiteSpace: 'nowrap',\n                boxShadow: 'rgb(200 200 200) 0 1px 0 0'\n            }}>\n            <Stack\n                direction='row'\n                alignItems='center'\n                spacing={.5}\n                sx={{ height: 26, px: 2, }}\n            >\n                {\n                    deleteRowList.length ?\n                        <Button\n                            size='small'\n                            startIcon={<DeleteIcon sx={{ fontSize: 16 }} />}\n                            onClick={deleteAll}\n                            sx={{\n                                px: 1,\n                                fontSize: 13,\n                                color: '#f82b60',\n                                textTransform: 'capitalize',\n                                '&:hover': { bgcolor: '#0000000d' }\n                            }}>\n                            Delete Selected Rows\n                        </Button> : null\n                }\n                <HideOption />\n                <Filter />\n            </Stack>\n            <Stack\n                direction='row'\n                alignItems='center'\n                sx={{ height: 26, pr: 2, position: 'relative' }}\n            >\n                <SearchIcon sx={{ fontSize: 24, cursor: 'pointer' }} onClick={() => setShowSearch(true)} />\n                {\n                    showSearch &&\n                    <Box sx={{ width: 300, position: 'absolute', bottom: -46, right: 10, bgcolor: '#fff', borderWidth: '0px 2px 2px', borderStyle: 'solid', borderColor: '#0000001a', borderBottomLeftRadius: 3, borderBottomRightRadius: 3 }}>\n                        <Stack direction='row' alignItems='center'>\n                            <TextField onChange={(e) => setSelectKey(e.target.value)} placeholder='Search' sx={{ py: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                            <CloseIcon sx={{ opacity: .5, cursor: 'pointer', fontSize: 20, mr: .5 }} onClick={() => setShowSearch(false)} />\n                        </Stack>\n                    </Box>\n                }\n            </Stack>\n        </Stack>\n    )\n}\n\nexport default SubTools;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSortZa(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    className: \"flex-none mr1 text-color-quiet\",\n    style: {\n      shapeRendering: \"geometricprecision\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    fill: \"currentColor\",\n    d: \"M1.94 1h12.12c.506 0 .94.424.94.948a.942.942 0 0 1-.94.948H1.94A.953.953 0 0 1 1 1.948C1 1.421 1.421 1 1.94 1zm.017 3h9.086c.54 0 .957.424.957.948a.95.95 0 0 1-.957.948H1.957A.946.946 0 0 1 1 4.948.95.95 0 0 1 1.957 4zm-.008 3.104h6.102c.519 0 .949.424.949.948A.946.946 0 0 1 8.05 9h-6.1A.952.952 0 0 1 1 8.052c0-.528.425-.948.95-.948zM1.951 10h4.098a.947.947 0 1 1 0 1.896H1.951a.947.947 0 1 1 0-1.896zm-.003 3.104h2.104a.95.95 0 0 1 .948.948.946.946 0 0 1-.948.948H1.948A.95.95 0 0 1 1 14.052c0-.527.424-.948.948-.948zM14 12h1a.5.5 0 0 1 .416.777l-1.341 1.906c-.317.45-.832.451-1.15 0l-1.341-1.906A.5.5 0 0 1 12 12h1V8.5c0-.275.225-.5.5-.5s.5.225.5.5V12z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSortZa);\nexport default __webpack_public_path__ + \"static/media/sortZA.0454b7d2b68f5ef63134bb8e5b876aa4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\n\nimport { ReactComponent as SortAZ } from '../../../assets/img/svg/sortAZ.svg';\nimport { ReactComponent as SortZA } from '../../../assets/img/svg/sortZA.svg';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport PushPinIcon from '@mui/icons-material/PushPin';\n\nimport { removeColumn, updateShowList } from '../../../utilis/request';\nimport Icons from '../../../components/Icons';\nimport useTableContext from '../../../hooks/useTable';\nimport useConfig from '../../../hooks/useConfig';\n\nconst TableHeader = (props) => {\n    const { i, me } = props;\n    const { header, changeFilterBody, body, setFilter, changeBody, changeHeader, hId, setColumHandle, isAdmin } = useTableContext()\n    const { user, setUser } = useConfig()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [sorted, setSorted] = useState(false);\n    const [order, setOrder] = useState(true);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\n    const handleClose = (event) => setAnchorEl(null);\n    const columnSort = (flag, idx) => {\n        setSorted(!sorted)\n        setOrder(flag);\n    }\n\n    const setPin = () => {\n        console.log(header)\n        let fixHeader = header.map((item) => {\n            if (item.order <= me.order) {\n                return { ...item, fixed: true }\n            } else {\n                return { ...item, fixed: false }\n            }\n        })\n\n        changeHeader(fixHeader)\n    }\n\n    const deleteField = (i) => {\n        let newHeader = [], tempBody = body;\n        for (let item of header) {\n            if (item.order === header[i].order) continue;\n            if (item.order > header[i].order) {\n                item.order--;\n            }\n            newHeader.push(item);\n        }\n        tempBody = tempBody.map((e) => {\n            let item = e;\n            item.row.splice(i, 1);\n            return item;\n        })\n        changeHeader(newHeader);\n        changeBody(tempBody);\n        removeColumn({ hId, index: i });\n        setAnchorEl(null);\n    }\n\n    const hideField = () => {\n        let nHeader = header;\n        nHeader[i].hide = true;\n\n        updateShowList(user._id, { ...user.showList, [nHeader[i].id]: true });\n        setUser({ ...user, showList: { ...user.showList, [nHeader[i].id]: true } });\n        changeHeader(nHeader);\n    }\n\n    const addField = (direction) => {\n        setColumHandle({\n            direction: direction,\n            target: anchorEl.parentElement,\n            index: direction === 'right' ? header[i].order + 1 : header[i].order,\n            type: 'add'\n        })\n        setAnchorEl(null);\n    }\n\n    const editaddField = (direction) => {\n        setColumHandle({\n            direction: direction,\n            target: anchorEl.parentElement,\n            index: header[i].order,\n            type: 'edit'\n        })\n        setAnchorEl(null);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (sorted) {\n            let temp = body.sort((a, b) => {\n                let adata, bdata, n;\n                switch (header[i].type) {\n                    case 'text':\n                    case 'date':\n                    case 'email':\n                    case 'link':\n                    case 'longText':\n                        adata = a.row[i].data;\n                        bdata = b.row[i].data;\n                        break;\n                    case 'select':\n                        n = a.row[i].data;\n                        adata = header[i].list[Number(n)].label;\n                        n = b.row[i].data;\n                        bdata = header[i].list[Number(n)].label;\n                        break;\n                    case 'attached':\n                        adata = a.row[i].data.length;\n                        bdata = b.row[i].data.length;\n                        break;\n                    default:\n                        adata = a.row[i].data;\n                        bdata = b.row[i].data;\n                        return adata;\n                }\n                if (order) {\n\n                    if (adata < bdata) {\n                        return -1;\n                    }\n                    if (adata > bdata) {\n                        return 1;\n                    }\n                } else {\n                    if (adata < bdata) {\n                        return 1;\n                    }\n                    if (adata > bdata) {\n                        return -1;\n                    }\n                }\n            })\n            setFilter(true)\n            changeFilterBody([...temp])\n        }\n    }, [body, sorted, setOrder])\n    /* eslint-enable */\n\n    return (\n        <>\n            <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ height: '100%', width: '100%', px: '5px' }}>\n                <Stack direction='row' alignItems='center' sx={{ overflow: 'hidden' }}>\n                    <Box sx={{ display: 'flex' }}>\n                        <Icons type={header[i].type} editable={me.editable} />\n                    </Box>\n\n                    <Box sx={{\n                        maxWidth: \"100%\",\n                        overflow: 'hidden',\n                        textOverflow: \"ellipsis\",\n                        whiteSpace: \"nowrap\",\n                    }}>\n                        <Typography\n                            variant='span'\n                            sx={{\n                                ml: '5px',\n                                color: me.editable ? '#0ed114' : '#333333',\n                                fontWeight: me.editable ? 600 : 300,\n                                fontSize: 13,\n                                userSelect: 'none'\n                            }}\n                        >\n                            {me.name}\n                        </Typography>\n                    </Box>\n                </Stack>\n                <ArrowDropDownIcon onClick={handleClick} sx={{ cursor: 'pointer', fontSiz: 12, color: '#555555', opacity: .4, '&:hover': { opacity: 1 } }} />\n            </Stack>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n\n                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n            >\n                <Box sx={{ py: 1, px: 2 }}>\n                    <Box sx={{ py: 1 }}>\n                        <Stack spacing={.5} sx={{ minWidth: 200 }}>\n                            {\n                                isAdmin ?\n                                    <>\n                                        <Button onClick={() => editaddField('left')} startIcon={<EditIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Edit field</Button>\n                                        <Divider />\n                                    </>\n                                    : null\n                            }\n                            {\n                                isAdmin ?\n                                    <>\n                                        <Button disabled={me.order === 0} onClick={() => addField('left')} startIcon={<ArrowBackIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Insert left</Button>\n                                        <Button onClick={() => addField('right')} startIcon={<ArrowForwardIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Insert right</Button>\n                                        <Divider />\n                                        <Button onClick={() => setPin()} startIcon={<PushPinIcon />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Fixed</Button>\n                                        <Divider />\n                                    </>\n                                    : null\n                            }\n                            <Button onClick={() => columnSort(true, i)} startIcon={<SortAZ />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Sort A ~ Z</Button>\n                            <Button onClick={() => columnSort(false, i)} startIcon={<SortZA />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Sort Z ~ A</Button>\n                            <Divider />\n                            <Button onClick={() => hideField()} startIcon={<VisibilityOffIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Hide field</Button>\n                            {\n                                isAdmin ?\n                                    <Button onClick={() => deleteField(i)} startIcon={<DeleteIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize' }}>Delete</Button>\n                                    : null\n                            }\n                        </Stack>\n                    </Box>\n                </Box>\n            </Popover >\n        </>\n    )\n}\n\nexport default TableHeader;","import React, { useContext } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport { TableContext } from '../../../contexts/table';\nimport { Typography } from '@mui/material';\nimport { allCheckWidth } from '../../../config/constant';\n\nconst AllCheck = () => {\n    const { body, deleteRowList, setDeleteRowList } = useContext(TableContext);\n\n    const handleAll = (e) => {\n        if (e.target.checked) {\n            let all = body.map((one) => one._id);\n            setDeleteRowList([...all]);\n        } else {\n            setDeleteRowList([]);\n        }\n    }\n\n    return (\n        <>\n            <Box sx={{ position: 'sticky', left: 0, zIndex: 9, display: 'flex', alignItems: 'center', order: -2, height: '100%', width: allCheckWidth, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3' }}>\n                <Box sx={{\n                    width: 32,\n                    height: 32,\n                    cursor: 'default',\n                    borderLeft: 'none',\n                    borderRight: 'none',\n                    position: 'relative',\n                    ml: 2\n                }}>\n                    <Checkbox onChange={handleAll} checked={Boolean(deleteRowList.length)} sx={{ '& .MuiSvgIcon-root': { fontSize: 15 } }}\n                    />\n                </Box>\n                <Typography sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                    Actions\n                </Typography>\n            </Box>\n            {/* <Box sx={{ position: 'sticky', left: allCheckWidth, zIndex: 9, height: '100%', width: processStatusWidth, borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3', order: -1, bgcolor: '#f5f5f5' }}>\n                <Stack direction='row' alignItems='center' justifyContent='center' sx={{ height: '100%', width: '100%', px: '5px', cursor: 'pointer' }}>\n                    <Box sx={{\n                        maxWidth: \"100%\",\n                        overflow: 'hidden',\n                        textOverflow: \"ellipsis\",\n                        whiteSpace: \"nowrap\",\n                    }}>\n                        <Typography\n                            variant='span'\n                            sx={{\n                                ml: '5px',\n                                color: '#333333',\n                                fontSize: 13,\n                                userSelect: 'none'\n                            }}\n                        >\n                            Status\n                        </Typography>\n                    </Box>\n                </Stack>\n            </Box> */}\n        </>\n    )\n}\n\nexport default AllCheck;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFile(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 14 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.6 0.399994H1.4C0.6265 0.399994 0.00699999 1.02649 0.00699999 1.79999L0 10.2C0 10.9735 0.6265 11.6 1.4 11.6H12.6C13.3735 11.6 14 10.9735 14 10.2V3.19999C14 2.42649 13.3735 1.79999 12.6 1.79999H7L5.6 0.399994Z\",\n    fill: \"#59647C\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFile);\nexport default __webpack_public_path__ + \"static/media/file.0f468b4b769aae19fbe7adcfa088f063.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 16,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.3 3.775v.196l-.001 10.342c0 .972-.677 1.684-1.604 1.685-2.048.003-4.097.003-6.145 0-.927 0-1.602-.713-1.603-1.686V3.775h9.352zm-7.004 2.44v7.337h1.325c.208 0 .221 0 .222-.198V6.452c0-.043.013-.092-.004-.125-.02-.044-.064-.106-.099-.107-.477-.007-.954-.004-1.444-.004zm4.654 0H6.628c-.21 0-.224 0-.225.195v7.13H7.95V6.215zM0 2.797V.938h.215c.942 0 1.883.004 2.825-.006a.428.428 0 00.277-.131c.208-.217.395-.462.6-.682A.354.354 0 014.15.006c.983-.008 1.967-.008 2.95 0 .078 0 .172.05.231.113.206.22.392.465.6.682.071.074.184.13.278.131.936.01 1.872.006 2.807.006h.228v1.859H0z\",\n    fill: \"#57647E\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.73821db442f345f308f6a32c9e78ae47.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { bytesToSize } from \"../utilis/bytes-to-size\";\nimport { fileToBase64 } from \"../utilis/file-to-base64\";\nimport { fileAxios, updateRow, updateLog } from '../utilis/request';\n\nimport File from '../assets/img/svg/file.svg';\nimport Delete from '../assets/img/svg/delete.svg';\nimport useConfig from '../hooks/useConfig';\n\nimport { fileTypes, imgTypes } from '../config/constant';\nimport useTableContext from '../hooks/useTable';\n\nexport default function UploadModal(porps) {\n    const { open, close, position, data } = porps;\n    const { user } = useConfig();\n    const { body, changeBody, header } = useTableContext();\n\n    const [error, setError] = useState(\"\")\n    const [files, setFiles] = useState([])\n    const [start, setStart] = useState(false)\n    const [progress, setProgress] = useState(0)\n    const [tempFiles, setTempFiles] = useState([])\n\n    const handleClose = () => {\n        setFiles([]);\n        setTempFiles([]);\n        close(false);\n    };\n\n    const setValue = (newValue) => {\n        setFiles([...files, ...newValue])\n    }\n\n    const handleSubmit = async () => {\n        setStart(true)\n        let form = new FormData()\n        for (let file of files) {\n            form.append('file', file)\n        }\n        try {\n            const res = await fileAxios('table/upload', form, setProgress)\n            if (res.status) {\n                let t = { data: body };\n                let rowId = t.data[position[0]]._id;\n                for (let item of res.data) {\n                    t.data[position[0]].row[position[1]].data.push(item);\n                }\n                changeBody(t.data);\n                let rdata = await updateRow({ data: t.data[position[0]], modifier: user })\n                if (rdata.status) {\n                    let log = {\n                        type: 'activity',\n                        rowId,\n                        history: { status: 'add', data: res.data },\n                        dataType: 'attached',\n                        sign: { [user._id]: true },\n                        creator: user,\n                        cellName: header[position[1]].name,\n                        cellId: data.id,\n                        columnId: header[position[1]].id\n                    }\n                    updateLog(log);\n                }\n            }\n            setFiles([]);\n            setTempFiles([]);\n            close(false);\n        } catch (e) {\n            return;\n        }\n        setStart(false);\n    }\n\n    return (\n        <div>\n            <Dialog\n                maxWidth='md'\n                open={open}\n                sx={{ \"& .MuiDialog-paper\": { width: '100%' } }}\n                onClose={handleClose}\n            >\n                <DialogTitle >\n                    File Upload\n                </DialogTitle>\n                <DialogContent>\n                    <Box\n                        sx={{\n                            position: 'relative',\n                            '& input:focus+div': {\n                                borderStyle: 'solid',\n                            }\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                lineHeight: 0,\n                                ...(error && {\n                                    border: '1px solid #f23a3c',\n                                    boxShadow: '0 0 3px #f23a3c',\n                                    '&:hover': {\n                                        borderColor: '#fe8e92',\n                                        boxShadow: '0 0 0 2px #ffa5a5',\n                                    }\n                                })\n                            }}\n                        >\n                            {\n                                !start &&\n                                <label>\n                                    <input\n                                        multiple\n                                        type=\"file\"\n                                        id='file'\n                                        name='file'\n                                        onChange={async (e) => {\n                                            e.preventDefault()\n                                            e.target.blur()\n\n                                            let files = e.target.files;\n                                            for (let i = 0; i < files.length; i++) {\n                                                let file = files[i]\n                                                let type = file.name.split('.').pop();\n                                                if (!type) type = file.type.split('/')[1];\n                                                if (file.size > 167772160) {\n                                                    setError(`${file.name.length > 14 ? file.name.slice(0, 7) + '...' + file.name.slice(-7) : file.name} is too large, maximum file size is 20MB.`)\n                                                    return;\n                                                }\n                                                if (!fileTypes.includes(type)) {\n                                                    setError(`${file.name} has invalid extension. Only ${fileTypes.join(\", \")} are allowed.`)\n                                                    return;\n                                                }\n                                            }\n\n                                            let moreTemp = [];\n                                            for (let i = 0; i < files.length; i++) {\n                                                let file = files[i];\n                                                let type = file.name.split('.').pop();\n                                                if (!type) type = file.type.split('/')[1]\n                                                console.log(type)\n                                                if (imgTypes.includes(type)) {\n                                                    let base64 = await fileToBase64(file)\n                                                    moreTemp.push({ name: file.name, size: bytesToSize(file.size, 1), base64 })\n                                                } else {\n                                                    moreTemp.push({ name: file.name, size: bytesToSize(file.size, 1) })\n                                                }\n                                            }\n\n                                            setValue(e.target.files)\n                                            setTempFiles([...tempFiles, ...moreTemp])\n                                            e.target.value = ''\n\n                                            if (error) {\n                                                setError('')\n                                            }\n                                        }}\n                                        style={{\n                                            height: '132px',\n                                            position: 'absolute',\n                                            width: '100%',\n                                            top: 0,\n                                            left: 0,\n                                            opacity: 0,\n                                            cursor: 'pointer',\n                                            fontSize: 0,\n                                        }}\n                                    />\n                                    <Box\n                                        sx={{\n                                            pointerEvents: 'none',\n                                            position: 'relative',\n                                            overflow: 'hidden',\n                                            direction: 'ltr',\n                                            color: '#C96100',\n                                            borderColor: \"rgba(201, 97, 0, 0.77)\",\n                                            backgroundColor: '#fbfcff',\n                                            border: '1px dashed',\n                                            borderRadius: '4px',\n                                            height: '132px',\n                                            fontSize: '18px',\n                                            top: '0',\n                                            left: '0',\n                                            width: '100%',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                            fontWeight: '600',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            wordBreak: 'break-word',\n                                            '&:before': {\n                                                backgroundImage: 'url(/browse_file.svg)',\n                                                content: '\"\"',\n                                                width: '39px',\n                                                height: '28px',\n                                                marginBottom: '16px',\n                                                backgroundRepeat: 'no-repeat',\n                                            },\n                                            '&:hover': {\n                                                borderColor: 'rgba(201, 97, 0, 0.5)',\n                                                boxShadow: '0 0 0 2px rgb(201 97 0 / 25%)',\n                                            },\n                                            '&:focus': {\n                                                borderColor: '#c96100',\n                                                boxShadow: '0 0 0 3px rgb(201 97 0 / 25%)',\n                                            }\n                                        }}\n                                    >\n                                        Browse File\n                                        <Typography\n                                            sx={{\n                                                display: { xs: 'none', sm: 'initial' },\n                                                fontSize: '14px',\n                                                color: '#FF913E',\n                                                fontWeight: '400',\n                                                marginTop: '6px',\n                                            }}\n                                        >\n                                            Drag and drop files here\n                                        </Typography>\n                                        <Typography\n                                            sx={{\n                                                display: { xs: 'initial', sm: 'none' },\n                                                fontSize: '14px',\n                                                color: '#FF913E',\n                                                fontWeight: '400',\n                                                marginTop: '6px',\n                                            }}\n                                        >\n                                            Choose a file\n                                        </Typography>\n                                    </Box>\n                                </label>\n                            }\n                            <Box sx={{ pt: tempFiles.length ? '6px' : '0px' }}>\n                                {tempFiles.map((file, index) => {\n                                    return <Box sx={{ mt: '10px' }} key={index}>\n                                        <Stack direction=\"row\">\n                                            <Stack\n                                                direction={'row'}\n                                                sx={{\n                                                    backgroundColor: '#dae6ff',\n                                                    fontSize: '14px',\n                                                    fontWeight: 500,\n                                                    color: 'white',\n                                                    borderRadius: '4px',\n                                                    alignItems: 'center',\n                                                    flexGrow: 1,\n                                                }}\n                                            >\n                                                <Box sx={{ p: '8px' }}>\n                                                    <img\n                                                        alt='upload'\n                                                        src={file.base64 || File}\n                                                        style={{\n                                                            padding: file.base64 ? '0px' : '6px',\n                                                            background: file.base64 ? 'transparent' : 'rgb(255, 255, 255)',\n                                                            display: 'block',\n                                                            objectPosition: 'center',\n                                                            objectFit: 'cover',\n                                                            width: '25px',\n                                                            height: '25px',\n                                                            border: '1px solid',\n                                                            borderRadius: '4px',\n                                                            borderColor: '#b5c2db',\n                                                        }}\n                                                    />\n                                                </Box>\n                                                <span style={{ flexGrow: 1 }}>\n                                                    {file.name}\n                                                </span>\n                                                <span style={{ padding: '0 10px' }}>\n                                                    {file.size}\n                                                </span>\n                                            </Stack>\n\n                                            <Button component='span'\n                                                onClick={() => {\n                                                    setFiles(files.filter((file, i) => i !== index))\n                                                    setTempFiles(tempFiles.filter((temp, i) => i !== index))\n                                                }}\n                                                sx={{\n                                                    backgroundColor: '#dce5f6',\n                                                    backgroundImage: `url(${Delete})`,\n                                                    width: '32px',\n                                                    borderRadius: '4px',\n                                                    backgroundSize: '12px',\n                                                    backgroundPosition: '50%',\n                                                    marginLeft: '5px',\n                                                    backgroundRepeat: 'no-repeat',\n                                                    color: 'transparent',\n                                                    cursor: 'pointer',\n                                                }}\n                                            />\n                                        </Stack>\n                                    </Box>\n                                })}\n                            </Box>\n                            {\n                                start &&\n                                <LinearProgress sx={{ mt: 2 }} variant=\"determinate\" value={progress} />\n                            }\n                        </Box>\n                        {\n                            error &&\n                            <Box sx={{ width: '100%', p: 1, mt: 1, borderRadius: 1, bgcolor: theme => theme.palette.error.light }}>\n                                {error}\n                            </Box>\n                        }\n                    </Box >\n                </DialogContent>\n                <DialogActions sx={{ px: 3, pb: 3 }}>\n                    <Button variant='contained' color='error' onClick={handleClose}>Cancel</Button>\n                    <Button variant='contained' onClick={handleSubmit} disabled={!files.length} autoFocus>\n                        Upload\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import { useEffect, useState, useContext, useMemo } from 'react';\nimport { hex } from 'generate-random-color';\nimport uuid from 'react-uuid';\n\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\n\nimport { TableContext } from '../../../../contexts/table';\nimport { ConfigContext } from '../../../../contexts/config';\nimport Axios, { updateRow, updateLog } from '../../../../utilis/request';\n\nconst ModalSelect = (props) => {\n    const { data, position, group } = props;\n    const { hId, body, changeBody, header, changeHeader, isAdmin } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = useMemo(() => Boolean(anchorEl), [anchorEl]);\n\n    const handleClick = (event) => {\n        if (group === 'active') {\n            setAnchorEl(event.currentTarget)\n        }\n    };\n\n    const close = async (id, label, color) => {\n        if (id) {\n            let t = { data: body };\n            let rowId = t.data[position[0]]._id;\n            let old = t.data[position[0]].row[position[1]].data;\n\n            if (id !== old) {\n                t.data[position[0]].row[position[1]].data = id;\n\n                let oldLabel = '', oldColor = '';\n                const idx = list.findIndex((e) => e.id === old);\n                if (idx > -1) {\n                    oldLabel = list[idx].label;\n                    oldColor = list[idx].color;\n                }\n\n                if (t.data[position[0]].updater?._id !== user._id) {\n                    let temp = {\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        email: user.email,\n                        color: user.color\n                    }\n                    t.data[position[0]].updater = temp;\n                }\n                t.data[position[0]].updatedAt = new Date();\n\n                changeBody(t.data);\n\n                let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n                if (rdata.status) {\n                    let log = {\n                        type: 'activity',\n                        old: oldLabel,\n                        oldColor: oldColor,\n                        rowId,\n                        new: label,\n                        color,\n                        dataType: 'select',\n                        sign: { [user._id]: true },\n                        creator: user,\n                        cellName: header[position[1]].name,\n                        cellId: data.id,\n                        columnId: header[position[1]].id\n                    }\n                    updateLog(log);\n                } else {\n                    alert('server error!');\n                }\n            }\n        }\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n    const create = (label) => {\n        const color = hex(), id = uuid();\n        let newHeader = header;\n        newHeader[position[1]].list.push({ id, label, color, order: newHeader[position[1]].list.length });\n        changeHeader(newHeader);\n        Axios('POST', 'table/updateHeader', { data: { row: newHeader, hId } }).then((rdata) => {\n            if (!rdata.status) alert('server error!')\n        })\n        close(id, label, color)\n    }\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n            if (filtered.length) {\n                close(filtered[0].id)\n            } else if (isAdmin) {\n                create(selectKey);\n            } else {\n                setAnchorEl(null);\n                setSelectKey(\"\");\n            }\n        }\n    };\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; })\n        setList(iList)\n    }, [header, position])\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} onClick={handleClick}>\n                {\n                    (() => {\n                        const idx = list.findIndex((e) => e.id === data.data);\n                        if (idx !== -1) {\n                            return (\n                                <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            maxWidth: \"100%\",\n                                            overflow: \"hidden\",\n                                            textOverflow: \"ellipsis\",\n                                            whiteSpace: \"pre\",\n                                            fontSize: 13,\n                                            minWidth: 18,\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        {list[idx].label}\n                                    </Box>\n                                </Typography>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { mt: -1.5, } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onKeyDown={handleKeyDown} onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else if (selectKey && isAdmin) {\n                                return (\n                                    <MenuItem onClick={() => create(selectKey)}>\n                                        <AddIcon sx={{ fontSize: 16, position: 'absolute', left: 4 }} />\n                                        <Typography sx={{ pl: .5, width: '100%', overflow: 'hidden', fontSize: 13, whiteSpace: 'break-spaces' }}>create a new option named <b>{selectKey}</b></Typography>\n                                    </MenuItem>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </>\n    )\n}\n\nexport default ModalSelect;","import { useEffect, useState } from 'react';\nimport { hex } from 'generate-random-color';\nimport uuid from 'react-uuid';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Axios, { updateRow, updateLog } from '../../../../utilis/request';\nimport useTableContext from '../../../../hooks/useTable';\nimport useConfig from '../../../../hooks/useConfig';\n\nconst MultiModalSelect = (props) => {\n    const { data, width, position, group } = props;\n    const { hId, body, changeBody, header, changeHeader, isAdmin } = useTableContext();\n    const { user } = useConfig();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget.parentElement.parentElement)\n    };\n\n    const close = async (id, label, color) => {\n        if (id) {\n            let t = { data: body }, history = [];\n            let rowId = t.data[position[0]]._id;\n            let old = t.data[position[0]].row[position[1]].data;\n\n            history = old.map((one) => {\n                let item = header[position[1]].list.filter(e => e.id === one);\n                return { status: 'nochange', ...item[0] };\n            });\n            history.push({ status: 'add', id, label, color });\n\n            t.data[position[0]].row[position[1]].data.push(id);\n\n            if (t.data[position[0]].updater?._id !== user._id) {\n                let temp = {\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    email: user.email,\n                    color: user.color\n                }\n                t.data[position[0]].updater = temp;\n            }\n            t.data[position[0]].updatedAt = new Date();\n\n\n            changeBody(t.data);\n\n            let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n            if (rdata.status) {\n                let log = {\n                    type: 'activity',\n                    rowId,\n                    history,\n                    dataType: 'multiSelect',\n                    sign: { [user._id]: true },\n                    creator: user,\n                    cellName: header[position[1]].name,\n                    cellId: data.id,\n                    columnId: header[position[1]].id\n                }\n                updateLog(log);\n            } else {\n                alert('server error!');\n            }\n        }\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n    const removeHandle = async (index) => {\n        let t = { data: body }, history = [];\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n\n        history = old.map((one, i) => {\n            let item = header[position[1]].list.filter(e => e.id === one);\n            return { status: index === i ? 'remove' : 'nochange', ...item[0] };\n        });\n        old.splice(index, 1);\n        t.data[position[0]].row[position[1]].data = old;\n        changeBody(t.data);\n\n        let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                rowId,\n                history,\n                dataType: 'multiSelect',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const create = (label) => {\n        const color = hex(), id = uuid();\n        let newHeader = header;\n        newHeader[position[1]].list.push({ id, label, color, order: newHeader[position[1]].list.length });\n        changeHeader(newHeader);\n        Axios('POST', 'table/updateHeader', { data: { row: newHeader, hId } }).then((rdata) => {\n            if (!rdata.status) alert('server error!')\n        })\n        close(id, label, color)\n    }\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n            if (filtered.length) {\n                close(filtered[0].id)\n            } else if (isAdmin) {\n                create(selectKey);\n            } else {\n                setAnchorEl(null);\n                setSelectKey(\"\");\n            }\n        }\n    };\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; });\n        setList(iList);\n    }, [header, position, data.data]);\n\n    return (\n        <Box sx={{ position: 'relative' }}>\n            <Stack className='selectItems-wrap' sx={{ border: '1px solid #0000003b', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                <Stack direction='row' sx={{ flexWrap: \"wrap\", alignItems: 'center' }} >\n                    {\n                        (() => {\n                            if (data.data.length) {\n                                return (\n                                    <>\n                                        {\n                                            data.data.map((item, i) => {\n                                                const idx = list.findIndex((e) => e.id === item);\n                                                return (\n                                                    <Typography key={i} component='span' sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: '3px', ml: '3px', height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18, mr: .5 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {list[idx]?.label}\n                                                        </Box>\n                                                        <CloseIcon sx={{ fontSize: 14, ml: .5, color: '#fff' }} onClick={() => removeHandle(i)} />\n                                                    </Typography>\n                                                )\n                                            })\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return null;\n                            }\n                        })()\n                    }\n                    <IconButton disabled={(group !== 'active') || (!header[position[1]].editable)} onClick={handleClick} sx={{ mt: .25, height: 28, borderRadius: '3px', px: .5, cursor: 'pointer', bgcolor: '#0000000d', '&:hover': { bgcolor: '#0000001a' } }}>\n                        <AddIcon sx={{ fontSize: 12 }} />\n                    </IconButton>\n                </Stack>\n            </Stack>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onKeyDown={handleKeyDown} onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((one) => {\n                                let exist = data.data.findIndex((a) => a === one.id);\n                                return (exist === -1 && one.label.toLowerCase().search(selectKey) !== -1);\n                            });\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else if (selectKey && isAdmin) {\n                                return (\n                                    <MenuItem onClick={() => create(selectKey)}>\n                                        <AddIcon sx={{ fontSize: 16, position: 'absolute', left: 4 }} />\n                                        <Typography sx={{ pl: .5, width: '100%', overflow: 'hidden', fontSize: 13, whiteSpace: 'break-spaces' }}>create a new option named <b>{selectKey}</b></Typography>\n                                    </MenuItem>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </Box>\n    )\n}\n\nexport default MultiModalSelect;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { updateRow, updateLog } from '../../../../utilis/request';\nimport { ConfigContext } from '../../../../contexts/config';\nimport { useCallback } from 'react';\n\nconst TestInput = ({ baseVal, position, dataId }) => {\n    const { header, body, changeBody, selectEditable, selectEditabled, } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(baseVal);\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: dataId,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = (value) => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n        selectEditabled(\"\");\n        selectEditable(\"\");\n    }\n\n    const liveFocus = useCallback(() => {\n        saveData(value);\n    }, [value]);\n\n    return (\n        <TextField\n            variant=\"outlined\"\n            autoFocus\n            value={value}\n            onBlur={liveFocus}\n            onChange={(e) => setValue(e.target.value)}\n            sx={{\n                width: '100%',\n                height: '100%',\n                '& fieldset': { display: 'none' },\n                '& input': { height: '100%', p: 1, fontSize: 13, },\n            }} />\n    )\n}\n\n\nconst SimpleString = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editable, editabled, selectEditable, selectEditabled, selectActive } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter' && !onModal) {\n            selectActive((position[0] + 1) + '_' + position[1]);\n            selectEditable(\"\");\n            selectEditabled(editable);\n        }\n    };\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n                selectEditabled(\"\");\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            < TextField\n                variant=\"outlined\"\n                autoFocus\n                disabled={group !== 'active' ? true : (!header[position[1]].editable)}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleKeyDown}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& input': { height: '100%', p: 1.5, fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (editable === position.join('_') && group === 'active' && header[position[1]].editable) {\n            return (\n                <TestInput baseVal={value} position={position} dataId={data.id} />\n            )\n        } else {\n            return (<Box sx={{ p: '6px' }}>\n                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                    {value}\n                </Typography>\n            </Box>)\n        }\n    }\n}\n\nexport default SimpleString;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { ConfigContext } from '../../../../contexts/config';\nimport { updateLog, updateRow } from '../../../../utilis/request';\n\nconst LongText = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editabled } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            <TextField\n                variant=\"outlined\"\n                defaultValue={value}\n                multiline\n                disabled={group !== 'active' ? true : (!header[position[1]].editable)}\n                rows={4}\n                onChange={(e) => setValue(e.target.value)}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& .MuiInputBase-multiline': { height: '100%' },\n                    '& textarea': { padding: .5, height: '100% !important', fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (status && group === 'active' && header[position[1]].editable) {\n            return (\n                <TextField\n                    variant=\"outlined\"\n                    autoFocus\n                    defaultValue={value}\n                    multiline\n                    rows={2}\n                    onChange={(e) => setValue(e.target.value)}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& .MuiInputBase-multiline': { height: '100%' },\n                        '& fieldset': { display: onModal ? 'block' : 'none' },\n                        '& textarea': { padding: onModal ? .5 : 0, height: '100% !important', fontSize: 13, },\n                    }} />\n            )\n        } else {\n            return (\n                <Box sx={{ p: '6px' }}>\n                    <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                        {value}\n                    </Typography>\n                </Box>\n            )\n        }\n    }\n}\n\nexport default LongText;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { updateRow, updateLog } from '../../../../utilis/request';\nimport { ConfigContext } from '../../../../contexts/config';\n\nconst LinkField = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editable, editabled, selectEditable, selectEditabled, selectActive } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter' && !onModal) {\n            selectActive((position[0] + 1) + '_' + position[1]);\n            selectEditable(\"\");\n            selectEditabled(editable);\n        }\n    };\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            < TextField\n                variant=\"outlined\"\n                autoFocus\n                disabled={group !== 'active' ? true : (!header[position[1]].editable)}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleKeyDown}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& input': { height: '100%', p: 1.5, fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (editable === position.join('_') && group === 'active' && header[position[1]].editable) {\n            return (\n                < TextField\n                    variant=\"outlined\"\n                    autoFocus\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& fieldset': { display: 'none' },\n                        '& input': { height: '100%', p: 1, fontSize: 13, },\n                    }} />\n            )\n        } else {\n            return (<Box sx={{ p: '6px' }}>\n                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                    <a href={value} target='_blank' rel=\"noreferrer\">{value}</a>\n                </Typography>\n            </Box>)\n        }\n    }\n}\n\nexport default LinkField;","import { useContext } from 'react';\n\nimport TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n\nimport { TableContext } from '../../../../contexts/table';\nimport { ConfigContext } from '../../../../contexts/config';\nimport { updateRow, updateLog } from '../../../../utilis/request';\n\nconst DateCell = (props) => {\n    const { data, position, group } = props;\n    const { header, body, changeBody } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n\n    const saveData = async (params, old, newVal, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                new: newVal,\n                dataType: 'date',\n                sign: { [user._id]: true },\n                creator: user,\n                rowId,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const setValue = (value) => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveData(t.data[position[0]], old, value, rowId);\n        changeBody(t.data);\n    }\n    return (\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DatePicker\n                disabled={group !== 'active' ? true : (!header[position[1]].editable)}\n                value={data.data}\n                onChange={(newValue) => {\n                    setValue(newValue);\n                }}\n                renderInput={(params) => <TextField {...params}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& fieldset': { display: 'none' },\n                        '& div': { height: '100%' },\n                        '& input': { padding: 0, height: '100%', px: .7, fontSize: 13, },\n                    }}\n                />}\n            />\n        </LocalizationProvider>\n    )\n}\n\nexport default DateCell;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\nimport { TableContext } from '../../../../contexts/table';\nimport { updateRow, updateLog } from '../../../../utilis/request';\nimport { ConfigContext } from '../../../../contexts/config';\n\nconst CheckBoxCell = (props) => {\n    const { data, position, onModal, group } = props;\n    const { header, body, changeBody, } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const saveRequest = async (params, val, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old: !val,\n                rowId,\n                new: val,\n                dataType: 'checkBox',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = (e) => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        t.data[position[0]].row[position[1]].data = e.target.checked;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], e.target.checked, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        setValue(data.data);\n    }, [position, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            <Checkbox disabled={group !== 'active' ? true : (!header[position[1]].editable)} checked={value} onChange={saveData} sx={{ p: 0, '& .MuiSvgIcon-root': { fontSize: 28 } }} />\n        )\n    } else {\n        return (<Box sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <Checkbox disabled={group !== 'active' ? true : (!header[position[1]].editable)} checked={value} onChange={saveData} sx={{ p: '0px !important', '& .MuiSvgIcon-root': { fontSize: 28 } }} />\n        </Box>)\n    }\n}\n\nexport default CheckBoxCell;","import moment from 'moment';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n\nconst LogDate = (props) => {\n    const { data, onModal } = props;\n\n    if (onModal) {\n        return (\n            <>\n                {\n                    (() => {\n                        if (data?.data) {\n                            return (\n                                <Stack sx={{ height: '100%', justifyContent: 'center', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                    {moment(data.data).format('M/d/yyyy h:mm a')}\n                                </Stack>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }</>\n        )\n    } else {\n        return (\n            <Box sx={{ p: '6px' }}>\n                {\n                    (() => {\n                        if (data?.data) {\n                            return (\n                                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                                    {moment(data.data).format('DD/MM/yyyy h:mm a')}\n                                </Typography>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box>\n        )\n    }\n}\n\nexport default LogDate;","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nconst LogDate = (props) => {\n    const { onModal, data } = props;\n    if (onModal) {\n        return (\n            <Stack sx={{ height: '100%', justifyContent: 'center', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                {\n                    (() => {\n                        if (data.data && data.data.color) {\n                            return (\n                                <Stack direction='row' alignItems='center'>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: data.data && data.data.color ? data.data.color : '#999', zIndex: 2, }}>{data?.data?.firstName[0]}</Box>\n                                    <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                        {data?.data?.firstName} {data?.data?.lastName}\n                                    </Typography>\n                                </Stack >\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Stack>\n        )\n    } else {\n        return (\n            <Box sx={{ p: '6px' }}>\n                {\n                    (() => {\n                        if (data.data) {\n                            return (\n                                <Stack direction='row' alignItems='center'>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: data.data && data.data.color ? data.data.color : '#999', zIndex: 2, }}>{data?.data?.firstName[0]}</Box>\n                                    <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                        {data?.data?.firstName} {data?.data?.lastName}\n                                    </Typography>\n                                </Stack >\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box >\n        )\n    }\n}\n\nexport default LogDate;","import React, { useEffect, useState } from 'react';\nimport ReactTimeAgo from 'react-time-ago';\nimport moment from 'moment';\n\nimport Box from '@mui/material/Box';\nimport Menu from '@mui/material/Menu';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogContent from '@mui/material/DialogContent';\nimport Popover from '@mui/material/Popover';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport Check from '@mui/icons-material/Check';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport SpeakerNotesOffIcon from '@mui/icons-material/SpeakerNotesOff';\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\n\nimport useTableContext from '../hooks/useTable';\nimport useConfig from '../hooks/useConfig';\n\nimport ImageModal from './ImageModal';\nimport UploadModal from './UploadModal';\n\nimport ModalSelect from '../pages/Main/TableContent/CellType/ModalSelectCell';\nimport MultiModalSelect from '../pages/Main/TableContent/CellType/MultiModalSelect';\nimport SimpleString from '../pages/Main/TableContent/CellType/SimpleString';\nimport LongText from '../pages/Main/TableContent/CellType/LongText';\nimport LinkField from '../pages/Main/TableContent/CellType/LinkField';\nimport DateCell from '../pages/Main/TableContent/CellType/DateCell';\n// import $ from 'jquery';\n\nimport Axios, { duplicateRow, downloadFile, getLog, updateLog, updateRow } from '../utilis/request';\n\nimport { uploadUrl, typeLabel } from '../config/constant';\nimport Icons from './Icons';\nimport CheckBoxCell from '../pages/Main/TableContent/CellType/CheckBoxCell';\nimport LogDate from '../pages/Main/TableContent/CellType/LogDate';\nimport LogUser from '../pages/Main/TableContent/CellType/LogUser';\nimport { getImg } from '../utilis/util';\n\nconst EditModal = (props) => {\n    const { y, open, handleClose, changeItem, group } = props;\n    const { user } = useConfig();\n    const { header, body, changeBody, users, isAdmin, hId } = useTableContext();\n\n    const [idx, setIdx] = useState(0);\n    const [data, setData] = useState([]);\n    const [isDel, setIsDel] = useState(false);\n    const [commant, setCommant] = useState(\"\");\n    const [imgData, setImgData] = useState([]);\n    const [fullImg, setFullImg] = useState(false);\n    const [showChat, setShowChat] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [follower, setFollower] = useState([]);\n    const [imgIndex, setImgIndex] = useState(0);\n    const [uploadOpen, setUploadOpen] = useState(false);\n    const [activeType, setactiveType] = useState(1);\n    const [anchor, setAnchor] = useState(null);\n    const [whiteList, setWhiteList] = useState([]);\n    const [uSearch, setUSearch] = useState(\"\");\n    const openWl = Boolean(anchor);\n\n\n    const drop = Boolean(anchorEl);\n\n    const handleImgModal = () => setFullImg(false);\n\n    const openFullImg = (y, x, i) => {\n        setImgData(body[y].row[x].data);\n        setImgIndex(i);\n        setFullImg(true);\n    }\n\n    const openUpload = (i) => {\n        setIdx(i);\n        setUploadOpen(true);\n    }\n\n    const uploadClose = () => {\n        setUploadOpen(false);\n    }\n\n    const closePop = (params) => {\n        setAnchor(null)\n    }\n\n    const inputMessage = (e) => {\n        setCommant(e.target.value);\n        if (e.target.value === \"@\") {\n            setAnchor(e.currentTarget);\n        }\n    }\n\n    const rmeoveItem = (i) => {\n        let temp = whiteList;\n        temp.splice(i, 1);\n        setWhiteList([...temp]);\n    }\n\n\n    const deleteRow = async () => {\n        setIsDel(true);\n        let t = { data: body };\n        Axios('POST', 'table/deleteRow', { data: t.data[y] }).then((rdata) => {\n            if (!rdata.status) alert('server error!')\n        });\n        t.data.splice(y, 1);\n        changeBody(t.data);\n        handleClose();\n    }\n\n    const handleDownload = (item) => {\n        downloadFile(item);\n    }\n\n    const removeFile = async (item, i, j) => {\n        let t = { data: body };\n        let rowId = t.data[y]._id;\n        let removeData = t.data[y].row[i].data[j];\n        t.data[y].row[i].data.splice(j, 1);\n        if (t.data[y].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[y].updater = temp;\n        }\n        t.data[y].updatedAt = new Date();\n        changeBody(t.data);\n        let rdata = await updateRow({ data: t.data[y], updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                rowId,\n                history: { status: 'remove', data: [removeData] },\n                dataType: 'attached',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[i].name,\n                cellId: data.id,\n                columnId: header[i].id\n            }\n            updateLog(log);\n            setData([...data, { ...log, updatedAt: new Date() }])\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter' && commant) {\n            let t = { data: body };\n\n            let log = {\n                type: 'comment',\n                rowId: t.data[y]._id,\n                new: commant,\n                dataType: 'string',\n                columnId: 'chat',\n                sign: { [user._id]: true },\n                creator: user,\n                whiteList: whiteList.length ? [...whiteList.map((e) => e._id), user._id] : []\n            }\n            updateLog(log);\n            setData([...data, { ...log, updatedAt: new Date() }]);\n            setCommant(\"\");\n            if (t.data[y].chat) {\n                t.data[y].chat += 1;\n            } else {\n                t.data[y].chat = 1;\n            }\n            changeBody(t.data);\n            setWhiteList([]);\n        }\n    }\n\n    const searchKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            let partner = users.filter((e) => {\n                let str = e.firstName + \" \" + e.lastName;\n                return str.search(uSearch) !== -1;\n            });\n            if (partner.length) {\n                let flag = whiteList.findIndex((e) => e._id === partner[0]._id);\n                if (flag === -1) {\n                    setWhiteList([...whiteList, partner[0]]);\n                }\n                setCommant(commant.slice(0, -1));\n            }\n            setAnchor(null)\n            setUSearch(\"\")\n        }\n    }\n\n    const selectPartner = (user) => {\n        let flag = whiteList.findIndex((e) => e._id === user._id);\n        if (flag === -1) {\n            setWhiteList([...whiteList, user]);\n        }\n        setAnchor(null)\n        setUSearch(\"\")\n        setCommant(commant.slice(0, -1));\n    }\n\n\n    const handleCommentType = (e) => {\n        if (e) {\n            setAnchorEl(e.currentTarget)\n        } else {\n            setAnchorEl(null)\n        }\n    }\n\n    const switchCommentType = (params) => {\n        setactiveType(params);\n        document.getElementsByClassName('commentBoxWrap')[0].scroll({ top: document.getElementsByClassName('commentBox')[0].clientHeight, behavior: 'smooth' });\n        setAnchorEl(null);\n    }\n\n    const closeAction = () => {\n        handleClose();\n    }\n\n    const copyRow = async () => {\n        let rdata = await duplicateRow(body[y]._id, user._id);\n        if (rdata.status) {\n            let t = { data: body };\n            t.data.sort((a, b) => a.order - b.order);\n            for (let i = body[y].order + 1; i < t.data.length; i++) {\n                t.data[i].order++;\n            }\n            rdata.data.creator = user;\n            rdata.data.updater = user;\n            rdata.data.updatedAt = new Date();\n            rdata.data.createdAt = new Date();\n            t.data.splice(body[y].order + 1, 0, rdata.data);\n            changeBody([...t.data]);\n            changeItem(true);\n        } else {\n            alert('Server error!')\n        }\n    }\n\n    /* eslint-disable */\n    const getData = async (rowId) => {\n        let allowIds = []\n        if (user.allowIds && user.allowIds[hId]) {\n            allowIds = user.allowIds[hId];\n        }\n        let logData = await getLog({ rowId, allowIds });\n        if (logData.status) {\n            setData(logData.data);\n\n            let data = {}\n            for (let item of logData.data) {\n                data[item.creator._id] = true;\n            }\n\n            let followers = users.filter((e) => {\n                let idx = Object.keys(data).findIndex((one) => one === e._id);\n                return (idx > -1)\n            })\n            for (let i = 0; i < Object.keys(data).length; i++) {\n\n            }\n            setFollower(followers)\n        }\n    }\n\n    useEffect(() => {\n        if (open) {\n            setIsDel(false);\n            getData(body[y]._id);\n        }\n    }, [open, y]);\n\n    useEffect(() => {\n        if (data.length && document.getElementsByClassName('commentBoxWrap')[0] && document.getElementsByClassName('commentBox')[0].lastChild) {\n            document.getElementsByClassName('commentBoxWrap')[0].scroll({ top: document.getElementsByClassName('commentBox')[0].clientHeight + document.getElementsByClassName('commentBox')[0].lastChild.clientHeight, behavior: 'smooth' });\n        }\n    }, [data]);\n    /* eslint-enable */\n\n    return (\n        <>\n            <Dialog\n                open={open}\n                maxWidth=\"lg\"\n                onClose={closeAction}\n                sx={{ '& .MuiDialog-paper': { height: \"calc(100% - 64px)\", width: '100%' } }}\n            >\n                <DialogTitle sx={{ borderBottom: '1px solid #bdbdbd' }}>\n                    <Stack direction='row' alignItems='center' justifyContent='space-between'>\n                        <Stack direction='row' alignItems='center'>\n                            <IconButton onClick={() => changeItem(false)} disabled={y === 0}><ExpandLessIcon sx={{ fontSize: 16 }} /></IconButton>\n                            <IconButton onClick={() => changeItem(true)} disabled={y === body.length - 1}><ExpandMoreIcon sx={{ fontSize: 16 }} /></IconButton>\n                        </Stack>\n                        <Stack direction='row' alignItems='center'>\n                            {\n                                (user.role !== \"Developer\") &&\n                                <IconButton onClick={() => deleteRow()} ><DeleteIcon sx={{ fontSize: 15 }} /></IconButton>\n                            }\n                            <IconButton onClick={() => copyRow()} ><ContentCopyIcon sx={{ fontSize: 15 }} /></IconButton>\n                            <IconButton onClick={() => setShowChat(!showChat)} >\n                                {\n                                    showChat ?\n                                        <SpeakerNotesOffIcon sx={{ fontSize: 15 }} /> :\n                                        <ChatBubbleIcon sx={{ fontSize: 15 }} />\n                                }\n                            </IconButton>\n                            <Box sx={{ width: '1px', height: 15, bgcolor: 'gray', mx: 2 }} />\n                            <IconButton onClick={handleClose}><CloseIcon sx={{ fontSize: 15 }} /></IconButton>\n                        </Stack>\n                    </Stack>\n                </DialogTitle>\n                <DialogContent sx={{ p: 0 }}>\n                    <Grid container sx={{ height: '100%' }}>\n                        <Grid item md={showChat ? 8 : 12} sx={{ height: '100%', overflow: 'auto', borderRight: '1px solid #bdbdbd', p: 6, pt: 4 }}>\n                            <Grid container spacing={2} sx={{ maxWidth: '640px', m: 'auto' }}>\n                                {\n                                    body[y]?.row.map((data, i) => (\n                                        <React.Fragment key={i}>\n                                            {\n                                                header[i].allowed ?\n                                                    <>\n                                                        <Grid item md={3} sm={12} sx={{ order: header[i].order * 2 }}>\n                                                            <Stack direction='row' alignItems='center' sx={{ opacity: .75 }}>\n                                                                <Icons type={header[i].type} editable={header[i].editable} />\n                                                                <Typography sx={{ opacity: .75, ml: .5, fontSize: 13, color: header[i].editable ? '#16cd92' : '#333333' }}>{header[i].name}</Typography>\n                                                            </Stack>\n                                                        </Grid>\n                                                        <Grid item md={9} sm={12} sx={{ order: header[i].order * 2 + 1 }}>\n                                                            {\n                                                                (() => {\n                                                                    switch (header[i].type) {\n                                                                        case 'text':\n                                                                        case 'email':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <SimpleString group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'checkBox':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <CheckBoxCell group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'link':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <LinkField group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'longText':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <LongText group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'select':\n                                                                            return (\n                                                                                <ModalSelect group={group} data={data} status={false} height={38} position={[y, i]} />\n                                                                            );\n                                                                        case 'multiSelect':\n                                                                            return (\n                                                                                <MultiModalSelect group={group} data={data} status={false} height={38} position={[y, i]} />\n                                                                            );\n                                                                        case 'date':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <DateCell group={group} data={data} position={[y, i]} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'createdAt':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogDate data={{ data: body[y].createdAt }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'updatedAt':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogDate data={{ data: (body[y].updater ? body[y].updatedAt : null) }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'createdBy':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogUser data={{ data: body[y].creator }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'updatedBy':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogUser data={{ data: body[y].updater }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'attached':\n                                                                            if (!data.data) data.data = []\n                                                                            return (\n                                                                                <>\n                                                                                    <Box sx={{ width: '100%', mb: 2 }} >\n                                                                                        <Button\n                                                                                            disabled={(group !== 'active') || (!header[i].editable)}\n                                                                                            variant='outlined'\n                                                                                            sx={{ color: '#333333', fontSize: 11, textTransform: 'capitalize', py: .5, px: 1 }}\n                                                                                            startIcon={<AttachFileIcon sx={{ fontSize: '15px !important' }} />}\n                                                                                            onClick={() => openUpload(i)}\n                                                                                        >Attach file</Button>\n                                                                                    </Box>\n                                                                                    <Grid container spacing={2}>\n                                                                                        {\n                                                                                            data.data.map((src, j) => (\n                                                                                                <Grid item md={6} key={j} >\n                                                                                                    <Box sx={{ height: 250, cursor: 'pointer', bgcolor: '#fafafa', display: 'flex', alignItems: 'center', justifyContent: 'center', border: '1px solid #00000052', overflow: 'hidden', borderRadius: 2, mb: 2 }}>\n                                                                                                        <Box\n                                                                                                            alt='img'\n                                                                                                            component='img'\n                                                                                                            src={src.mimetype.startsWith('image') ? `${uploadUrl}${src.filename}` : getImg(src)}\n                                                                                                            sx={{ height: src.mimetype.startsWith('image') ? 'auto' : 100, maxWidth: '100%', maxHeight: '100%' }}\n                                                                                                            onClick={() => openFullImg(y, i, j)}\n                                                                                                        />\n                                                                                                    </Box>\n                                                                                                    <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ position: 'relative' }}>\n                                                                                                        <Typography sx={{ fontSize: 13, width: 'calc(100% - 60px)', textOverflow: 'ellipsis', overflow: 'hidden' }}>{src.originalname} </Typography>\n                                                                                                        <Stack direction='row' sx={{ position: 'absolute', bottom: 0, right: 0, bgcolor: '#fff' }}>\n                                                                                                            <IconButton sx={{ p: 0, mr: 1 }} onClick={() => handleDownload(src)} >\n                                                                                                                <ArrowCircleDownIcon />\n                                                                                                            </IconButton>\n                                                                                                            <IconButton sx={{ p: 0 }} onClick={() => removeFile(src, i, j)}>\n                                                                                                                <DeleteIcon />\n                                                                                                            </IconButton>\n                                                                                                        </Stack>\n                                                                                                    </Stack>\n                                                                                                </Grid>\n                                                                                            ))\n                                                                                        }\n                                                                                    </Grid>\n                                                                                </>\n                                                                            )\n                                                                        default:\n                                                                            return (<TextField size=\"small\" sx={{ width: '100%', }} multiline />);\n                                                                    }\n                                                                })()\n                                                            }\n                                                        </Grid>\n                                                    </> : null\n                                            }\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Grid>\n                        </Grid>\n                        <Grid item md={4} sx={{ height: '100%', display: showChat ? 'block' : 'none' }}>\n                            <Stack sx={{ height: '100%', pb: 2 }} justifyContent='space-between'>\n                                <Stack sx={{ p: 2, borderBottom: '1px solid #bdbdbd', }} justifyContent='flex-start' alignItems='flex-start'>\n                                    <Stack>\n                                        <Button\n                                            size='small'\n                                            endIcon={<ArrowDropDownIcon sx={{ fontSize: 16 }} />}\n                                            onClick={handleCommentType}\n                                            sx={{\n                                                px: 1,\n                                                fontSize: 13,\n                                                color: '#4d4d4d',\n                                                textTransform: 'capitalize',\n                                                '&:hover': { bgcolor: '#0000000d' }\n                                            }}>\n                                            {typeLabel[activeType].label}\n                                        </Button>\n                                        {\n                                            isAdmin ?\n                                                <Menu\n                                                    anchorEl={anchorEl}\n                                                    open={drop}\n                                                    onClose={() => handleCommentType(null)}\n                                                    MenuListProps={{\n                                                        'aria-labelledby': 'basic-button',\n                                                    }}\n                                                >\n                                                    {\n                                                        typeLabel.map((item, idx) => {\n                                                            if (idx === activeType) {\n                                                                return (\n                                                                    <MenuItem onClick={() => switchCommentType(idx)} key={idx}>\n                                                                        <ListItemIcon>\n                                                                            <Check sx={{ fontSize: 15 }} />\n                                                                        </ListItemIcon>\n                                                                        {item.label}\n                                                                    </MenuItem>\n                                                                )\n                                                            } else {\n                                                                return (\n                                                                    <MenuItem onClick={() => switchCommentType(idx)} key={idx}>\n                                                                        <ListItemText inset>{item.label}</ListItemText>\n                                                                    </MenuItem>\n                                                                )\n                                                            }\n                                                        })\n                                                    }\n                                                </Menu>\n                                                : null\n                                        }\n                                    </Stack>\n                                    <Stack direction='row'>\n                                        {\n                                            follower.length ?\n                                                <Stack direction='row' alignItems='center'>\n                                                    <AvatarGroup max={20} sx={{ '& .MuiAvatarGroup-avatar': { borderWidth: '0px !important', color: '#fff', width: 20, height: 20, fontSize: 9, textTransform: 'uppercase' } }}>\n                                                        {\n                                                            follower.map((one, i) => (\n                                                                <Avatar key={i} sx={{ borderWidth: '0px !important', color: '#fff', width: 20, height: 20, fontSize: 9, bgcolor: one.color ? one.color : '#bdbdbd', textTransform: 'uppercase' }} alt={one.firstName} src=\"/static/images/avatar/1.jpg\" />\n                                                            ))\n                                                        }\n                                                    </AvatarGroup>\n                                                    <Typography sx={{ ml: .5, fontSize: 11, opacity: .75 }}>{`${follower.length > 1 ? 'are' : 'is'} following this.`}</Typography>\n                                                </Stack> : null\n                                        }\n                                    </Stack>\n                                </Stack>\n                                <Box className='commentBoxWrap' sx={{ px: 2, height: '100%', overflow: 'auto' }}>\n                                    <Box className='commentBox'>\n                                        {\n                                            data.filter((e) => {\n                                                if (!typeLabel[activeType].type) {\n                                                    return true;\n                                                } else if (e.type === typeLabel[activeType].type) {\n                                                    return true;\n                                                } else {\n                                                    return false;\n                                                }\n                                            }).map((item, idx) => {\n                                                if (item.type === 'activity' || item.type === 'workflow') {\n                                                    return (\n                                                        <Box sx={{ py: 1 }} key={idx}>\n                                                            <Stack direction='row'>\n                                                                {\n                                                                    (() => {\n                                                                        let writer = users.filter((e) => e._id === item.creator._id)[0];\n                                                                        return (\n                                                                            <Avatar sx={{ bgcolor: writer.color ? writer.color : '#999', textTransform: 'uppercase', color: 'white', mr: 1, width: 24, height: 24, fontSize: 12 }} alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\">{item.creator.firstName[0]}</Avatar>\n                                                                        )\n                                                                    })()\n                                                                }\n                                                                <Box sx={{ width: '100%' }}>\n                                                                    <Stack sx={{ fontSize: 12, mb: .1 }} direction='row' alignItems='center' justifyContent='space-between'>\n                                                                        <Typography sx={{ fontSize: 12 }}>{item.creator.email === user.email ? 'You' : `${item.creator.firstName} ${item.creator.lastName}`}</Typography>\n                                                                        <ReactTimeAgo date={new Date(item.updatedAt)} locale=\"en-US\" />\n                                                                    </Stack>\n                                                                    <Stack sx={{ bgcolor: '#f2f2f2', width: '100%', borderRadius: 1, fontSize: 13, py: 1, px: 1 }} >\n                                                                        <Typography sx={item.type === 'workflow' ? { fontSize: 12, fontWeight: 600 } : { fontSize: 9 }}>\n                                                                            {(() => {\n                                                                                if (item.type === 'workflow') {\n                                                                                    let durationDate = ''\n                                                                                    let flowData = data.filter((e) => (e.type === 'workflow')).sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt)).filter((e) => new Date(e.createdAt) < new Date(item.createdAt))\n                                                                                    let before = flowData.pop();\n                                                                                    if (before) {\n                                                                                        let endDate = new Date(before.createdAt);\n                                                                                        let startDate = new Date(item.createdAt);\n                                                                                        let diff = startDate.getTime() - endDate.getTime();\n                                                                                        const day = (Math.floor(diff / (1000 * 3600 * 24)));\n                                                                                        const mod = diff % (1000 * 3600 * 24);\n                                                                                        const hour = (Math.floor(mod / (1000 * 3600)));\n                                                                                        const mod1 = mod % (1000 * 3600);\n                                                                                        const minute = (Math.floor(mod1 / (1000 * 60)));\n                                                                                        const mod2 = mod1 % (1000 * 60);\n                                                                                        const second = (Math.floor(mod2 / 1000));\n\n                                                                                        if (day) {\n                                                                                            durationDate += day;\n                                                                                            day > 1 ? durationDate += ' days ' : durationDate += ' day ';\n                                                                                        }\n                                                                                        if (hour) {\n                                                                                            durationDate += hour;\n                                                                                            hour > 1 ? durationDate += ' hours ' : durationDate += ' hour ';\n                                                                                        }\n                                                                                        if (minute) {\n                                                                                            durationDate += minute;\n                                                                                            minute > 1 ? durationDate += ' minutes ' : durationDate += ' minute ';\n                                                                                        }\n                                                                                        if (second && !durationDate) {\n                                                                                            durationDate += second;\n                                                                                            second > 1 ? durationDate += ' seconds ' : durationDate += ' second ';\n                                                                                        }\n                                                                                    }\n                                                                                    if (durationDate) {\n                                                                                        return item.cellName + ' - ' + durationDate\n                                                                                    } else {\n                                                                                        return item.cellName\n                                                                                    }\n                                                                                } else {\n                                                                                    return item.cellName\n                                                                                }\n                                                                            })()}\n                                                                        </Typography>\n                                                                        <Box sx={{ display: 'flex', mt: .5 }}>\n                                                                            {\n                                                                                (() => {\n                                                                                    if (item.dataType === 'string') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: item.type === 'workflow' ? '' : 'line-through', mr: .2 }}>\n                                                                                                    {item.old}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'date') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    {item.old ? moment(item.old).format('MMMM D, yyyy') : ''}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new ? moment(item.new).format('MMMM D, yyyy') : ''}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'checkBox') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ display: 'flex', alignItems: 'center', fontSize: 13, bgcolor: item.new === 'true' ? '#d1f7c4' : '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    <CheckIcon sx={{ color: 'rgb(32, 201, 51)' }} />\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'select') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Box sx={{ border: '1px solid #93e088', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5, mr: .2 }}>\n                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: item.color }}>\n                                                                                                        {item.new}\n                                                                                                    </Typography>\n                                                                                                </Box>\n                                                                                                {\n                                                                                                    item.old ?\n                                                                                                        <Box sx={{ border: '1px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                            <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: item.oldColor, textDecoration: 'line-through', }}>\n                                                                                                                {item.old}\n                                                                                                            </Typography>\n                                                                                                        </Box> : null\n                                                                                                }\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'multiSelect') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                {\n                                                                                                    item.history.map((one, i) => {\n                                                                                                        if (one.status === 'add') {\n                                                                                                            return (<Box key={i} sx={{ border: '1px solid #93e088', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5, mr: .2 }}>\n                                                                                                                <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color }}>\n                                                                                                                    {one.label}\n                                                                                                                </Typography>\n                                                                                                            </Box>)\n                                                                                                        } else if (one.status === 'remove') {\n                                                                                                            return (\n                                                                                                                <Box key={i} sx={{ border: '1px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color, textDecoration: 'line-through', }}>\n                                                                                                                        {one.label}\n                                                                                                                    </Typography>\n                                                                                                                </Box>\n                                                                                                            )\n                                                                                                        } else {\n                                                                                                            return (\n                                                                                                                <Box key={i} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color, }}>\n                                                                                                                        {one.label}\n                                                                                                                    </Typography>\n                                                                                                                </Box>\n\n                                                                                                            )\n                                                                                                        }\n                                                                                                    })\n                                                                                                }\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'attached') {\n                                                                                        return (\n                                                                                            <Stack direction='row' spacing={.5}>\n                                                                                                {\n                                                                                                    item.history.data.map((src, jdx) => (\n                                                                                                        <Box key={jdx} sx={{ overflow: 'hidden', width: 48, height: 48, border: item.history.status === 'add' ? '2px solid #93e088' : '2px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: .5 }}>\n                                                                                                            <Box component='img' src={src.mimetype.startsWith('image') ? `${uploadUrl}${src.filename}` : getImg(src)} sx={{ width: 48, height: 48, maxHeight: 48 }} />\n                                                                                                        </Box>\n                                                                                                    ))\n                                                                                                }\n                                                                                            </Stack>\n                                                                                        )\n                                                                                    } else {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    {item.old}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    }\n                                                                                })()\n                                                                            }\n                                                                        </Box>\n                                                                    </Stack>\n                                                                </Box>\n                                                            </Stack>\n                                                        </Box>\n                                                    )\n                                                } else {\n                                                    let flag = -1;\n                                                    if (item.whiteList && item.whiteList.length) {\n                                                        flag = item.whiteList.findIndex(e => e === user._id);\n                                                        if (flag === -1) return null;\n                                                    }\n                                                    return (\n                                                        <Box sx={{ py: 1 }} key={idx}>\n                                                            <Stack direction='row'>\n                                                                {\n                                                                    (() => {\n                                                                        let writer = users.filter((e) => e._id === item.creator._id)[0];\n                                                                        return (\n                                                                            <Avatar sx={{ bgcolor: writer.color ? writer.color : '#999', textTransform: 'uppercase', color: 'white', mr: 1, width: 24, height: 24, fontSize: 12 }} alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\">{item.creator.firstName[0]}</Avatar>\n                                                                        )\n                                                                    })()\n                                                                }\n                                                                <Box sx={{ width: '100%' }} >\n                                                                    <Stack sx={{ fontSize: 12, mb: .1 }} direction='row' alignItems='center' justifyContent='space-between'>\n                                                                        <Typography sx={{ fontSize: 12 }}>{item.creator.email === user.email ? 'You' : `${item.creator.firstName} ${item.creator.lastName}`}</Typography>\n                                                                        <ReactTimeAgo date={new Date(item.updatedAt)} locale=\"en-US\" />\n                                                                    </Stack>\n                                                                    <Box>\n                                                                        <Box sx={{ display: 'inline-block', position: 'relative', bgcolor: '#2d7ff9', borderRadius: 2, color: \"#fff\", fontSize: 13, py: .5, px: 1, pr: 5 }} >\n                                                                            {item.new}\n                                                                            {\n                                                                                flag !== -1 &&\n                                                                                <Tooltip title={`${item.creator.firstName} ${item.creator.lastName}`}>\n                                                                                    <Diversity3Icon sx={{ position: 'absolute', right: 4, bottom: 2, fontSize: 16 }} />\n                                                                                </Tooltip>\n                                                                            }\n                                                                        </Box>\n                                                                    </Box>\n                                                                </Box>\n                                                            </Stack>\n                                                        </Box>\n                                                    )\n                                                }\n                                            })\n                                        }\n                                    </Box>\n                                </Box>\n                                <Box>\n                                    <Stack sx={{ px: 1, flexWrap: \"wrap\" }} direction=\"row\" >\n                                        {\n                                            whiteList.map((user, i) => (\n                                                <Stack key={i} direction=\"row\" sx={{ display: \"inline-flex\", mb: 1, mr: 1 }} onClick={() => rmeoveItem(i)} >\n                                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: user && user.color ? user.color : '#999', zIndex: 2, }}>{user?.firstName[0]}</Box>\n                                                    <Typography component='span' sx={{ bgcolor: '#eee', cursor: 'pointer', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                                        {user.firstName} {user.lastName}\n                                                    </Typography>\n                                                </Stack>\n                                            ))\n                                        }\n                                    </Stack>\n                                    <Stack direction='row' alignItems='center' sx={{ p: 2, pb: 0, borderTop: '1px solid #bdbdbd' }}>\n                                        <Avatar sx={{ bgcolor: (theme) => theme.palette.background.default, color: '#fff', width: 24, height: 24, textTransform: 'uppercase' }} alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" >{user.firstName[0]}</Avatar>\n                                        <TextField id='message-handle' sx={{ ml: 1, width: '100%', '& input': { px: 1, py: 1 } }} onKeyDown={handleKeyDown} value={commant} onChange={(e) => inputMessage(e)} />\n                                    </Stack>\n                                    <Popover\n                                        anchorEl={anchor}\n                                        open={openWl}\n                                        onClose={closePop}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: \"left\",\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left',\n                                        }}\n                                        sx={{ '& .MuiPopover-paper': { boxShadow: '0 0 0 2px #00000040', maxHeight: \"80vh\" } }}\n                                    >\n                                        <Box sx={{ py: 1, px: 1, width: 200 }}>\n                                            <Stack spacing={1}>\n                                                <TextField sx={{ ml: 1, '& input': { px: 1, py: 1, fontSize: 12 } }} onKeyDown={searchKeyDown} value={uSearch} onChange={(e) => setUSearch(e.target.value)} autoFocus />\n                                                {\n                                                    users.filter((e) => {\n                                                        let str = e.firstName + \" \" + e.lastName;\n                                                        return str.search(uSearch) !== -1;\n                                                    }).map((user, i) => (\n                                                        <Button sx={{ justifyContent: 'flex-start' }} key={i} onClick={() => selectPartner(user)}>\n                                                            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: user && user.color ? user.color : '#999', zIndex: 2, }}>{user?.firstName[0]}</Box>\n                                                            <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                                                {user.firstName} {user.lastName}\n                                                            </Typography>\n                                                        </Button >\n                                                    ))\n                                                }\n                                            </Stack>\n                                        </Box >\n                                    </Popover >\n                                </Box>\n                            </Stack>\n                        </Grid>\n                    </Grid>\n                </DialogContent >\n            </Dialog >\n            <ImageModal open={fullImg} close={handleImgModal} data={imgData} index={imgIndex} />\n            <UploadModal open={uploadOpen} close={uploadClose} position={[y, idx]} />\n        </>\n    )\n}\n\nexport default EditModal;","import React, { useEffect, useMemo, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport SwipeLeftIcon from '@mui/icons-material/SwipeLeft';\nimport OpenInFullIcon from '@mui/icons-material/OpenInFull';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\n\nimport EditModal from '../../../components/EditModal';\nimport useTableContext from '../../../hooks/useTable';\nimport { checkWidth } from '../../../config/constant';\nimport useConfig from '../../../hooks/useConfig';\nimport { updateLog, approveAction } from '../../../utilis/request';\n\nconst FirstCell = ({ id, y, group }) => {\n    const [modalI, setModalI] = useState(0);\n    const [index, setIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n    const [reason, setReason] = useState(false);\n    const [reasonDes, setReasonDes] = useState('');\n\n    const { user } = useConfig();\n    const { body, isFilter, filterBody, deleteRowList, setDeleteRowList, isAdmin, changeBody, selectEditabled } = useTableContext();\n\n    const changeItem = (flag) => {\n        if (flag) {\n            setModalI(modalI + 1)\n        } else {\n            setModalI(modalI - 1)\n        }\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setModalI(index);\n    };\n\n    const selectRow = (e) => {\n        if (e.target.checked) {\n            setDeleteRowList([...deleteRowList, id]);\n        } else {\n            let temp = deleteRowList.filter((p) => p !== id);\n            setDeleteRowList([...temp]);\n        }\n    }\n\n    const approveRow = async (params) => {\n        selectEditabled(\"\");\n        let rdata = await approveAction(id, true);\n        if (rdata.status) {\n            let log = {\n                type: 'workflow',\n                rowId: body[index]._id,\n                new: 'Approved',\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: \"Approve\",\n                columnId: \"process\",\n            }\n            updateLog(log);\n            body[index].done = true;\n            changeBody(body);\n        }\n\n    }\n\n    const rejectRow = async (params) => {\n        selectEditabled(\"\");\n        let rdata = await approveAction(id, false);\n        if (rdata.status) {\n            let log = {\n                type: 'workflow',\n                rowId: body[index]._id,\n                old: reasonDes,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: \"Reject\",\n                columnId: \"process\",\n            }\n            updateLog(log);\n            body[index].done = false;\n            changeBody(body);\n            rejectReason();\n        }\n\n    }\n\n    const rejectReason = () => {\n        setReason(!reason);\n    }\n\n    const checkVal = useMemo(() => {\n        const k = deleteRowList.findIndex((e) => e === id);\n        return (k > -1)\n    }, [deleteRowList, id]);\n\n    useEffect(() => {\n        let idx = body.findIndex((e) => e._id === id);\n        setIndex(idx);\n        setModalI(idx);\n    }, [body, id])\n\n    return (\n        <>\n            <Stack\n                direction='row'\n                key={-2}\n                className='cell first-cell'\n                sx={{\n                    width: checkWidth,\n                    height: 32,\n                    bgcolor: '#fff',\n                    borderTop: '1px solid #dde1e3',\n                    borderRight: '1px solid #dde1e3',\n                }}>\n                <Box sx={{ borderRight: '1px solid #dde1e3', display: 'inline-block', position: 'relative', height: 32, width: 32, zIndex: 2, textAlign: 'center' }}>\n                    {\n                        !checkVal ?\n                            <Box className='row-num' sx={{ position: 'absolute', width: '100%', top: 7, color: '#707070', textAlign: 'center', fontSize: 12, userSelect: 'none' }}>\n                                {y + 1}\n                            </Box> : null\n                    }\n                    <Checkbox checked={checkVal} onChange={selectRow} className='show-head' sx={{ opacity: checkVal ? 1 : 0, position: 'absolute', left: 7, top: 0, width: 11, '& .MuiSvgIcon-root': { fontSize: 15 } }} />\n                </Box>\n                <Stack direction='row' alignItems='center' justifyContent='space-around' sx={{ width: 'calc(100% - 32px)' }}>\n                    <Box>\n                        <Stack direction='row' sx={{ position: 'relative', height: '100%', alignItems: 'center', cursor: 'pointer', }}>\n                            <IconButton onClick={() => setOpen(true)} color='info' sx={{ height: 32, width: 32, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                {\n                                    (() => {\n                                        let data = isFilter ? filterBody : body;\n                                        return (\n                                            <>\n                                                {\n                                                    data[index]?.chat ?\n                                                        <Box sx={{ fontSize: 16, color: '#2d7ff9', borderRadius: 5, p: .5, opacity: 1 }}>{body[index].chat}</Box>\n                                                        :\n                                                        <OpenInFullIcon className='show-head' sx={{ fontSize: 16, color: '#2d7ff9', }} />\n                                                }\n                                            </>\n                                        )\n                                    })()\n                                }\n                            </IconButton>\n                        </Stack>\n                    </Box>\n                    {\n                        user.role === 'Project Manager' || isAdmin ?\n                            <>\n                                {\n                                    body[index]?.done ?\n                                        <Tooltip arrow title=\"Reject\">\n                                            <IconButton color='error' onClick={rejectReason} sx={{ height: 32, width: 32, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                <SwipeLeftIcon sx={{ fontSize: 18, color: '#7a7e81', '&:hover': { color: '#f94949' } }} />\n                                            </IconButton>\n                                        </Tooltip> :\n                                        < Tooltip arrow title=\"Approve\">\n                                            <IconButton color='success' onClick={approveRow} sx={{ height: 32, width: 32, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                <CheckCircleOutlineIcon sx={{ fontSize: 18, color: '#7a7e81', '&:hover': { color: '#5ac75f' }, }} />\n                                            </IconButton>\n                                        </Tooltip>\n                                }\n                            </> : null\n                    }\n                </Stack>\n            </Stack>\n            {/* <Stack\n                direction='row'\n                key={-1}\n                className='cell'\n                sx={{\n                    width: processStatusWidth,\n                    height: 32,\n                    bgcolor: '#fff',\n                    borderTop: '1px solid #dde1e3',\n                }}>\n                <Box sx={{ p: '6px', height: '100%', display: 'flex' }}>\n\n                </Box>\n            </Stack> */}\n            <EditModal y={modalI} open={open} handleClose={handleClose} changeItem={changeItem} group={group} />\n            <Dialog\n                open={reason}\n                onClose={rejectReason}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    Rejection Reason\n                </DialogTitle>\n                <DialogContent>\n                    <Stack spacing={1}>\n                        <TextField required type=\"text\" multiline rows={4} value={reasonDes} error={!reasonDes} onChange={(e) => setReasonDes(e.target.value)} placeholder='' sx={{ width: 500 }} />\n                    </Stack>\n                    <Stack direction='row' justifyContent='flex-end' sx={{ pt: 2 }}>\n                        <Button variant='contained' color='error' onClick={rejectReason} sx={{ mr: 1 }}>Cancel</Button>\n                        <Button variant='contained' color='info' disabled={!reasonDes} onClick={rejectRow} autoFocus>\n                            Reject\n                        </Button>\n                    </Stack>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}\n\nexport default FirstCell;","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport ImageModal from '../../../../components/ImageModal';\nimport UploadModal from '../../../../components/UploadModal';\nimport { useState } from 'react';\nimport { uploadUrl } from '../../../../config/constant';\n\nimport useTableContext from '../../../../hooks/useTable';\nimport { fileAxios, updateLog, updateRow } from '../../../../utilis/request';\nimport useConfig from '../../../../hooks/useConfig';\nimport { TextField } from '@mui/material';\nimport { getImg } from '../../../../utilis/util';\n\nconst Attached = (props) => {\n    const { data, focus, position, group } = props;\n    const [open, setOpen] = useState(false);\n    const [openUpload, setOpenUpload] = useState(false);\n    const [index, setIndex] = useState(0);\n    const { user } = useConfig()\n    const { header, body, changeBody } = useTableContext()\n\n    const handleOpenModal = (i) => {\n        if (focus) {\n            setIndex(i);\n            setOpen(true);\n        }\n    }\n\n    const handleUploadModal = () => {\n        setOpenUpload(false);\n    }\n\n    const handleImgModal = () => {\n        setOpen(false);\n    }\n\n    const openUploadModal = () => {\n        setOpenUpload(true);\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            setOpenUpload(true);\n        }\n    };\n\n    const handlePaste = async (evt) => {\n        const clipboardItems = evt.clipboardData.items;\n        const items = [].slice.call(clipboardItems).filter(function (item) {\n            return item.type.indexOf('image') !== -1;\n        });\n        if (items.length === 0) {\n            return;\n        }\n\n        const item = items[0];\n        const blob = item.getAsFile();\n        let form = new FormData();\n        form.append('file', blob)\n\n        const res = await fileAxios('table/upload', form, (e) => console.log(e))\n        if (res.status) {\n            let t = { data: body };\n            let rowId = t.data[position[0]]._id;\n            for (let item of res.data) {\n                t.data[position[0]].row[position[1]].data.push(item);\n            }\n            changeBody(t.data);\n            let rdata = await updateRow({ data: t.data[position[0]], modifier: user })\n            if (rdata.status) {\n                let log = {\n                    type: 'activity',\n                    rowId,\n                    history: { status: 'add', data: res.data },\n                    dataType: 'attached',\n                    sign: { [user._id]: true },\n                    creator: user,\n                    cellName: header[position[1]].name,\n                    cellId: data.id,\n                    columnId: header[position[1]].id\n                }\n                updateLog(log);\n            }\n        }\n    }\n\n\n    return (\n        <>\n            <Box tabIndex={position.join('-')} onKeyDown={handleKeyDown} sx={{ height: '100%', width: '100%' }}>\n                <Stack direction='row' alignItems='center' sx={{ px: '3px', height: '100%', display: 'inline-flex', position: \"relative\" }} >\n                    {\n                        data.data && data.data.map((src, i) => (\n                            <Box\n                                key={i}\n                                sx={{\n                                    height: focus ? 36 : 25,\n                                    width: 'auto',\n                                    mr: .25,\n                                    zIndex: 1,\n                                    overflow: 'hidden',\n                                    cursor: 'pointer',\n                                    border: '2px solid #0000001a',\n                                    bgcolor: '#0000001a',\n                                    '&:hover': { border: focus ? '2px solid #00000052' : '2px solid #0000001a', }\n                                }}>\n                                {\n                                    src.mimetype.startsWith('image') ?\n                                        <Box\n                                            onClick={() => handleOpenModal(i)}\n                                            sx={{\n                                                height: focus ? 36 : 25,\n                                                maxWidth: focus ? 64 : 44\n                                            }} component='img' src={`${uploadUrl}${src.filename}`} alt='attached' />\n\n                                        : <Box\n                                            onClick={() => handleOpenModal(i)}\n                                            sx={{\n                                                height: focus ? 36 : 20,\n                                                width: focus ? 36 : 20,\n                                            }} component='img' src={getImg(src)} alt='attached' />\n                                }\n                            </Box>\n                        ))\n                    }\n                    {\n                        focus && group === 'active' && header[position[1]].editable &&\n                        <Stack onClick={() => openUploadModal()} alignItems='center' justifyContent='center' sx={{ height: 38, mr: .25, borderRadius: '3px', px: .5, cursor: 'pointer', bgcolor: '#0000000d', zIndex: 1, '&:hover': { bgcolor: '#0000001a' } }}>\n                            <AddIcon sx={{ fontSize: 12 }} />\n                        </Stack>\n                    }\n                    <TextField sx={{ position: \"absolute\", height: \"100%\", width: \"100%\", opacity: 0, zIndex: 0 }} onPaste={handlePaste} />\n                </Stack>\n            </Box>\n            <ImageModal open={open} close={handleImgModal} data={data.data} index={index} />\n            <UploadModal open={openUpload} close={handleUploadModal} position={position} data={data} />\n        </>\n    )\n}\n\nexport default Attached;","import { useEffect, useState, } from 'react';\nimport { hex } from 'generate-random-color';\nimport uuid from 'react-uuid';\n\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\n\nimport Axios, { updateRow, updateLog } from '../../../../utilis/request';\nimport useTableContext from '../../../../hooks/useTable';\nimport useConfig from '../../../../hooks/useConfig';\n\nconst SelectCell = (props) => {\n    const { data, width, position } = props;\n    const { hId, body, changeBody, header, changeHeader, isAdmin } = useTableContext();\n    const { user } = useConfig();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\n\n    const close = async (id, label, color) => {\n        if (id) {\n            let t = { data: body };\n            let rowId = t.data[position[0]]._id;\n            let old = t.data[position[0]].row[position[1]].data;\n\n            if (id !== old) {\n                t.data[position[0]].row[position[1]].data = id;\n\n                let oldLabel = '', oldColor = '';\n                const idx = list.findIndex((e) => e.id === old);\n                if (idx > -1) {\n                    oldLabel = list[idx].label;\n                    oldColor = list[idx].color;\n                }\n\n                if (t.data[position[0]].updater?._id !== user._id) {\n                    let temp = {\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        email: user.email,\n                        color: user.color\n                    }\n                    t.data[position[0]].updater = temp;\n                }\n                t.data[position[0]].updatedAt = new Date();\n\n                changeBody(t.data);\n\n                let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n                if (rdata.status) {\n                    let log = {\n                        type: 'activity',\n                        old: oldLabel,\n                        oldColor: oldColor,\n                        rowId,\n                        new: label,\n                        color,\n                        dataType: 'select',\n                        sign: { [user._id]: true },\n                        creator: user,\n                        cellName: header[position[1]].name,\n                        cellId: data.id,\n                        columnId: header[position[1]].id\n                    }\n                    updateLog(log);\n                } else {\n                    alert('server error!');\n                }\n            }\n        }\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n    const create = (label) => {\n        const color = hex(), id = uuid();\n        let newHeader = header;\n        newHeader[position[1]].list.push({ id, label, color, order: newHeader[position[1]].list.length });\n        changeHeader(newHeader);\n        Axios('POST', 'table/updateHeader', { data: { row: newHeader, hId } }).then((rdata) => {\n            if (!rdata.status) alert('server error!')\n        })\n        close(id, label, color)\n    }\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n            if (filtered.length) {\n                close(filtered[0].id)\n            } else if (isAdmin) {\n                create(selectKey);\n            } else {\n                setAnchorEl(null);\n                setSelectKey(\"\");\n            }\n        }\n    };\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; })\n        setList(iList)\n    }, [header, position])\n\n    return (\n        <Box sx={{ p: '6px', height: '100%', display: 'flex' }} onDoubleClick={handleClick}>\n            {\n                (() => {\n                    const idx = list.findIndex((e) => e.id === data.data);\n                    if (idx !== -1) {\n                        return (\n                            <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        maxWidth: \"100%\",\n                                        overflow: \"hidden\",\n                                        textOverflow: \"ellipsis\",\n                                        whiteSpace: \"pre\",\n                                        fontSize: 13,\n                                        minWidth: 18,\n                                        color: '#fff'\n                                    }}\n                                >\n                                    {list[idx].label}\n                                </Box>\n                            </Typography>\n                        )\n                    } else {\n                        return null;\n                    }\n                })()\n            }\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onKeyDown={handleKeyDown} onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else if (selectKey && isAdmin) {\n                                return (\n                                    <MenuItem onClick={() => create(selectKey)}>\n                                        <AddIcon sx={{ fontSize: 16, position: 'absolute', left: 4 }} />\n                                        <Typography sx={{ pl: .5, width: '100%', overflow: 'hidden', fontSize: 13, whiteSpace: 'break-spaces' }}>create a new option named <b>{selectKey}</b></Typography>\n                                    </MenuItem>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </Box>\n    )\n}\n\nexport default SelectCell;","import { useEffect, useState } from 'react';\nimport { hex } from 'generate-random-color';\nimport uuid from 'react-uuid';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Axios, { updateRow, updateLog } from '../../../../utilis/request';\nimport useTableContext from '../../../../hooks/useTable';\nimport useConfig from '../../../../hooks/useConfig';\n\nconst MultiSelectCell = (props) => {\n    const { data, width, position } = props;\n    const { hId, body, changeBody, header, changeHeader, active, isAdmin } = useTableContext();\n    const { user } = useConfig();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget.parentElement.parentElement)\n    };\n\n    const close = async (id, label, color) => {\n        if (id) {\n            let t = { data: body }, history = [];\n            let rowId = t.data[position[0]]._id;\n            let old = t.data[position[0]].row[position[1]].data;\n\n            history = old.map((one) => {\n                let item = header[position[1]].list.filter(e => e.id === one);\n                return { status: 'nochange', ...item[0] };\n            });\n            history.push({ status: 'add', id, label, color });\n\n            t.data[position[0]].row[position[1]].data.push(id);\n            changeBody(t.data);\n\n            let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n            if (rdata.status) {\n                let log = {\n                    type: 'activity',\n                    rowId,\n                    history,\n                    dataType: 'multiSelect',\n                    sign: { [user._id]: true },\n                    creator: user,\n                    cellName: header[position[1]].name,\n                    cellId: data.id,\n                    columnId: header[position[1]].id\n                }\n                updateLog(log);\n            } else {\n                alert('server error!');\n            }\n        }\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n    const removeHandle = async (index) => {\n        let t = { data: body }, history = [];\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n\n        history = old.map((one, i) => {\n            let item = header[position[1]].list.filter(e => e.id === one);\n            return { status: index === i ? 'remove' : 'nochange', ...item[0] };\n        });\n        old.splice(index, 1);\n        t.data[position[0]].row[position[1]].data = old;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        changeBody(t.data);\n\n        let rdata = await updateRow({ data: t.data[position[0]], updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                rowId,\n                history,\n                dataType: 'multiSelect',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const create = (label) => {\n        const color = hex(), id = uuid();\n        let newHeader = header;\n        newHeader[position[1]].list.push({ id, label, color, order: newHeader[position[1]].list.length });\n        changeHeader(newHeader);\n        Axios('POST', 'table/updateHeader', { data: { row: newHeader, hId } }).then((rdata) => {\n            if (!rdata.status) alert('server error!')\n        })\n        close(id, label, color)\n    }\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n            if (filtered.length) {\n                close(filtered[0].id)\n            } else if (isAdmin) {\n                create(selectKey);\n            } else {\n                setAnchorEl(null);\n                setSelectKey(\"\");\n            }\n        }\n    };\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; });\n        setList(iList);\n    }, [header, position, data.data]);\n\n    return (\n        <>\n            {\n                active === position.join('_') ?\n                    <Stack className='selectItems-wrap' sx={{ height: 'auto', minHeight: 34, position: 'absolute', borderRadius: '1px', flexWrap: \"wrap\", bgcolor: '#fff', ml: '-1px', boxShadow: '0 0 0 2px #2d7ff9 !important', width: width + 2 }} >\n                        <Stack direction='row' sx={{ flexWrap: \"wrap\", alignItems: 'center' }} >\n                            {\n                                (() => {\n                                    if (data.data.length) {\n                                        return (\n                                            <>\n                                                {\n                                                    data.data.map((item, i) => {\n                                                        const idx = list.findIndex((e) => e.id === item);\n                                                        return (\n                                                            <Typography key={i} component='span' sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: '3px', ml: '3px', height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18, mr: .5 }}>\n                                                                <Box\n                                                                    sx={{\n                                                                        display: 'flex',\n                                                                        maxWidth: \"100%\",\n                                                                        overflow: \"hidden\",\n                                                                        textOverflow: \"ellipsis\",\n                                                                        whiteSpace: \"pre\",\n                                                                        fontSize: 13,\n                                                                        minWidth: 18,\n                                                                        color: '#fff'\n                                                                    }}\n                                                                >\n                                                                    {list[idx]?.label}\n                                                                </Box>\n                                                                {\n                                                                    header[position[1]].editable &&\n                                                                    <CloseIcon sx={{ fontSize: 14, ml: .5, color: '#fff' }} onClick={() => removeHandle(i)} />\n                                                                }\n                                                            </Typography>\n                                                        )\n                                                    })\n                                                }\n                                            </>\n                                        )\n                                    } else {\n                                        return null;\n                                    }\n                                })()\n                            }\n                            {\n                                header[position[1]].editable &&\n                                <Stack onClick={handleClick} alignItems='center' justifyContent='center' sx={{ mt: .25, height: 28, borderRadius: '3px', px: .5, cursor: 'pointer', bgcolor: '#0000000d', '&:hover': { bgcolor: '#0000001a' } }}>\n                                    <AddIcon sx={{ fontSize: 12 }} />\n                                </Stack>\n                            }\n                        </Stack>\n                    </Stack> :\n                    <Box sx={{ p: '6px', height: '100%', display: 'flex' }}>\n                        {\n                            (() => {\n                                if (data.data.length) {\n                                    return (\n                                        <>\n                                            {\n                                                data.data.map((item, i) => {\n                                                    const idx = list.findIndex((e) => e.id === item);\n                                                    return (\n                                                        <Typography key={i} component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, mr: .5 }}>\n                                                            <Box\n                                                                sx={{\n                                                                    display: 'flex',\n                                                                    maxWidth: \"100%\",\n                                                                    overflow: \"hidden\",\n                                                                    textOverflow: \"ellipsis\",\n                                                                    whiteSpace: \"pre\",\n                                                                    fontSize: 13,\n                                                                    color: '#fff'\n                                                                }}\n                                                            >\n                                                                {list[idx]?.label}\n                                                            </Box>\n                                                        </Typography>\n                                                    )\n                                                })\n                                            }\n                                        </>\n                                    )\n                                } else {\n                                    return null;\n                                }\n                            })()\n                        }\n                    </Box>\n            }\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onKeyDown={handleKeyDown} onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((one) => {\n                                let exist = data.data.findIndex((a) => a === one.id);\n                                return (exist === -1 && one.label.toLowerCase().search(selectKey) !== -1);\n                            });\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else if (selectKey && isAdmin) {\n                                return (\n                                    <MenuItem onClick={() => create(selectKey)}>\n                                        <AddIcon sx={{ fontSize: 16, position: 'absolute', left: 4 }} />\n                                        <Typography sx={{ pl: .5, width: '100%', overflow: 'hidden', fontSize: 13, whiteSpace: 'break-spaces' }}>create a new option named <b>{selectKey}</b></Typography>\n                                    </MenuItem>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </>\n    )\n}\n\nexport default MultiSelectCell;","import SimpleString from \"./SimpleString\";\nimport LongText from \"./LongText\";\nimport Attached from \"./Attached\";\nimport SelectCell from \"./SelectCell\";\nimport MultiSelectCell from \"./MultiSelectCell\";\nimport DateCell from \"./DateCell\";\nimport LinkField from \"./LinkField\";\nimport CheckBoxCell from \"./CheckBoxCell\";\nimport LogDate from \"./LogDate\";\nimport LogUser from \"./LogUser\";\n\nconst CellType = (props) => {\n    const { data, type, status, focus, width, height, position, group } = props;\n    return (\n        <>\n            {\n                (() => {\n                    switch (type) {\n                        case 'text':\n                        case 'email':\n                            return <SimpleString group={group} data={data} status={status} position={position} />\n                        case 'link':\n                            return <LinkField group={group} data={data} status={status} position={position} />\n                        case 'longText':\n                            return <LongText group={group} data={data} status={status} height={height} position={position} />\n                        case 'attached':\n                            return <Attached group={group} data={data} focus={focus} position={position} />\n                        case 'date':\n                            return <DateCell group={group} data={data} position={position} />\n                        case 'select':\n                            return <SelectCell group={group} data={data} width={width} position={position} />\n                        case 'multiSelect':\n                            return <MultiSelectCell group={group} data={data} width={width} position={position} />\n                        case 'checkBox':\n                            return <CheckBoxCell group={group} data={data} width={width} position={position} />\n                        case 'createdAt':\n                        case 'updatedAt':\n                            return <LogDate group={group} data={data} width={width} position={position} />\n                        case 'createdBy':\n                        case 'updatedBy':\n                            return <LogUser group={group} data={data} width={width} position={position} />\n                        default:\n                            return <SimpleString group={group} data={data} status={status} position={position} />\n                    }\n                })()\n            }\n        </>\n    )\n}\n\nexport default CellType;","import { useContext, useMemo } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport { TableContext } from '../../../contexts/table';\nimport CellType from './CellType';\n\n\nconst Cell = (props) => {\n    const { data, handleContextMenu, width, position, type, order, group, cssClass } = props;\n    const { active, selectActive, editable, selectEditable, selectEditabled, } = useContext(TableContext);\n\n    const style = {\n        order,\n        zIndex: 1,\n        width: width,\n        bgcolor: data.search ? '#97ffa2' : '#fff',\n        overflow: 'hidden',\n        borderTop: '1px solid #dde1e3',\n        borderRight: '1px solid #dde1e3',\n    }\n\n    const activeStyle = {\n        boxSizing: \"content-box\",\n        border: \"1px solid transparent\",\n        mt: \"-1px\",\n        ml: \"-2px\",\n        pr: 0,\n        borderRight: 0,\n        boxShadow: type === 'multiSelect' ? \"\" : \"0 0 0 2px #2d7ff9 !important\",\n        borderRadius: \"1px\",\n        zIndex: \"8 !important\"\n    }\n\n\n    const setActive = () => {\n        if (position.join('_') !== active && group === 'active') {\n            selectActive(position.join('_'))\n            selectEditable(\"\");\n            selectEditabled(editable);\n        }\n    }\n\n    const editState = () => {\n        if (type === 'attached') {\n            selectActive(position.join('_'))\n        } else if (type === 'select') {\n            selectActive(position.join('_'))\n        }\n        else {\n            selectEditabled(editable);\n            selectEditable(position.join('_'));\n        }\n    }\n\n    const handleKeyDown = (event) => {\n        if (active === position.join('_') && editable !== position.join('_')) {\n            if (type === 'longText' || type === 'text' || type === 'link') {\n                selectEditabled(editable);\n                selectEditable(position.join('_'));\n            }\n        }\n    }\n\n    /* eslint-disable */\n    const height = useMemo(() => {\n        if (editable === position.join('_') && active === position.join('_')) {\n            if (type === 'longText') {\n                return 142\n            } else {\n                return 32;\n            }\n        } else if (editable === position.join('_') || active === position.join('_')) {\n            if (type === 'attached') {\n                return 40;\n            } else {\n                return 32;\n            }\n        } else {\n            return 32;\n        }\n    }, [editable, position])\n    /* eslint-enable */\nconsole.log('active :>> ', active);\n    return (\n        <Stack\n            className={'cell' + cssClass}\n            onClick={() => setActive()}\n            onKeyDown={handleKeyDown}\n            onContextMenu={handleContextMenu}\n            tabIndex={position.join('-')}\n            sx={active === position.join('_') && group === 'active' ?\n                { ...style, ...activeStyle, height: height } :\n                { ...style, height: height }}\n        >\n            <Box onDoubleClick={() => editState()} sx={{ height: '100%' }}>\n                <CellType group={group} data={data} width={width} height={height} type={type} status={editable === position.join('_')} position={position} focus={active === position.join('_')} />\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Cell;","import React from 'react'\nimport Stack from '@mui/material/Stack';\n\nimport FirstCell from './FirstCell'\nimport Cell from './Cell'\nimport useTableContext from '../../../hooks/useTable';\n\n\nconst TableRow = ({ group, row, y, popup, visible, setVisible, setOrder, isFixed }) => {\n    const { header, body } = useTableContext();\n\n    const handleContextMenu = (event) => {\n        event.preventDefault();\n        setVisible(true);\n        setOrder({ id: row._id, index: row.order });\n        if (popup.current) {\n            const clickX = event.clientX;\n            const clickY = event.clientY;\n            const screenW = window.innerWidth;\n            const screenH = window.innerHeight;\n            const rootW = 200;\n            const rootH = 193;\n            // const rootW = popup.current.offsetWidth;\n            // const rootH = popup.current.offsetHeight;\n\n            const right = (screenW - clickX) > rootW;\n            const left = !right;\n            const top = (screenH - clickY) > rootH;\n            const bottom = !top;\n\n            if (right) {\n                popup.current.style.left = `${clickX + 5}px`;\n            }\n\n            if (left) {\n                popup.current.style.left = `${clickX - rootW - 5}px`;\n            }\n\n            if (top) {\n                popup.current.style.top = `${clickY - 120}px`;\n            }\n\n            if (bottom) {\n                popup.current.style.top = `${clickY - rootH - 130}px`;\n            }\n        }\n    };\n\n    const makeRow = (data, id) => {\n        if (header.length) {\n            let res = [];\n            if (isFixed) {\n                res.push(<FirstCell order={row.order} id={id} key={y + '_'} y={y} group={group} />)\n            }\n\n            let endOrder = header.filter((e) => e.allowed);\n            if (endOrder.length) {\n                endOrder = endOrder.reduce((max, one) => max.order > one.order ? max : one);\n            } else {\n                endOrder = { order: 0 }\n            }\n\n            for (let i = 0; i < data.length; i++) {\n                let cellData;\n                switch (header[i].type) {\n                    case 'createdAt':\n                        cellData = { data: row.createdAt, search: false };\n                        break;\n                    case 'updatedAt':\n                        cellData = { data: row.updater ? row.updatedAt : null, search: false };\n                        break;\n                    case 'createdBy':\n                        cellData = { data: row.creator, search: false };\n                        break;\n                    case 'updatedBy':\n                        cellData = { data: row.updater, search: false };\n                        break;\n                    default:\n                        cellData = data[i];\n                        break;\n                }\n\n                if (header[i].hide || !header[i].allowed) continue;\n\n                let idx = body.findIndex((e) => e._id === id);\n\n                if (isFixed && header[i].fixed) {\n                    res.push(\n                        <Cell\n                            cssClass={header[i].order === endOrder.order ? ' last' : ''}\n                            key={y + '_' + i}\n                            group={group}\n                            rorder={data.order}\n                            order={header[i].order}\n                            type={header[i].type}\n                            width={header[i].width}\n                            data={cellData}\n                            position={[idx, i]}\n                            popup={popup}\n                            visible={visible}\n                            setVisible={setVisible}\n                            setOrder={setOrder}\n                            handleContextMenu={handleContextMenu}\n                        />\n                    )\n                } else if (!isFixed && !header[i].fixed) {\n                    res.push(\n                        <Cell\n                            cssClass={header[i].order === endOrder.order ? ' last' : ''}\n                            key={y + '_' + i}\n                            group={group}\n                            rorder={data.order}\n                            order={header[i].order}\n                            type={header[i].type}\n                            width={header[i].width}\n                            data={cellData}\n                            position={[idx, i]}\n                            popup={popup}\n                            visible={visible}\n                            setVisible={setVisible}\n                            setOrder={setOrder}\n                            handleContextMenu={handleContextMenu}\n                        />\n                    )\n\n                }\n            }\n            return res;\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <Stack direction='row'\n            className='grid-row'\n            sx={{\n                // order: row.order,\n                height: 32,\n                width: '100%',\n                '&:hover': {\n                    '& .show-head': { opacity: 1 },\n                    '& .row-num': { opacity: 0 },\n                    '& .cell': {\n                        bgcolor: '#f8f8f8',\n                    }\n                }\n            }}>\n            {\n                makeRow(row.row, row._id)\n            }\n        </Stack>\n    )\n\n}\nexport default TableRow;","import React, { useEffect, useState, useRef } from 'react';\nimport uuid from 'react-uuid';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n\nimport AddIcon from '@mui/icons-material/Add';\nimport NorthIcon from '@mui/icons-material/North';\nimport SouthIcon from '@mui/icons-material/South';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport Axios, { duplicateRow, updateHeader, updateOrder, addTableRow } from '../../../utilis/request';\nimport AddColumn from '../../../components/AddColumn';\nimport TableHeader from './TableHeader';\nimport AllCheck from './AllCheck';\nimport TableRow from './TableRow';\nimport { allCheckWidth, checkWidth, processStatusWidth } from '../../../config/constant';\nimport useConfig from '../../../hooks/useConfig';\nimport useTableContext from '../../../hooks/useTable';\n\nconst GridBody = ({ mainW }) => {\n    const popup = useRef(0);\n    const { user } = useConfig();\n    const { header, changeHeader, body, editable, changeBody, selectEditable, selectEditabled, selectActive, filterBody, isFilter, hId, setColumHandle, isAdmin } = useTableContext();\n    const [index, setIndex] = useState(-1);\n    const [xP, setXp] = useState(-1);\n    const [visible, setVisible] = useState(false);\n    const [order, setOrder] = useState({ id: '', index: -1 });\n\n    const columnAddModal = (event) => {\n        setColumHandle({\n            direction: 'left',\n            target: event.currentTarget,\n            index: header.length,\n            type: 'add'\n        })\n    }\n\n    const teableHeader = () => {\n        let res = [];\n\n        res.push(<AllCheck key={-1} />)\n        let realHeader = Object.assign([], header);\n        realHeader = realHeader.map((e, i) => ({ ...e, index: i })).sort((a, b) => a.order - b.order);\n\n        let fixedW = allCheckWidth + processStatusWidth;\n\n        for (let i = 0; i < realHeader.length; i++) {\n            if (realHeader[i].hide || !realHeader[i].allowed) continue;\n            if (realHeader[i].fixed) {\n                res.push(\n                    <Box key={i} sx={{\n                        order: realHeader[i].order,\n                        height: '100%', position: 'sticky', left: fixedW, zIndex: 9, width: realHeader[i].width, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3'\n                    }}>\n                        <TableHeader me={realHeader[i]} i={realHeader[i].index} />\n                        <Box onMouseDown={(e) => downEvent(e, realHeader[i].index)} onMouseUp={() => upEvent(i)} sx={{ width: '2px', bgcolor: index === realHeader[i].index ? \"#1283da\" : '#f5f5f5', height: \"100%\", position: 'absolute', top: 0, right: 0, '&:hover': { cursor: 'col-resize' } }} />\n                    </Box>\n                )\n                fixedW += realHeader[i].width\n            } else {\n                res.push(\n                    <Box\n                        key={i}\n                        sx={{\n                            order: realHeader[i].order,\n                            height: '100%', position: 'relative', width: realHeader[i].width, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3'\n                        }}>\n                        <TableHeader me={realHeader[i]} i={realHeader[i].index} />\n                        <Box onMouseDown={(e) => downEvent(e, realHeader[i].index)} onMouseUp={() => upEvent(i)} sx={{ width: '2px', bgcolor: index === realHeader[i].index ? \"#1283da\" : '#f5f5f5', height: \"100%\", position: 'absolute', top: 0, right: 0, '&:hover': { cursor: 'col-resize' } }} />\n                    </Box>\n                )\n            }\n        }\n\n        res.push(\n            <React.Fragment key={header.length}>\n                {\n                    user.role === 'Admin' ?\n                        <Box sx={{ height: '100%', width: 100, borderBottom: '1px solid #d1d1d1', order: header.length }}>\n                            <Stack onClick={columnAddModal} direction='row' alignItems='center' justifyContent='center' sx={{ height: '100%', width: '100%', px: '5px', cursor: 'pointer' }}>\n                                <AddIcon sx={{ fontSize: 16 }} />\n                            </Stack>\n                        </Box> :\n                        <Box sx={{ height: '100%', width: 16, borderBottom: '1px solid #d1d1d1', order: header.length }} />\n                }\n            </React.Fragment >\n        )\n        return res;\n    }\n\n    // const tableAddRow = (data) => {\n    //     let width = 0;\n    //     for (let i = 0; i < header.length; i++) {\n    //         if (header[i].hide || !header[i].allowed) continue;\n    //         width += header[i].width;\n    //     }\n    //     if (isAdmin) {\n    //         width += 230;\n    //     }\n    //     return (\n    //         <>\n    //             <Stack\n    //                 onClick={addRow}\n    //                 direction='row'\n    //                 className='cell'\n    //                 sx={{\n    //                     width: 130,\n    //                     height: 32,\n    //                     bgcolor: '#fff',\n    //                     borderBottom: '1px solid #dde1e3',\n    //                     cursor: 'pointer'\n    //                 }}>\n    //                 <Box sx={{ display: 'inline-block', position: 'relative', height: 32, width: 32, zIndex: 2, textAlign: 'center' }}>\n    //                     <Box sx={{ position: 'absolute', width: '100%', top: 7, color: '#707070', textAlign: 'center', fontSize: 12 }}>\n    //                         <AddIcon sx={{ fontSize: 16 }} />\n    //                     </Box>\n    //                 </Box>\n    //             </Stack>\n    //             <Stack\n    //                 onClick={addRow}\n    //                 direction='row'\n    //                 className='cell'\n    //                 sx={{\n    //                     width: width,\n    //                     height: 32,\n    //                     bgcolor: '#fff',\n    //                     borderBottom: '1px solid #dde1e3',\n    //                     borderRight: '1px solid #dde1e3',\n    //                     cursor: 'pointer'\n    //                 }} />\n    //         </>\n    //     )\n    // }\n\n    const tablFooter = () => {\n        let res = [];\n        for (let i = 0; i < header.length; i++) {\n            if (header[i].hide || !header[i].allowed) continue;\n\n            res.push(\n                <Box key={i} sx={{ height: 34, width: header[i].width, }} />\n            )\n        }\n        return res;\n    }\n\n    const downEvent = (e, i) => {\n        setIndex(i)\n        setXp(e.clientX - header[i].width)\n    }\n\n    const upEvent = () => {\n        let row = header.map((e) => {\n            let temp = e;\n            delete temp.hide;\n            return temp;\n        })\n        updateHeader({ row, hId })\n        setIndex(-1)\n        setXp(-1)\n    }\n\n    const addRow = async () => {\n        let newRow = [];\n        for (let i = 0; i < header.length; i++) {\n            switch (header[i].type) {\n                case 'text':\n                case 'longText':\n                case 'email':\n                case 'date':\n                case 'link':\n                case 'select':\n                case 'number':\n                case 'createdAt':\n                case 'updatedAt':\n                case 'createdBy':\n                case 'updatedBy':\n                    newRow.push({ id: uuid(), data: '' });\n                    break;\n                case 'checkBox':\n                    newRow.push({ id: uuid(), data: false });\n                    break;\n                case 'multiSelect':\n                case 'attached':\n                    newRow.push({ id: uuid(), data: [] });\n                    break;\n                default:\n                    newRow.push({ id: uuid(), data: '' });\n                    break;\n            }\n        }\n        let rdata = await addTableRow(newRow, hId, user._id);\n        changeBody([...body, { ...rdata.data, creator: user }]);\n        document.getElementsByClassName('tableBody')[0].scroll({ top: (body.length + 3) * 32 - document.getElementsByClassName('tableBody')[0].clientHeight, behavior: 'smooth' });\n    }\n\n    const clearSelect = () => {\n        selectEditable(\"\");\n        selectEditabled(editable);\n        selectActive(\"\");\n    }\n\n    const leftClick = (event, visible) => {\n        if (event.target.contains) {\n            const wasOutside = !(event.target === popup.current || event.target.parentElement === popup.current);\n            if (wasOutside && visible) {\n                setVisible(false);\n                setOrder({ id: \"\", index: -1 })\n            }\n        }\n    };\n\n    const changeOrder = async (order, up) => {\n        let data = await updateOrder({ ...order, up });\n        if (data.status) {\n            let t = { data: body };\n            if (up) {\n                let idx = t.data.findIndex(e => e.order === order.index - 1);\n                t.data[idx].order++;\n                idx = t.data.findIndex(e => e._id === order.id);\n                t.data[idx].order--;\n            } else {\n                let idx = t.data.findIndex(e => e.order === order.index + 1);\n                t.data[idx].order--;\n                idx = t.data.findIndex(e => e._id === order.id);\n                t.data[idx].order++;\n            }\n            changeBody(t.data);\n        }\n    }\n\n    const deleteRow = async () => {\n        let t = { data: body };\n        t.data.sort((a, b) => a.order - b.order);\n        let y = t.data.findIndex(e => e._id === order.id);\n        let rdata = await Axios('POST', 'table/deleteRow', { data: t.data[y] });\n        if (!rdata.status) {\n            alert('server error!')\n        } else {\n            t.data.splice(y, 1);\n            for (let i = y; i < t.data.length; i++) {\n                t.data[i].order--;\n            }\n            changeBody(t.data);\n        }\n    }\n\n    const copyRow = async (current) => {\n        let rdata = await duplicateRow(current.id, user._id);\n        if (rdata.status) {\n            let t = { data: body };\n            t.data.sort((a, b) => a.order - b.order);\n            for (let i = current.index + 1; i < t.data.length; i++) {\n                t.data[i].order++;\n            }\n            rdata.data.creator = user;\n            rdata.data.updater = user;\n            rdata.data.updatedAt = new Date();\n            rdata.data.createdAt = new Date();\n            t.data.splice(current.index + 1, 0, rdata.data);\n            changeBody([...t.data])\n        } else {\n            alert('Server error!')\n        }\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        const handleMouseMove = (event) => {\n            if (index > -1) {\n                let nHeader = header;\n                let dis = event.clientX - xP;\n\n                if (dis > 130) {\n                    nHeader[index].width = dis;\n                    changeHeader(nHeader);\n                }\n            }\n        };\n\n        window.addEventListener('mousemove', handleMouseMove);\n        return () => {\n            window.removeEventListener(\n                'mousemove',\n                handleMouseMove\n            );\n        };\n    }, [index, xP]);\n\n    useEffect(() => {\n        const handleMouseUp = () => {\n            if (index > -1 && xP > -1) {\n                let row = header.map((e) => {\n                    let temp = e;\n                    delete temp.hide;\n                    return temp;\n                })\n                updateHeader({ row, hId })\n                setIndex(-1)\n                setXp(-1)\n            }\n        };\n\n        window.addEventListener('mouseup', handleMouseUp);\n\n        return () => {\n            window.removeEventListener(\n                'mouseup',\n                handleMouseUp\n            );\n        };\n    }, [xP, index, header]);\n\n    useEffect(() => {\n        window.addEventListener('click', (e) => leftClick(e, visible));\n        return () => {\n            window.removeEventListener('click', (e) => leftClick(e, visible));\n        };\n    }, [visible]);\n    /* eslint-enable */\n\n    return (\n        <>\n            <Box sx={{ height: '200%', position: 'sticky', left: allCheckWidth - 1, width: '6px', bgcolor: '#99999917', zIndex: 99, top: 0 }} >\n                <Box sx={{ height: '100%', width: '1px', bgcolor: '#dde1e3' }} />\n            </Box>\n            <Box sx={{ position: 'absolute', right: 0, width: mainW, left: 0, overflow: 'visible', top: 0, bottom: 0 }}>\n                <Box sx={{ height: 32, top: 0, left: 0, right: 0, zIndex: 3, overflow: 'visible', bgcolor: '#f2f2f2', position: 'sticky', borderBottom: '1px solid #dde1e3' }}>\n                    <Box sx={{ height: 32, position: 'relative' }}>\n                        <Box sx={{ height: 32, display: 'flex' }}>\n                            {\n                                teableHeader()\n                            }\n                        </Box>\n                    </Box>\n                </Box>\n                <Box className='tableBody' sx={{ top: 32, left: 0, right: 0, bottom: 0, zIndex: 0, position: \"absolute\", height: 'calc(100% - 67px)', }}>\n                    <Box sx={{ position: \"relative\", }}>\n                        {\n                            (() => {\n                                let data = body;\n                                let width = 0, fixedW = checkWidth;\n                                let completed = [], activeprojects = [];\n\n                                for (let i = 0; i < header.length; i++) {\n                                    if (header[i].hide || !header[i].allowed) continue;\n                                    if (header[i].fixed) {\n                                        fixedW += header[i].width;\n                                    } else {\n                                        width += header[i].width;\n                                    }\n                                }\n\n                                for (let i = 0; i < data.length; i++) {\n                                    if (data[i].done) {\n                                        completed.push(data[i])\n                                    } else {\n                                        activeprojects.push(data[i])\n                                    }\n                                }\n\n                                // completed.sort((a, b) => (new Date(b.updatedAt).valueOf() - new Date(a.updatedAt).valueOf()));\n\n                                return (\n                                    <>\n                                        <Stack>\n                                            <Stack direction='row' sx={{ height: 16 }} onClick={() => clearSelect()}>\n                                                <Box sx={{ width: fixedW, height: '100%', position: 'sticky', left: 0, zIndex: 9, bgcolor: '#f7f7f7' }} />\n                                            </Stack>\n                                            <Box sx={{ display: 'flex' }}>\n                                                <Box sx={{ width: 16, bgcolor: '#f7f7f7', zIndex: 9, position: 'sticky', left: 0 }} onClick={() => clearSelect()} />\n                                                <Stack sx={{ zIndex: 9, position: 'sticky', left: 16, width: fixedW, border: '1px solid #dde1e3', borderTopLeftRadius: 8, borderBottomLeftRadius: 8, '&:before': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', top: -1, left: -7 }, '&:after': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', bottom: -1, left: -7 } }}>\n                                                    <Box sx={{ width: '100%', height: 47, bgcolor: '#fffafa', py: 1, px: 1, borderTopLeftRadius: 8, borderBottomLeftRadius: 8, }} onClick={() => clearSelect()}>\n                                                        <Typography sx={{ color: 'gray' }}>{`Active (${activeprojects.length})`}</Typography>\n                                                    </Box>\n                                                    {\n                                                        activeprojects.map((item, idx) => <TableRow group={'active'} isFixed={true} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                                <Stack sx={{ width: width, borderTopRightRadius: 8, borderBottomRightRadius: 8, borderTop: '1px solid #dde1e3', borderBottom: '1px solid #dde1e3', }} >\n                                                    <Box sx={{ bgcolor: '#fffafa', height: 47, py: 1, px: 1, borderTopRightRadius: 8, borderRight: '1px solid #dde1e3', borderBottomRightRadius: activeprojects.length ? 0 : 8, }} onClick={() => clearSelect()} />\n                                                    {\n                                                        activeprojects.map((item, idx) => <TableRow group={'active'} isFixed={false} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                            </Box>\n\n                                            <Stack direction='row' sx={{ height: 16 }} onClick={() => clearSelect()}>\n                                                <Box sx={{ width: fixedW, height: '100%', position: 'sticky', left: 0, zIndex: 9, bgcolor: '#f7f7f7' }} />\n                                            </Stack>\n                                            <Box sx={{ display: 'flex' }}>\n                                                <Box sx={{ width: 16, bgcolor: '#f7f7f7', zIndex: 9, position: 'sticky', left: 0 }} onClick={() => clearSelect()} />\n                                                <Stack sx={{ zIndex: 9, position: 'sticky', left: 16, width: fixedW, border: '1px solid #dde1e3', borderTopLeftRadius: 8, borderBottomLeftRadius: 8, '&:before': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', top: -1, left: -7 }, '&:after': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', bottom: -1, left: -7 } }}>\n                                                    <Box sx={{ width: '100%', height: 47, bgcolor: '#fffafa', py: 1, px: 1, borderTopLeftRadius: 8, borderBottomLeftRadius: 8, }} onClick={() => clearSelect()}>\n                                                        <Typography sx={{ color: 'gray' }}>{`Completed (${completed.length})`}</Typography>\n                                                    </Box>\n                                                    {\n                                                        completed.map((item, idx) => <TableRow group={'completed'} isFixed={true} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                                <Stack sx={{ width: width, borderTopRightRadius: 8, borderBottomRightRadius: 8, borderTop: '1px solid #dde1e3', borderBottom: '1px solid #dde1e3', }} >\n                                                    <Box sx={{ bgcolor: '#fffafa', height: 47, py: 1, px: 1, borderTopRightRadius: 8, borderRight: '1px solid #dde1e3', borderBottomRightRadius: completed.length ? 0 : 8, }} onClick={() => clearSelect()} />\n                                                    {\n                                                        completed.map((item, idx) => <TableRow group={'completed'} isFixed={false} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                            </Box>\n                                        </Stack>\n                                    </>\n                                )\n                            })()\n                        }\n                    </Box>\n                    {/* <Box sx={{ width: '100%', minHeight: '100% - 160PX' }} onClick={() => clearSelect()} /> */}\n                </Box>\n                <Box sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 3, bgcolor: '#ffffff', borderTop: '1px solid #dde1e3', }} >\n                    <Box sx={{ height: 35, display: 'flex' }}>\n                        <Box sx={{ width: 66, bgcolor: '#ffffff80', borderTop: '1px solid #dde1e3', }}>\n                            <Box sx={{ top: 0, left: 0, height: 34, overflow: 'visible', position: 'absolute', }}>\n                                <Box sx={{ position: 'relative' }}>\n                                    <Stack direction='row' sx={{ position: 'absolute', zIndex: 1, height: 24, left: 0, top: 0 }} >\n                                        {\n                                            (Boolean(header.filter((e) => e.allowed).length)) && (user.role !== \"Developer\") &&\n                                            <Stack direction='row' sx={{ position: 'relative', pl: 1, flex: '1 1 auto', bottom: 16, }} >\n                                                <IconButton onClick={() => addRow()} sx={{ position: 'relative', height: 36, width: 36, borderRadius: 50, border: '1px solid #0000001a', bgcolor: '#fff', p: 1, '&:hover': { bgcolor: '#fff' } }}>\n                                                    <AddIcon />\n                                                </IconButton>\n                                            </Stack>\n                                        }\n                                        <Box sx={{\n                                            px: 1, pt: '3px', pb: '2px', fontSize: 11, width: 'auto', overflow: 'hidden', position: 'static', bgcolor: '#fbfbfb', whiteSpace: 'nowrap', textOverflow: 'ellipsis',\n                                        }}>\n                                            {`${body.length} records`}\n                                        </Box>\n                                    </Stack>\n                                </Box>\n                            </Box>\n                        </Box>\n                        {tablFooter()}\n                    </Box>\n                </Box>\n                <AddColumn />\n            </Box>\n            <Box ref={popup} sx={{ py: 2, position: 'absolute', display: visible ? 'block' : 'none', zIndex: visible ? 1200 : 0, bgcolor: '#fff', borderRadius: 1, boxShadow: '0px 5px 5px -3px rgb(0 0 0 / 20%), 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%)' }}>\n                <Stack spacing={.5} sx={{ minWidth: 200 }}>\n                    <Button disabled={order.index <= 0} onClick={() => changeOrder(order, true)} startIcon={<NorthIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize', borderRadius: 0, pl: 2 }}>Move Up</Button>\n                    <Button disabled={(isFilter ? filterBody : body).length - 1 <= order.index} onClick={() => changeOrder(order, false)} startIcon={<SouthIcon sx={{ fontSize: 15 }} />} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize', borderRadius: 0, pl: 2 }}>Move Down</Button>\n                    <Divider />\n                    <Button startIcon={<ContentCopyIcon sx={{ fontSize: 15 }} />} onClick={() => copyRow(order)} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize', borderRadius: 0, pl: 2 }}>Duplicate Row</Button>\n                    {\n                        isAdmin &&\n                        <>\n                            <Divider />\n                            <Button startIcon={<DeleteIcon />} onClick={deleteRow} sx={{ color: '#4d4d4d', justifyContent: 'flex-start', textTransform: 'capitalize', borderRadius: 0, pl: 2 }}>Delete Row</Button>\n                        </>\n                    }\n                </Stack>\n            </Box>\n        </>\n    )\n}\n\nexport default GridBody;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport { TableContext } from '../../../contexts/table';\n\nimport TableBody from './TableBody';\nimport { ConfigContext } from '../../../contexts/config';\nimport { addButtonWidth, allCheckWidth, scrollWidth } from '../../../config/constant';\n\nconst TableContent = () => {\n    const { header, isAdmin } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [data, setData] = useState({\n        fixedHeader: [],\n        rightHeader: [],\n        mainW: 0\n    });\n\n    useEffect(() => {\n        let fixed = [], right = [];\n        for (let item of header) {\n            if (item.fixed) {\n                fixed.push(item)\n            } else {\n                right.push(item)\n            }\n        }\n        let mainW = isAdmin ? addButtonWidth + allCheckWidth : allCheckWidth + scrollWidth;\n        for (const one of header) {\n            if (!one.hide && one.allowed) {\n                mainW += one.width;\n            }\n        }\n        mainW = mainW > window.screen.width ? mainW : window.screen.width\n        setData({ fixedHeader: fixed, rightHeader: right, mainW })\n    }, [header, user.role, isAdmin])\n\n    const { mainW, } = data;\n\n    return (\n        <Box sx={{\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            position: 'absolute',\n            overflow: 'auto',\n        }}>\n            <TableBody mainW={mainW} />\n        </Box >\n    )\n}\n\nexport default TableContent;","import React, { useState, useEffect } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport { getFirstData } from '../../utilis/request';\n\nimport Loading from '../../components/Loading';\nimport GridTabs from './GridTabs';\nimport SubTools from './SubTools';\nimport TableContent from './TableContent';\nimport UserManagement from '../../components/UserManagement';\n\nimport useConfig from '../../hooks/useConfig';\nimport useTableContext from '../../hooks/useTable';\nimport { makeHeaderData } from '../../utilis/util';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Main = () => {\n    const navigate = useNavigate();\n    const { projectId } = useParams();\n    const { user } = useConfig();\n    const { initData, users, setUsers, tableName } = useTableContext();\n\n    const [headerNames, setHeaderNames] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            let data = await getFirstData({ userId: user._id, projectId });\n            if (data.status) {\n                data = data.data;\n                let me = data.users.filter((e) => e._id === user._id)[0];\n                let hId = data.header._id ?? \"\";\n\n                const header = await makeHeaderData(me, hId, user, data.header.row);\n                const users = data.users.map((one) => {\n                    if (!one.allowed) one.allowed = {}\n                    if (!one.editable) one.editable = {}\n                    if (!one.showList) one.showList = {}\n                    if (!one.allowIds) one.allowIds = {}\n                    if (!one.myTable) one.myTable = []\n                    return one;\n                })\n\n                setUsers(users);\n                setHeaderNames(data.headers);\n                initData({ header, hId, body: data.body, notifications: data.notification, project: data.project });\n                setLoading(true)\n            } else {\n                toast.error(data.message)\n                navigate('/')\n            }\n        })()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Stack sx={{ width: '100%', height: '100%' }}>\n            <GridTabs headerNames={headerNames} setHeaderNames={setHeaderNames} />\n\n            <Stack sx={{ width: '100%', height: '100%' }}>\n                <SubTools active={tableName === 'User Management'} />\n\n                <Stack sx={{ height: '100%', width: '100%', bgcolor: '#f5f5f5' }}>\n                    <Stack sx={{ height: '100%', flex: '1 1 auto' }}>\n                        <Stack sx={{ height: '100%', position: 'relative', overflow: 'hidden' }}>\n                            <Box sx={{ height: '100%', width: '100%', bgcolor: '#f7f7f7', }}>\n                                <Box sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    right: 0,\n                                    zIndex: 4,\n                                    overflow: 'hidden',\n                                    opacity: 1,\n                                }}>\n                                    {\n                                        loading && users.length ?\n                                            <>\n                                                {\n                                                    headerNames.length ?\n                                                        <TableContent /> : <Box />\n                                                }\n                                            </>\n                                            :\n                                            <Box sx={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                <Loading />\n                                            </Box>\n                                    }\n                                </Box>\n                            </Box>\n                        </Stack>\n                    </Stack>\n                </Stack>\n            </Stack>\n            <UserManagement />\n        </Stack>\n    )\n}\n\nexport default Main;","/* eslint-disable no-restricted-properties */\nexport const bytesToSize = (bytes, decimals = 2) => {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n","export const fileToBase64 = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = (error) => reject(error);\n});\n"],"names":["_path","headerNames","setHeaderNames","projectId","useParams","useState","active","setActive","anchor","setAnchor","editAnchor","setEditAnchor","label","setLabel","projectName","setProjectName","headerList","setHeaderList","selectKey","setSelectKey","trnasferModal","setTrnasferModal","open","Boolean","edit","projects","setProjects","link","setLink","user","useConfig","useTableContext","changeHeader","changeBody","setHid","selectEditabled","isAdmin","users","setUsers","closePop","params","generateLink","createInviteLink","_id","inviteLink","status","key","toast","selectTab","i","id","changeTab","rdata","makeHeaderData","header","row","body","alert","handleCreate","createTab","name","pId","data","length","changName","origin","updateTab","message","deleteHandle","deleteTab","splice","switchFunction","event","index","flag","target","allowTable","userId","tableId","allowed","findIndex","e","temp","itemIdx","myTable","push","updateUser","openTransferModal","getProjects","filter","closeTransferModal","handleTransfer","transferTable","useEffect","Stack","direction","alignItems","justifyContent","sx","bgcolor","height","px","position","Box","width","top","left","right","bottom","onDragEnd","result","destination","tempHeader","startIndex","source","endIndex","newOrder","item","order","updateHeaderOrder","droppableId","type","provided","snapshot","flex","zIndex","ref","innerRef","droppableProps","map","one","draggableId","DraggingStyle","backgroundColor","draggableProps","dragHandleProps","onClick","cursor","borderTopRightRadius","borderTopLeftRadius","boxShadow","content","outlineOffset","display","pr","pl","Typography","variant","fontSize","userSelect","color","ExpandMore","placeholder","IconButton","p","ml","Add","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","py","TextField","value","onChange","autoFocus","borderWidth","spacing","mt","Button","textTransform","borderColor","disabled","Divider","my","mb","maxWidth","filtered","firstName","lastName","toLowerCase","search","minHeight","borderRadius","overflow","textOverflow","whiteSpace","idx","check","AntSwitch","inputProps","checked","component","textDecoration","ListItem","disablePadding","ListItemButton","ListItemIcon","minWidth","SwapHoriz","ListItemText","primary","CopyToClipboard","text","Share","Delete","Dialog","DialogTitle","DialogContent","FormControl","fullWidth","InputLabel","Select","MenuItem","pt","mr","setUser","hId","uidx","setUidx","list","setList","setAnchorEl","handleClose","handleHide","userStatus","nHeader","hide","newShowList","showList","updateShowList","handleAll","userChange","handleAllowSave","allowIds","editable","updateAllowed","getHeaderData","fUsers","role","aList","eVal","nList","iList","size","startIcon","VisibilityOff","currentTarget","borderBottom","pb","console","log","updateHeader","sort","a","b","isDragging","opacity","oldEditable","newEditable","updateEditable","handleEdit","Apps","onlyUser","department","align","conditions","compare","condition","toLocaleLowerCase","changeFilterBody","filterItem","setFilterItem","setFilter","setType","handleChange","k","v","n","field","Number","originalname","join","FilterList","border","margin","borderRight","handleDelete","fontSiz","deleteRowList","setDeleteRowList","showSearch","setShowSearch","deleteSelected","remain","idOne","Hide","Search","borderStyle","borderBottomLeftRadius","borderBottomRightRadius","Close","_excluded","_extends","Object","assign","bind","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSortAz","_ref","svgRef","title","titleId","props","viewBox","className","style","shapeRendering","fillRule","fill","d","ForwardRef","SvgSortZa","me","setColumHandle","sorted","setSorted","setOrder","columnSort","addField","parentElement","adata","bdata","Icons","fontWeight","ArrowDropDown","transformOrigin","Edit","ArrowBack","ArrowForward","fixHeader","fixed","setPin","PushPin","hideField","newHeader","tempBody","removeColumn","deleteField","useContext","TableContext","allCheckWidth","borderLeft","Checkbox","all","UploadModal","porps","close","error","setError","files","setFiles","start","setStart","progress","setProgress","tempFiles","setTempFiles","setValue","newValue","handleSubmit","form","FormData","file","append","fileAxios","res","rowId","t","updateRow","modifier","history","dataType","sign","creator","cellName","cellId","columnId","updateLog","lineHeight","multiple","preventDefault","blur","split","pop","slice","fileTypes","moreTemp","imgTypes","fileToBase64","base64","bytesToSize","pointerEvents","flexDirection","wordBreak","backgroundImage","marginBottom","backgroundRepeat","xs","sm","marginTop","flexGrow","alt","src","File","padding","background","objectPosition","objectFit","backgroundSize","backgroundPosition","marginLeft","LinearProgress","theme","palette","light","DialogActions","group","ConfigContext","useMemo","old","oldLabel","oldColor","updater","email","updatedAt","Date","new","create","hex","uuid","Axios","then","colored","onKeyDown","removeHandle","flexWrap","TestInput","baseVal","dataId","selectEditable","saveRequest","liveFocus","useCallback","saveData","onBlur","onModal","isDel","modalChange","editabled","selectActive","defaultValue","multiline","rows","handleKeyDown","href","rel","newVal","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","val","moment","format","y","changeItem","setIdx","setData","setIsDel","commant","setCommant","imgData","setImgData","fullImg","setFullImg","showChat","setShowChat","follower","setFollower","imgIndex","setImgIndex","uploadOpen","setUploadOpen","activeType","setactiveType","whiteList","setWhiteList","uSearch","setUSearch","openWl","drop","deleteRow","removeFile","j","removeData","handleCommentType","switchCommentType","document","getElementsByClassName","scroll","clientHeight","behavior","copyRow","duplicateRow","createdAt","getData","getLog","logData","followers","lastChild","ExpandLess","ContentCopy","SpeakerNotesOff","ChatBubble","mx","Grid","container","md","m","LogUser","AttachFile","openUpload","mimetype","startsWith","uploadUrl","filename","getImg","maxHeight","x","openFullImg","downloadFile","ArrowCircleDown","endIcon","typeLabel","Menu","MenuListProps","Check","inset","AvatarGroup","max","Avatar","writer","ReactTimeAgo","date","locale","durationDate","before","endDate","diff","getTime","day","Math","floor","mod","hour","mod1","minute","mod2","second","jdx","Tooltip","Diversity3","rmeoveItem","borderTop","default","chat","inputMessage","partner","selectPartner","ImageModal","modalI","setModalI","setIndex","setOpen","reason","setReason","reasonDes","setReasonDes","isFilter","filterBody","approveRow","approveAction","done","rejectRow","rejectReason","checkVal","checkWidth","textAlign","OpenInFull","arrow","SwipeLeft","CheckCircleOutline","required","focus","setOpenUpload","handleOpenModal","handlePaste","evt","clipboardItems","clipboardData","items","blob","getAsFile","tabIndex","onPaste","onDoubleClick","handleContextMenu","cssClass","activeStyle","boxSizing","onContextMenu","popup","visible","setVisible","isFixed","current","clickX","clientX","clickY","clientY","window","innerWidth","innerHeight","endOrder","reduce","cellData","rorder","makeRow","mainW","useRef","xP","setXp","columnAddModal","downEvent","upEvent","addRow","newRow","addTableRow","clearSelect","leftClick","contains","changeOrder","up","updateOrder","handleMouseMove","dis","addEventListener","removeEventListener","handleMouseUp","realHeader","fixedW","processStatusWidth","onMouseDown","onMouseUp","teableHeader","completed","activeprojects","tablFooter","AddColumn","North","South","fixedHeader","rightHeader","addButtonWidth","scrollWidth","screen","TableBody","navigate","useNavigate","initData","tableName","loading","setLoading","getFirstData","headers","notifications","notification","project","Loading","UserManagement","bytes","decimals","dm","sizes","parseFloat","pow","toFixed","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror"],"sourceRoot":""}