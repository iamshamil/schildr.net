{"version":3,"file":"static/js/691.3da5d9ac.chunk.js","mappings":"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","sources":["pages/View/TableContent/TableHeader.js","pages/View/TableContent/AllCheck.js","pages/View/TableContent/CellType/ModalSelectCell.js","pages/View/TableContent/CellType/MultiModalSelect.js","pages/View/TableContent/CellType/SimpleString.js","pages/View/TableContent/CellType/LongText.js","pages/View/TableContent/CellType/LinkField.js","pages/View/TableContent/CellType/DateCell.js","pages/View/TableContent/CellType/CheckBoxCell.js","pages/View/TableContent/CellType/LogDate.js","pages/View/TableContent/CellType/LogUser.js","components/ViewModal.js","pages/View/TableContent/FirstCell.js","pages/View/TableContent/CellType/Attached.js","pages/View/TableContent/CellType/SelectCell.js","pages/View/TableContent/CellType/MultiSelectCell.js","pages/View/TableContent/CellType/index.js","pages/View/TableContent/Cell.js","pages/View/TableContent/TableRow.js","pages/View/TableContent/TableBody.js","pages/View/TableContent/index.js","pages/View/index.js"],"sourcesContent":["import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport Icons from '../../../components/Icons';\nimport useTableContext from '../../../hooks/useTable';\n\nconst TableHeader = (props) => {\n    const { i, me } = props;\n    const { header } = useTableContext()\n\n    return (\n        <>\n            <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ height: '100%', width: '100%', px: '5px' }}>\n                <Stack direction='row' alignItems='center' sx={{ overflow: 'hidden' }}>\n                    <Box sx={{ display: 'flex' }}>\n                        <Icons type={header[i].type} editable={false} />\n                    </Box>\n\n                    <Box sx={{\n                        maxWidth: \"100%\",\n                        overflow: 'hidden',\n                        textOverflow: \"ellipsis\",\n                        whiteSpace: \"nowrap\",\n                    }}>\n                        <Typography\n                            variant='span'\n                            sx={{\n                                ml: '5px',\n                                color: '#333333',\n                                fontWeight: 300,\n                                fontSize: 13,\n                                userSelect: 'none'\n                            }}\n                        >\n                            {me.name}\n                        </Typography>\n                    </Box>\n                </Stack>\n            </Stack>\n        </>\n    )\n}\n\nexport default TableHeader;","import React, { useContext } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport { TableContext } from '../../../contexts/table';\nimport { Typography } from '@mui/material';\nimport { allCheckWidth } from '../../../config/constant';\n\nconst AllCheck = () => {\n    const { body, deleteRowList, setDeleteRowList } = useContext(TableContext);\n\n    const handleAll = (e) => {\n        if (e.target.checked) {\n            let all = body.map((one) => one._id);\n            setDeleteRowList([...all]);\n        } else {\n            setDeleteRowList([]);\n        }\n    }\n\n    return (\n        <>\n            <Box sx={{ position: 'sticky', left: 0, zIndex: 9, display: 'flex', alignItems: 'center', order: -2, height: '100%', width: allCheckWidth, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3' }}>\n                <Box sx={{\n                    width: 32,\n                    height: 32,\n                    cursor: 'default',\n                    borderLeft: 'none',\n                    borderRight: 'none',\n                    position: 'relative',\n                    ml: 2\n                }}>\n                    <Checkbox onChange={handleAll} checked={Boolean(deleteRowList.length)} sx={{ '& .MuiSvgIcon-root': { fontSize: 15 } }}\n                    />\n                </Box>\n                <Typography sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                    Actions\n                </Typography>\n            </Box>\n            {/* <Box sx={{ position: 'sticky', left: allCheckWidth, zIndex: 9, height: '100%', width: processStatusWidth, borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3', order: -1, bgcolor: '#f5f5f5' }}>\n                <Stack direction='row' alignItems='center' justifyContent='center' sx={{ height: '100%', width: '100%', px: '5px', cursor: 'pointer' }}>\n                    <Box sx={{\n                        maxWidth: \"100%\",\n                        overflow: 'hidden',\n                        textOverflow: \"ellipsis\",\n                        whiteSpace: \"nowrap\",\n                    }}>\n                        <Typography\n                            variant='span'\n                            sx={{\n                                ml: '5px',\n                                color: '#333333',\n                                fontSize: 13,\n                                userSelect: 'none'\n                            }}\n                        >\n                            Status\n                        </Typography>\n                    </Box>\n                </Stack>\n            </Box> */}\n        </>\n    )\n}\n\nexport default AllCheck;","import { useEffect, useState, useMemo } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport useTableContext from '../../../../hooks/useTable';\n\nconst ModalSelect = (props) => {\n    const { data, position, group } = props;\n    const { header, } = useTableContext();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = useMemo(() => Boolean(anchorEl), [anchorEl]);\n\n    const handleClick = (event) => {\n        if (group === 'active') {\n            setAnchorEl(event.currentTarget)\n        }\n    };\n\n    const close = async (id, label, color) => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; })\n        setList(iList)\n    }, [header, position])\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} onClick={handleClick}>\n                {\n                    (() => {\n                        const idx = list.findIndex((e) => e.id === data.data);\n                        if (idx !== -1) {\n                            return (\n                                <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                    <Box\n                                        sx={{\n                                            display: 'flex',\n                                            maxWidth: \"100%\",\n                                            overflow: \"hidden\",\n                                            textOverflow: \"ellipsis\",\n                                            whiteSpace: \"pre\",\n                                            fontSize: 13,\n                                            minWidth: 18,\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        {list[idx].label}\n                                    </Box>\n                                </Typography>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { mt: -1.5, } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </>\n    )\n}\n\nexport default ModalSelect;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\n\nimport useTableContext from '../../../../hooks/useTable';\n\nconst MultiModalSelect = (props) => {\n    const { data, width, position } = props;\n    const { header, } = useTableContext();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget.parentElement.parentElement)\n    };\n\n    const close = async (id, label, color) => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; });\n        setList(iList);\n    }, [header, position, data.data]);\n\n    return (\n        <Box sx={{ position: 'relative' }}>\n            <Stack className='selectItems-wrap' sx={{ border: '1px solid #0000003b', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                <Stack direction='row' sx={{ flexWrap: \"wrap\", alignItems: 'center' }} >\n                    {\n                        (() => {\n                            if (data.data.length) {\n                                return (\n                                    <>\n                                        {\n                                            data.data.map((item, i) => {\n                                                const idx = list.findIndex((e) => e.id === item);\n                                                return (\n                                                    <Typography key={i} component='span' sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: '3px', ml: '3px', height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18, mr: .5 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {list[idx]?.label}\n                                                        </Box>\n                                                    </Typography>\n                                                )\n                                            })\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return null;\n                            }\n                        })()\n                    }\n                    <IconButton onClick={handleClick} sx={{ mt: .25, height: 28, borderRadius: '3px', px: .5, cursor: 'pointer', bgcolor: '#0000000d', '&:hover': { bgcolor: '#0000001a' } }}>\n                        <AddIcon sx={{ fontSize: 12 }} />\n                    </IconButton>\n                </Stack>\n            </Stack>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((one) => {\n                                let exist = data.data.findIndex((a) => a === one.id);\n                                return (exist === -1 && one.label.toLowerCase().search(selectKey) !== -1);\n                            });\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </Box>\n    )\n}\n\nexport default MultiModalSelect;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { updateRow, updateLog } from '../../../../utilis/request';\nimport { ConfigContext } from '../../../../contexts/config';\n\nconst SimpleString = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editable, editabled, } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            < TextField\n                variant=\"outlined\"\n                disabled={true}\n                value={value}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& input': { height: '100%', p: 1.5, fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (editable === position.join('_') && group === 'active' && header[position[1]].editable) {\n            return (\n                < TextField\n                    variant=\"outlined\"\n                    value={value}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& fieldset': { display: 'none' },\n                        '& input': { height: '100%', p: 1, fontSize: 13, },\n                    }} />\n            )\n        } else {\n            return (<Box sx={{ p: '6px' }}>\n                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                    {value}\n                </Typography>\n            </Box>)\n        }\n    }\n}\n\nexport default SimpleString;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { ConfigContext } from '../../../../contexts/config';\nimport { updateLog, updateRow } from '../../../../utilis/request';\n\nconst LongText = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editabled } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            <TextField\n                variant=\"outlined\"\n                defaultValue={value}\n                multiline\n                disabled={true}\n                rows={4}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& .MuiInputBase-multiline': { height: '100%' },\n                    '& textarea': { padding: .5, height: '100% !important', fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (status && group === 'active' && header[position[1]].editable) {\n            return (\n                <TextField\n                    variant=\"outlined\"\n                    autoFocus\n                    defaultValue={value}\n                    multiline\n                    disabled={true}\n                    rows={2}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& .MuiInputBase-multiline': { height: '100%' },\n                        '& fieldset': { display: onModal ? 'block' : 'none' },\n                        '& textarea': { padding: onModal ? .5 : 0, height: '100% !important', fontSize: 13, },\n                    }} />\n            )\n        } else {\n            return (\n                <Box sx={{ p: '6px' }}>\n                    <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                        {value}\n                    </Typography>\n                </Box>\n            )\n        }\n    }\n}\n\nexport default LongText;","import { useContext, useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { TableContext } from '../../../../contexts/table';\nimport { updateRow, updateLog } from '../../../../utilis/request';\nimport { ConfigContext } from '../../../../contexts/config';\n\nconst LinkField = (props) => {\n    const { data, position, onModal, status, isDel, group } = props;\n    const { header, body, modalChange, changeBody, editable, editabled, selectEditable, selectEditabled, selectActive } = useContext(TableContext);\n    const { user } = useContext(ConfigContext);\n    const [value, setValue] = useState(data.data);\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter' && !onModal) {\n            selectActive((position[0] + 1) + '_' + position[1]);\n            selectEditable(\"\");\n            selectEditabled(editable);\n        }\n    };\n\n    const saveRequest = async (params, old, rowId) => {\n        let rdata = await updateRow({ data: params, updater: user._id });\n        if (rdata.status) {\n            let log = {\n                type: 'activity',\n                old,\n                rowId,\n                new: value,\n                dataType: 'string',\n                sign: { [user._id]: true },\n                creator: user,\n                cellName: header[position[1]].name,\n                cellId: data.id,\n                columnId: header[position[1]].id\n            }\n            updateLog(log);\n        } else {\n            alert('server error!');\n        }\n    }\n\n    const saveData = () => {\n        let t = { data: body };\n        let rowId = t.data[position[0]]._id;\n        let old = t.data[position[0]].row[position[1]].data;\n        t.data[position[0]].row[position[1]].data = value;\n\n        if (t.data[position[0]].updater?._id !== user._id) {\n            let temp = {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email: user.email,\n                color: user.color\n            }\n            t.data[position[0]].updater = temp;\n        }\n        t.data[position[0]].updatedAt = new Date();\n\n        saveRequest(t.data[position[0]], old, rowId);\n        changeBody(t.data);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if (value !== data.data && !isDel) {\n            if ((onModal && status === false) || (editabled === position.join('_'))) {\n                saveData();\n            }\n        }\n        setValue(data.data);\n    }, [editabled, position, modalChange, status, onModal, isDel, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            < TextField\n                variant=\"outlined\"\n                autoFocus\n                disabled={group !== 'active' ? true : (!header[position[1]].editable)}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleKeyDown}\n                sx={{\n                    width: '100%',\n                    height: '100%',\n                    '& input': { height: '100%', p: 1.5, fontSize: 13, },\n                }} />\n        )\n    } else {\n        if (editable === position.join('_') && group === 'active' && header[position[1]].editable) {\n            return (\n                < TextField\n                    variant=\"outlined\"\n                    autoFocus\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& fieldset': { display: 'none' },\n                        '& input': { height: '100%', p: 1, fontSize: 13, },\n                    }} />\n            )\n        } else {\n            return (<Box sx={{ p: '6px' }}>\n                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                    <a href={value} target='_blank' rel=\"noreferrer\">{value}</a>\n                </Typography>\n            </Box>)\n        }\n    }\n}\n\nexport default LinkField;","import TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n\nconst DateCell = ({ data }) => {\n    return (\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DatePicker\n                disabled={true}\n                value={data.data}\n                onChange={() => false}\n                renderInput={(params) => <TextField {...params}\n                    sx={{\n                        width: '100%',\n                        height: '100%',\n                        '& fieldset': { display: 'none' },\n                        '& div': { height: '100%' },\n                        '& input': { padding: 0, height: '100%', px: .7, fontSize: 13, },\n                    }}\n                />}\n            />\n        </LocalizationProvider>\n    )\n}\n\nexport default DateCell;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst CheckBoxCell = (props) => {\n    const { data, position, onModal, } = props;\n    const [value, setValue] = useState(data.data);\n\n    /* eslint-disable */\n    useEffect(() => {\n        setValue(data.data);\n    }, [position, data.data])\n    /* eslint-enable */\n\n    if (onModal) {\n        return (\n            <Checkbox disabled={true} checked={value} sx={{ p: 0, '& .MuiSvgIcon-root': { fontSize: 28 } }} />\n        )\n    } else {\n        return (<Box sx={{ height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <Checkbox disabled={true} checked={value} sx={{ p: '0px !important', '& .MuiSvgIcon-root': { fontSize: 28 } }} />\n        </Box>)\n    }\n}\n\nexport default CheckBoxCell;","import moment from 'moment';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n\nconst LogDate = (props) => {\n    const { data, onModal } = props;\n\n    if (onModal) {\n        return (\n            <>\n                {\n                    (() => {\n                        if (data?.data) {\n                            return (\n                                <Stack sx={{ height: '100%', justifyContent: 'center', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                    {moment(data.data).format('M/d/yyyy h:mm a')}\n                                </Stack>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }</>\n        )\n    } else {\n        return (\n            <Box sx={{ p: '6px' }}>\n                {\n                    (() => {\n                        if (data?.data) {\n                            return (\n                                <Typography component='div' sx={{ userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default' }}>\n                                    {moment(data.data).format('DD/MM/yyyy h:mm a')}\n                                </Typography>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box>\n        )\n    }\n}\n\nexport default LogDate;","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nconst LogDate = (props) => {\n    const { onModal, data } = props;\n    // console.log(data.data.firstName)\n    if (onModal) {\n        return (\n            <Stack sx={{ height: '100%', justifyContent: 'center', width: '100%', minHeight: 34, borderRadius: 1, flexWrap: \"wrap\", bgcolor: '#fff', '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                {\n                    (() => {\n                        if (data.data && data.data.color) {\n                            return (\n                                <Stack direction='row' alignItems='center'>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: data.data && data.data.color ? data.data.color : '#999', zIndex: 2, }}>{data?.data?.firstName[0]}</Box>\n                                    <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                        {data?.data?.firstName} {data?.data?.lastName}\n                                    </Typography>\n                                </Stack >\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Stack>\n        )\n    } else {\n        return (\n            <Box sx={{ p: '6px' }}>\n                {\n                    (() => {\n                        if (data.data) {\n                            return (\n                                <Stack direction='row' alignItems='center'>\n                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: data.data && data.data.color ? data.data.color : '#999', zIndex: 2, }}>{data?.data?.firstName[0]}</Box>\n                                    <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                        {data?.data?.firstName} {data?.data?.lastName}\n                                    </Typography>\n                                </Stack >\n                            )\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n            </Box >\n        )\n    }\n}\n\nexport default LogDate;","import React, { useEffect, useState } from 'react';\nimport ReactTimeAgo from 'react-time-ago';\nimport moment from 'moment';\n\nimport Box from '@mui/material/Box';\nimport Menu from '@mui/material/Menu';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Dialog from '@mui/material/Dialog';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogContent from '@mui/material/DialogContent';\nimport Popover from '@mui/material/Popover';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport Check from '@mui/icons-material/Check';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport SpeakerNotesOffIcon from '@mui/icons-material/SpeakerNotesOff';\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\n\nimport useTableContext from '../hooks/useTable';\nimport useConfig from '../hooks/useConfig';\n\nimport ImageModal from './ImageModal';\n\nimport ModalSelect from '../pages/View/TableContent/CellType/ModalSelectCell';\nimport MultiModalSelect from '../pages/View/TableContent/CellType/MultiModalSelect';\nimport SimpleString from '../pages/View/TableContent/CellType/SimpleString';\nimport LongText from '../pages/View/TableContent/CellType/LongText';\nimport LinkField from '../pages/View/TableContent/CellType/LinkField';\nimport DateCell from '../pages/View/TableContent/CellType/DateCell';\n\nimport { downloadFile, getLog } from '../utilis/request';\n\nimport { uploadUrl, typeLabel } from '../config/constant';\nimport Icons from './Icons';\nimport CheckBoxCell from '../pages/View/TableContent/CellType/CheckBoxCell';\nimport LogDate from '../pages/View/TableContent/CellType/LogDate';\nimport LogUser from '../pages/View/TableContent/CellType/LogUser';\nimport { getImg } from '../utilis/util';\n\nconst EditModal = (props) => {\n    const { y, open, handleClose, changeItem, group } = props;\n    const { user } = useConfig();\n    const { header, body, users, isAdmin, hId } = useTableContext();\n\n    const [data, setData] = useState([]);\n    const [isDel, setIsDel] = useState(false);\n    const [commant, setCommant] = useState(\"\");\n    const [imgData, setImgData] = useState([]);\n    const [fullImg, setFullImg] = useState(false);\n    const [showChat, setShowChat] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [follower, setFollower] = useState([]);\n    const [imgIndex, setImgIndex] = useState(0);\n    const [activeType, setactiveType] = useState(1);\n    const [anchor, setAnchor] = useState(null);\n    const [whiteList, setWhiteList] = useState([]);\n    const [uSearch, setUSearch] = useState(\"\");\n    const openWl = Boolean(anchor);\n\n\n    const drop = Boolean(anchorEl);\n\n    const handleImgModal = () => setFullImg(false);\n\n    const openFullImg = (y, x, i) => {\n        setImgData(body[y].row[x].data);\n        setImgIndex(i);\n        setFullImg(true);\n    }\n\n    const closePop = (params) => {\n        setAnchor(null)\n    }\n\n    const rmeoveItem = (i) => {\n        let temp = whiteList;\n        temp.splice(i, 1);\n        setWhiteList([...temp]);\n    }\n\n    const handleDownload = (item) => {\n        downloadFile(item);\n    }\n\n    const searchKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            let partner = users.filter((e) => {\n                let str = e.firstName + \" \" + e.lastName;\n                return str.search(uSearch) !== -1;\n            });\n            if (partner.length) {\n                let flag = whiteList.findIndex((e) => e._id === partner[0]._id);\n                if (flag === -1) {\n                    setWhiteList([...whiteList, partner[0]]);\n                }\n                setCommant(commant.slice(0, -1));\n            }\n            setAnchor(null)\n            setUSearch(\"\")\n        }\n    }\n\n    const selectPartner = (user) => {\n        let flag = whiteList.findIndex((e) => e._id === user._id);\n        if (flag === -1) {\n            setWhiteList([...whiteList, user]);\n        }\n        setAnchor(null)\n        setUSearch(\"\")\n        setCommant(commant.slice(0, -1));\n    }\n\n\n    const handleCommentType = (e) => {\n        if (e) {\n            setAnchorEl(e.currentTarget)\n        } else {\n            setAnchorEl(null)\n        }\n    }\n\n    const switchCommentType = (params) => {\n        setactiveType(params);\n        document.getElementsByClassName('commentBoxWrap')[0].scroll({ top: document.getElementsByClassName('commentBox')[0].clientHeight, behavior: 'smooth' });\n        setAnchorEl(null);\n    }\n\n    const closeAction = () => {\n        handleClose();\n    }\n\n    /* eslint-disable */\n    const getData = async (rowId) => {\n        let allowIds = []\n        if (user.allowIds && user.allowIds[hId]) {\n            allowIds = user.allowIds[hId];\n        }\n        let logData = await getLog({ rowId, allowIds });\n        if (logData.status) {\n            setData(logData.data);\n\n            let data = {}\n            for (let item of logData.data) {\n                data[item.creator._id] = true;\n            }\n\n            let followers = users.filter((e) => {\n                let idx = Object.keys(data).findIndex((one) => one === e._id);\n                return (idx > -1)\n            })\n            for (let i = 0; i < Object.keys(data).length; i++) {\n\n            }\n            setFollower(followers)\n        }\n    }\n\n    useEffect(() => {\n        if (open) {\n            setIsDel(false);\n            getData(body[y]._id);\n        }\n    }, [open, y]);\n\n    useEffect(() => {\n        if (data.length && document.getElementsByClassName('commentBoxWrap')[0] && document.getElementsByClassName('commentBox')[0].lastChild) {\n            document.getElementsByClassName('commentBoxWrap')[0].scroll({ top: document.getElementsByClassName('commentBox')[0].clientHeight + document.getElementsByClassName('commentBox')[0].lastChild.clientHeight, behavior: 'smooth' });\n        }\n    }, [data]);\n    /* eslint-enable */\n\n    return (\n        <>\n            <Dialog\n                open={open}\n                maxWidth=\"lg\"\n                onClose={closeAction}\n                sx={{ '& .MuiDialog-paper': { height: \"calc(100% - 64px)\", width: '100%' } }}\n            >\n                <DialogTitle sx={{ borderBottom: '1px solid #bdbdbd' }}>\n                    <Stack direction='row' alignItems='center' justifyContent='space-between'>\n                        <Stack direction='row' alignItems='center'>\n                            <IconButton onClick={() => changeItem(false)} disabled={y === 0}><ExpandLessIcon sx={{ fontSize: 16 }} /></IconButton>\n                            <IconButton onClick={() => changeItem(true)} disabled={y === body.length - 1}><ExpandMoreIcon sx={{ fontSize: 16 }} /></IconButton>\n                        </Stack>\n                        <Stack direction='row' alignItems='center'>\n                            <IconButton onClick={() => setShowChat(!showChat)} >\n                                {\n                                    showChat ?\n                                        <SpeakerNotesOffIcon sx={{ fontSize: 15 }} /> :\n                                        <ChatBubbleIcon sx={{ fontSize: 15 }} />\n                                }\n                            </IconButton>\n                            <Box sx={{ width: '1px', height: 15, bgcolor: 'gray', mx: 2 }} />\n                            <IconButton onClick={handleClose}><CloseIcon sx={{ fontSize: 15 }} /></IconButton>\n                        </Stack>\n                    </Stack>\n                </DialogTitle>\n                <DialogContent sx={{ p: 0 }}>\n                    <Grid container sx={{ height: '100%' }}>\n                        <Grid item md={showChat ? 8 : 12} sx={{ height: '100%', overflow: 'auto', borderRight: '1px solid #bdbdbd', p: 6, pt: 4 }}>\n                            <Grid container spacing={2} sx={{ maxWidth: '640px', m: 'auto' }}>\n                                {\n                                    body[y]?.row.map((data, i) => (\n                                        <React.Fragment key={i}>\n                                            {\n                                                header[i].allowed ?\n                                                    <>\n                                                        <Grid item md={3} sm={12} sx={{ order: header[i].order * 2 }}>\n                                                            <Stack direction='row' alignItems='center' sx={{ opacity: .75 }}>\n                                                                <Icons type={header[i].type} editable={false} />\n                                                                <Typography sx={{ opacity: .75, ml: .5, fontSize: 13, color: '#333333' }}>{header[i].name}</Typography>\n                                                            </Stack>\n                                                        </Grid>\n                                                        <Grid item md={9} sm={12} sx={{ order: header[i].order * 2 + 1 }}>\n                                                            {\n                                                                (() => {\n                                                                    switch (header[i].type) {\n                                                                        case 'text':\n                                                                        case 'email':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <SimpleString group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'checkBox':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <CheckBoxCell group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'link':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <LinkField group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'longText':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', }} >\n                                                                                    <LongText group={group} data={data} status={open} position={[y, i]} onModal={true} isDel={isDel} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'select':\n                                                                            return (\n                                                                                <ModalSelect group={group} data={data} status={false} height={38} position={[y, i]} />\n                                                                            );\n                                                                        case 'multiSelect':\n                                                                            return (\n                                                                                <MultiModalSelect group={group} data={data} status={false} height={38} position={[y, i]} />\n                                                                            );\n                                                                        case 'date':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <DateCell group={group} data={data} position={[y, i]} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'createdAt':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogDate data={{ data: body[y].createdAt }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'updatedAt':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogDate data={{ data: (body[y].updater ? body[y].updatedAt : null) }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'createdBy':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogUser data={{ data: body[y].creator }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'updatedBy':\n                                                                            return (\n                                                                                <Box sx={{ display: 'flex', px: 1, justifyContent: 'space-between', alignItems: 'center', borderRadius: 1, border: '1px solid #0000003b', cursor: 'pointer', width: '100%', height: 38, '&:hover': { borderColor: '#000' }, '&:focus': { borderColor: '#1976d2', borderWidth: 2 } }} >\n                                                                                    <LogUser data={{ data: body[y].updater }} onModal={true} />\n                                                                                </Box>\n                                                                            );\n                                                                        case 'attached':\n                                                                            if (!data.data) data.data = []\n                                                                            return (\n                                                                                <>\n                                                                                    <Box sx={{ width: '100%', mb: 2 }} >\n                                                                                        <Button\n                                                                                            disabled={true}\n                                                                                            variant='outlined'\n                                                                                            sx={{ color: '#333333', fontSize: 11, textTransform: 'capitalize', py: .5, px: 1 }}\n                                                                                            startIcon={<AttachFileIcon sx={{ fontSize: '15px !important' }} />}\n                                                                                        >Attach file</Button>\n                                                                                    </Box>\n                                                                                    <Grid container spacing={2}>\n                                                                                        {\n                                                                                            data.data.map((src, j) => (\n                                                                                                <Grid item md={6} key={j} >\n                                                                                                    <Box sx={{ height: 250, cursor: 'pointer', bgcolor: '#fafafa', display: 'flex', alignItems: 'center', justifyContent: 'center', border: '1px solid #00000052', overflow: 'hidden', borderRadius: 2, mb: 2 }}>\n                                                                                                        <Box\n                                                                                                            alt='img'\n                                                                                                            component='img'\n                                                                                                            src={src.mimetype.startsWith('image') ? `${uploadUrl}${src.filename}` : getImg(src)}\n                                                                                                            sx={{ height: src.mimetype.startsWith('image') ? 'auto' : 100, maxWidth: '100%', maxHeight: '100%' }}\n                                                                                                            onClick={() => openFullImg(y, i, j)}\n                                                                                                        />\n                                                                                                    </Box>\n                                                                                                    <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ position: 'relative' }}>\n                                                                                                        <Typography sx={{ fontSize: 13, width: 'calc(100% - 60px)', textOverflow: 'ellipsis', overflow: 'hidden' }}>{src.originalname} </Typography>\n                                                                                                        <Stack direction='row' sx={{ position: 'absolute', bottom: 0, right: 0, bgcolor: '#fff' }}>\n                                                                                                            <IconButton sx={{ p: 0, mr: 1 }} onClick={() => handleDownload(src)} >\n                                                                                                                <ArrowCircleDownIcon />\n                                                                                                            </IconButton>\n                                                                                                        </Stack>\n                                                                                                    </Stack>\n                                                                                                </Grid>\n                                                                                            ))\n                                                                                        }\n                                                                                    </Grid>\n                                                                                </>\n                                                                            )\n                                                                        default:\n                                                                            return (<TextField size=\"small\" sx={{ width: '100%', }} multiline />);\n                                                                    }\n                                                                })()\n                                                            }\n                                                        </Grid>\n                                                    </> : null\n                                            }\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Grid>\n                        </Grid>\n                        <Grid item md={4} sx={{ height: '100%', display: showChat ? 'block' : 'none' }}>\n                            <Stack sx={{ height: '100%', pb: 2 }} justifyContent='space-between'>\n                                <Stack sx={{ p: 2, borderBottom: '1px solid #bdbdbd', }} justifyContent='flex-start' alignItems='flex-start'>\n                                    <Stack>\n                                        <Button\n                                            size='small'\n                                            endIcon={<ArrowDropDownIcon sx={{ fontSize: 16 }} />}\n                                            onClick={handleCommentType}\n                                            sx={{\n                                                px: 1,\n                                                fontSize: 13,\n                                                color: '#4d4d4d',\n                                                textTransform: 'capitalize',\n                                                '&:hover': { bgcolor: '#0000000d' }\n                                            }}>\n                                            {typeLabel[activeType].label}\n                                        </Button>\n                                        {\n                                            isAdmin ?\n                                                <Menu\n                                                    anchorEl={anchorEl}\n                                                    open={drop}\n                                                    onClose={() => handleCommentType(null)}\n                                                    MenuListProps={{\n                                                        'aria-labelledby': 'basic-button',\n                                                    }}\n                                                >\n                                                    {\n                                                        typeLabel.map((item, idx) => {\n                                                            if (idx === activeType) {\n                                                                return (\n                                                                    <MenuItem onClick={() => switchCommentType(idx)} key={idx}>\n                                                                        <ListItemIcon>\n                                                                            <Check sx={{ fontSize: 15 }} />\n                                                                        </ListItemIcon>\n                                                                        {item.label}\n                                                                    </MenuItem>\n                                                                )\n                                                            } else {\n                                                                return (\n                                                                    <MenuItem onClick={() => switchCommentType(idx)} key={idx}>\n                                                                        <ListItemText inset>{item.label}</ListItemText>\n                                                                    </MenuItem>\n                                                                )\n                                                            }\n                                                        })\n                                                    }\n                                                </Menu>\n                                                : null\n                                        }\n                                    </Stack>\n                                    <Stack direction='row'>\n                                        {\n                                            follower.length ?\n                                                <Stack direction='row' alignItems='center'>\n                                                    <AvatarGroup max={20} sx={{ '& .MuiAvatarGroup-avatar': { borderWidth: '0px !important', color: '#fff', width: 20, height: 20, fontSize: 9, textTransform: 'uppercase' } }}>\n                                                        {\n                                                            follower.map((one, i) => (\n                                                                <Avatar key={i} sx={{ borderWidth: '0px !important', color: '#fff', width: 20, height: 20, fontSize: 9, bgcolor: one.color ? one.color : '#bdbdbd', textTransform: 'uppercase' }} alt={one.firstName} src=\"/static/images/avatar/1.jpg\" />\n                                                            ))\n                                                        }\n                                                    </AvatarGroup>\n                                                    <Typography sx={{ ml: .5, fontSize: 11, opacity: .75 }}>{`${follower.length > 1 ? 'are' : 'is'} following this.`}</Typography>\n                                                </Stack> : null\n                                        }\n                                    </Stack>\n                                </Stack>\n                                <Box className='commentBoxWrap' sx={{ px: 2, height: '100%', overflow: 'auto' }}>\n                                    <Box className='commentBox'>\n                                        {\n                                            data.filter((e) => {\n                                                if (!typeLabel[activeType].type) {\n                                                    return true;\n                                                } else if (e.type === typeLabel[activeType].type) {\n                                                    return true;\n                                                } else {\n                                                    return false;\n                                                }\n                                            }).map((item, idx) => {\n                                                if (item.type === 'activity' || item.type === 'workflow') {\n                                                    return (\n                                                        <Box sx={{ py: 1 }} key={idx}>\n                                                            <Stack direction='row'>\n                                                                {\n                                                                    (() => {\n                                                                        let writer = users.filter((e) => e._id === item.creator._id)[0];\n                                                                        return (\n                                                                            <Avatar sx={{ bgcolor: writer.color ? writer.color : '#999', textTransform: 'uppercase', color: 'white', mr: 1, width: 24, height: 24, fontSize: 12 }} alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\">{item.creator.firstName[0]}</Avatar>\n                                                                        )\n                                                                    })()\n                                                                }\n                                                                <Box sx={{ width: '100%' }}>\n                                                                    <Stack sx={{ fontSize: 12, mb: .1 }} direction='row' alignItems='center' justifyContent='space-between'>\n                                                                        <Typography sx={{ fontSize: 12 }}>{item.creator.email === user.email ? 'You' : `${item.creator.firstName} ${item.creator.lastName}`}</Typography>\n                                                                        <ReactTimeAgo date={new Date(item.updatedAt)} locale=\"en-US\" />\n                                                                    </Stack>\n                                                                    <Stack sx={{ bgcolor: '#f2f2f2', width: '100%', borderRadius: 1, fontSize: 13, py: 1, px: 1 }} >\n                                                                        <Typography sx={item.type === 'workflow' ? { fontSize: 12, fontWeight: 600 } : { fontSize: 9 }}>\n                                                                            {(() => {\n                                                                                if (item.type === 'workflow') {\n                                                                                    let durationDate = ''\n                                                                                    let flowData = data.filter((e) => (e.type === 'workflow')).sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt)).filter((e) => new Date(e.createdAt) < new Date(item.createdAt))\n                                                                                    let before = flowData.pop();\n                                                                                    if (before) {\n                                                                                        let endDate = new Date(before.createdAt);\n                                                                                        let startDate = new Date(item.createdAt);\n                                                                                        let diff = startDate.getTime() - endDate.getTime();\n                                                                                        const day = (Math.floor(diff / (1000 * 3600 * 24)));\n                                                                                        const mod = diff % (1000 * 3600 * 24);\n                                                                                        const hour = (Math.floor(mod / (1000 * 3600)));\n                                                                                        const mod1 = mod % (1000 * 3600);\n                                                                                        const minute = (Math.floor(mod1 / (1000 * 60)));\n                                                                                        const mod2 = mod1 % (1000 * 60);\n                                                                                        const second = (Math.floor(mod2 / 1000));\n\n                                                                                        if (day) {\n                                                                                            durationDate += day;\n                                                                                            day > 1 ? durationDate += ' days ' : durationDate += ' day ';\n                                                                                        }\n                                                                                        if (hour) {\n                                                                                            durationDate += hour;\n                                                                                            hour > 1 ? durationDate += ' hours ' : durationDate += ' hour ';\n                                                                                        }\n                                                                                        if (minute) {\n                                                                                            durationDate += minute;\n                                                                                            minute > 1 ? durationDate += ' minutes ' : durationDate += ' minute ';\n                                                                                        }\n                                                                                        if (second && !durationDate) {\n                                                                                            durationDate += second;\n                                                                                            second > 1 ? durationDate += ' seconds ' : durationDate += ' second ';\n                                                                                        }\n                                                                                    }\n                                                                                    if (durationDate) {\n                                                                                        return item.cellName + ' - ' + durationDate\n                                                                                    } else {\n                                                                                        return item.cellName\n                                                                                    }\n                                                                                } else {\n                                                                                    return item.cellName\n                                                                                }\n                                                                            })()}\n                                                                        </Typography>\n                                                                        <Box sx={{ display: 'flex', mt: .5 }}>\n                                                                            {\n                                                                                (() => {\n                                                                                    if (item.dataType === 'string') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: item.type === 'workflow' ? '' : 'line-through', mr: .2 }}>\n                                                                                                    {item.old}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'date') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    {item.old ? moment(item.old).format('MMMM D, yyyy') : ''}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new ? moment(item.new).format('MMMM D, yyyy') : ''}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'checkBox') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ display: 'flex', alignItems: 'center', fontSize: 13, bgcolor: item.new === 'true' ? '#d1f7c4' : '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    <CheckIcon sx={{ color: 'rgb(32, 201, 51)' }} />\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'select') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Box sx={{ border: '1px solid #93e088', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5, mr: .2 }}>\n                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: item.color }}>\n                                                                                                        {item.new}\n                                                                                                    </Typography>\n                                                                                                </Box>\n                                                                                                {\n                                                                                                    item.old ?\n                                                                                                        <Box sx={{ border: '1px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                            <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: item.oldColor, textDecoration: 'line-through', }}>\n                                                                                                                {item.old}\n                                                                                                            </Typography>\n                                                                                                        </Box> : null\n                                                                                                }\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'multiSelect') {\n                                                                                        return (\n                                                                                            <>\n                                                                                                {\n                                                                                                    item.history.map((one, i) => {\n                                                                                                        if (one.status === 'add') {\n                                                                                                            return (<Box key={i} sx={{ border: '1px solid #93e088', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5, mr: .2 }}>\n                                                                                                                <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color }}>\n                                                                                                                    {one.label}\n                                                                                                                </Typography>\n                                                                                                            </Box>)\n                                                                                                        } else if (one.status === 'remove') {\n                                                                                                            return (\n                                                                                                                <Box key={i} sx={{ border: '1px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color, textDecoration: 'line-through', }}>\n                                                                                                                        {one.label}\n                                                                                                                    </Typography>\n                                                                                                                </Box>\n                                                                                                            )\n                                                                                                        } else {\n                                                                                                            return (\n                                                                                                                <Box key={i} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: 5 }}>\n                                                                                                                    <Typography component='span' sx={{ fontSize: 13, border: '1px solid #fff', borderRadius: 5, px: 1, color: '#fff', bgcolor: one.color, }}>\n                                                                                                                        {one.label}\n                                                                                                                    </Typography>\n                                                                                                                </Box>\n\n                                                                                                            )\n                                                                                                        }\n                                                                                                    })\n                                                                                                }\n                                                                                            </>\n                                                                                        )\n                                                                                    } else if (item.dataType === 'attached') {\n                                                                                        return (\n                                                                                            <Stack direction='row' spacing={.5}>\n                                                                                                {\n                                                                                                    item.history.data.map((src, jdx) => (\n                                                                                                        <Box key={jdx} sx={{ overflow: 'hidden', width: 48, height: 48, border: item.history.status === 'add' ? '2px solid #93e088' : '2px solid #ff9eb7', display: 'flex', alignItems: 'center', justifyContent: 'center', borderRadius: .5 }}>\n                                                                                                            <Box component='img' src={src.mimetype.startsWith('image') ? `${uploadUrl}${src.filename}` : getImg(src)} sx={{ width: 48, height: 48, maxHeight: 48 }} />\n                                                                                                        </Box>\n                                                                                                    ))\n                                                                                                }\n                                                                                            </Stack>\n                                                                                        )\n                                                                                    } else {\n                                                                                        return (\n                                                                                            <>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#ffdce5', textDecoration: 'line-through', mr: .2 }}>\n                                                                                                    {item.old}\n                                                                                                </Typography>\n                                                                                                <Typography component='span' sx={{ fontSize: 13, bgcolor: '#d1f7c4' }}>\n                                                                                                    {item.new}\n                                                                                                </Typography>\n                                                                                            </>\n                                                                                        )\n                                                                                    }\n                                                                                })()\n                                                                            }\n                                                                        </Box>\n                                                                    </Stack>\n                                                                </Box>\n                                                            </Stack>\n                                                        </Box>\n                                                    )\n                                                } else {\n                                                    let flag = -1;\n                                                    if (item.whiteList && item.whiteList.length) {\n                                                        flag = item.whiteList.findIndex(e => e === user._id);\n                                                        if (flag === -1) return null;\n                                                    }\n                                                    return (\n                                                        <Box sx={{ py: 1 }} key={idx}>\n                                                            <Stack direction='row'>\n                                                                {\n                                                                    (() => {\n                                                                        let writer = users.filter((e) => e._id === item.creator._id)[0];\n                                                                        return (\n                                                                            <Avatar sx={{ bgcolor: writer.color ? writer.color : '#999', textTransform: 'uppercase', color: 'white', mr: 1, width: 24, height: 24, fontSize: 12 }} alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\">{item.creator.firstName[0]}</Avatar>\n                                                                        )\n                                                                    })()\n                                                                }\n                                                                <Box sx={{ width: '100%' }} >\n                                                                    <Stack sx={{ fontSize: 12, mb: .1 }} direction='row' alignItems='center' justifyContent='space-between'>\n                                                                        <Typography sx={{ fontSize: 12 }}>{item.creator.email === user.email ? 'You' : `${item.creator.firstName} ${item.creator.lastName}`}</Typography>\n                                                                        <ReactTimeAgo date={new Date(item.updatedAt)} locale=\"en-US\" />\n                                                                    </Stack>\n                                                                    <Box>\n                                                                        <Box sx={{ display: 'inline-block', position: 'relative', bgcolor: '#2d7ff9', borderRadius: 2, color: \"#fff\", fontSize: 13, py: .5, px: 1, pr: 5 }} >\n                                                                            {item.new}\n                                                                            {\n                                                                                flag !== -1 &&\n                                                                                <Tooltip title={`${item.creator.firstName} ${item.creator.lastName}`}>\n                                                                                    <Diversity3Icon sx={{ position: 'absolute', right: 4, bottom: 2, fontSize: 16 }} />\n                                                                                </Tooltip>\n                                                                            }\n                                                                        </Box>\n                                                                    </Box>\n                                                                </Box>\n                                                            </Stack>\n                                                        </Box>\n                                                    )\n                                                }\n                                            })\n                                        }\n                                    </Box>\n                                </Box>\n                                <Box>\n                                    <Stack sx={{ px: 1, flexWrap: \"wrap\" }} direction=\"row\" >\n                                        {\n                                            whiteList.map((user, i) => (\n                                                <Stack key={i} direction=\"row\" sx={{ display: \"inline-flex\", mb: 1, mr: 1 }} onClick={() => rmeoveItem(i)} >\n                                                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: user && user.color ? user.color : '#999', zIndex: 2, }}>{user?.firstName[0]}</Box>\n                                                    <Typography component='span' sx={{ bgcolor: '#eee', cursor: 'pointer', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                                        {user.firstName} {user.lastName}\n                                                    </Typography>\n                                                </Stack>\n                                            ))\n                                        }\n                                    </Stack>\n                                    <Popover\n                                        anchorEl={anchor}\n                                        open={openWl}\n                                        onClose={closePop}\n                                        anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: \"left\",\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left',\n                                        }}\n                                        sx={{ '& .MuiPopover-paper': { boxShadow: '0 0 0 2px #00000040', maxHeight: \"80vh\" } }}\n                                    >\n                                        <Box sx={{ py: 1, px: 1, width: 200 }}>\n                                            <Stack spacing={1}>\n                                                <TextField sx={{ ml: 1, '& input': { px: 1, py: 1, fontSize: 12 } }} onKeyDown={searchKeyDown} value={uSearch} onChange={(e) => setUSearch(e.target.value)} autoFocus />\n                                                {\n                                                    users.filter((e) => {\n                                                        let str = e.firstName + \" \" + e.lastName;\n                                                        return str.search(uSearch) !== -1;\n                                                    }).map((user, i) => (\n                                                        <Button sx={{ justifyContent: 'flex-start' }} key={i} onClick={() => selectPartner(user)}>\n                                                            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 22, height: 22, border: '1px solid #eee', borderRadius: 50, color: '#fff', bgcolor: user && user.color ? user.color : '#999', zIndex: 2, }}>{user?.firstName[0]}</Box>\n                                                            <Typography component='span' sx={{ bgcolor: '#eee', userSelect: 'none', overflow: 'hidden', maxWidth: '100%', textOverflow: 'ellipsis', whiteSpace: 'nowrap', fontSize: 13, color: '#111111', cursor: 'default', pr: 1, pl: 2.5, lineHeight: 1.4, borderRadius: 4, ml: -2 }}>\n                                                                {user.firstName} {user.lastName}\n                                                            </Typography>\n                                                        </Button >\n                                                    ))\n                                                }\n                                            </Stack>\n                                        </Box >\n                                    </Popover >\n                                </Box>\n                            </Stack>\n                        </Grid>\n                    </Grid>\n                </DialogContent >\n            </Dialog >\n            <ImageModal open={fullImg} close={handleImgModal} data={imgData} index={imgIndex} />\n        </>\n    )\n}\n\nexport default EditModal;","import React, { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport OpenInFullIcon from '@mui/icons-material/OpenInFull';\n\nimport ViewModal from '../../../components/ViewModal';\nimport useTableContext from '../../../hooks/useTable';\nimport { checkWidth } from '../../../config/constant';\n\nconst FirstCell = ({ id, y, group }) => {\n    const [modalI, setModalI] = useState(0);\n    const [index, setIndex] = useState(0);\n    const [open, setOpen] = useState(false);\n\n    const { body } = useTableContext();\n\n    const changeItem = (flag) => {\n        if (flag) {\n            setModalI(modalI + 1)\n        } else {\n            setModalI(modalI - 1)\n        }\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        setModalI(index);\n    };\n\n    useEffect(() => {\n        let idx = body.findIndex((e) => e._id === id);\n        setIndex(idx);\n        setModalI(idx);\n    }, [body, id])\n\n    return (\n        <>\n            <Stack\n                direction='row'\n                key={-2}\n                className='cell first-cell'\n                sx={{\n                    width: checkWidth,\n                    height: 32,\n                    bgcolor: '#fff',\n                    borderTop: '1px solid #dde1e3',\n                    borderRight: '1px solid #dde1e3',\n                }}>\n                <Box sx={{ borderRight: '1px solid #dde1e3', display: 'inline-block', position: 'relative', height: 32, width: 32, zIndex: 2, textAlign: 'center' }}>\n                    <Box sx={{ position: 'absolute', width: '100%', top: 7, color: '#707070', textAlign: 'center', fontSize: 12, userSelect: 'none' }}>\n                        {y + 1}\n                    </Box>\n                </Box>\n                <Stack direction='row' alignItems='center' justifyContent='space-around' sx={{ width: 'calc(100% - 32px)' }}>\n                    <Box>\n                        <Stack direction='row' sx={{ position: 'relative', height: '100%', alignItems: 'center', cursor: 'pointer', }}>\n                            <IconButton onClick={() => setOpen(true)} color='info' sx={{ height: 32, width: 32, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                {\n                                    (() => {\n                                        return (\n                                            <>\n                                                {\n                                                    body[index]?.chat ?\n                                                        <Box sx={{ fontSize: 16, color: '#2d7ff9', borderRadius: 5, p: .5, }}>{body[index].chat}</Box>\n                                                        :\n                                                        <OpenInFullIcon className='show-head' sx={{ fontSize: 16, color: '#2d7ff9', }} />\n                                                }\n                                            </>\n                                        )\n                                    })()\n                                }\n                            </IconButton>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Stack>\n            <ViewModal y={modalI} open={open} handleClose={handleClose} changeItem={changeItem} group={group} />\n        </>\n    )\n}\n\nexport default FirstCell;","import Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport ImageModal from '../../../../components/ImageModal';\nimport { useState } from 'react';\nimport { uploadUrl } from '../../../../config/constant';\nimport { getImg } from '../../../../utilis/util';\n\nconst Attached = (props) => {\n    const { data, focus, position } = props;\n    const [open, setOpen] = useState(false);\n    const [index, setIndex] = useState(0);\n\n    const handleOpenModal = (i) => {\n        if (focus) {\n            setIndex(i);\n            setOpen(true);\n        }\n    }\n\n\n    const handleImgModal = () => {\n        setOpen(false);\n    }\n\n    return (\n        <>\n            <Box tabIndex={position.join('-')} sx={{ height: '100%', width: '100%' }}>\n                <Stack direction='row' alignItems='center' sx={{ px: '3px', height: '100%', display: 'inline-flex', position: \"relative\" }} >\n                    {\n                        data.data && data.data.map((src, i) => (\n                            <Box\n                                key={i}\n                                sx={{\n                                    height: focus ? 36 : 25,\n                                    width: 'auto',\n                                    mr: .25,\n                                    zIndex: 1,\n                                    overflow: 'hidden',\n                                    cursor: 'pointer',\n                                    border: '2px solid #0000001a',\n                                    bgcolor: '#0000001a',\n                                    '&:hover': { border: focus ? '2px solid #00000052' : '2px solid #0000001a', }\n                                }}>\n                                {\n                                    src.mimetype.startsWith('image') ?\n                                        <Box\n                                            onClick={() => handleOpenModal(i)}\n                                            sx={{\n                                                height: focus ? 36 : 25,\n                                                maxWidth: focus ? 64 : 44\n                                            }} component='img' src={`${uploadUrl}${src.filename}`} alt='attached' />\n\n                                        : <Box\n                                            onClick={() => handleOpenModal(i)}\n                                            sx={{\n                                                height: focus ? 36 : 20,\n                                                width: focus ? 36 : 20,\n                                            }} component='img' src={getImg(src)} alt='attached' />\n                                }\n                            </Box>\n                        ))\n                    }\n                </Stack>\n            </Box>\n            <ImageModal open={open} close={handleImgModal} data={data.data} index={index} />\n        </>\n    )\n}\n\nexport default Attached;","import { useEffect, useState, } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport useTableContext from '../../../../hooks/useTable';\n\nconst SelectCell = (props) => {\n    const { data, width, position } = props;\n    const { header } = useTableContext();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\n\n    const close = async (id, label, color) => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; })\n        setList(iList)\n    }, [header, position])\n\n    return (\n        <Box sx={{ p: '6px', height: '100%', display: 'flex' }} onDoubleClick={handleClick}>\n            {\n                (() => {\n                    const idx = list.findIndex((e) => e.id === data.data);\n                    if (idx !== -1) {\n                        return (\n                            <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        maxWidth: \"100%\",\n                                        overflow: \"hidden\",\n                                        textOverflow: \"ellipsis\",\n                                        whiteSpace: \"pre\",\n                                        fontSize: 13,\n                                        minWidth: 18,\n                                        color: '#fff'\n                                    }}\n                                >\n                                    {list[idx].label}\n                                </Box>\n                            </Typography>\n                        )\n                    } else {\n                        return null;\n                    }\n                })()\n            }\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((e) => e.label.toLowerCase().search(selectKey) !== -1);\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </Box>\n    )\n}\n\nexport default SelectCell;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nimport AddIcon from '@mui/icons-material/Add';\n\nimport useTableContext from '../../../../hooks/useTable';\n\nconst MultiSelectCell = (props) => {\n    const { data, width, position } = props;\n    const { header, active } = useTableContext();\n    const [list, setList] = useState([]);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectKey, setSelectKey] = useState(\"\");\n\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget.parentElement.parentElement)\n    };\n\n    const close = async (id, label, color) => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectKey(\"\");\n    }\n\n    useEffect(() => {\n        const iList = header[position[1]].list.map((e, i) => { e.index = i; return e; });\n        setList(iList);\n    }, [header, position, data.data]);\n\n    return (\n        <>\n            {\n                active === position.join('_') ?\n                    <Stack className='selectItems-wrap' sx={{ height: 'auto', minHeight: 34, position: 'absolute', borderRadius: '1px', flexWrap: \"wrap\", bgcolor: '#fff', ml: '-1px', boxShadow: '0 0 0 2px #2d7ff9 !important', width: width + 2 }} >\n                        <Stack direction='row' sx={{ flexWrap: \"wrap\", alignItems: 'center' }} >\n                            {\n                                (() => {\n                                    if (data.data.length) {\n                                        return (\n                                            <>\n                                                {\n                                                    data.data.map((item, i) => {\n                                                        const idx = list.findIndex((e) => e.id === item);\n                                                        return (\n                                                            <Typography key={i} component='span' sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: '3px', ml: '3px', height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, minWidth: 18, mr: .5 }}>\n                                                                <Box\n                                                                    sx={{\n                                                                        display: 'flex',\n                                                                        maxWidth: \"100%\",\n                                                                        overflow: \"hidden\",\n                                                                        textOverflow: \"ellipsis\",\n                                                                        whiteSpace: \"pre\",\n                                                                        fontSize: 13,\n                                                                        minWidth: 18,\n                                                                        color: '#fff'\n                                                                    }}\n                                                                >\n                                                                    {list[idx]?.label}\n                                                                </Box>\n                                                            </Typography>\n                                                        )\n                                                    })\n                                                }\n                                            </>\n                                        )\n                                    } else {\n                                        return null;\n                                    }\n                                })()\n                            }\n                            {\n                                header[position[1]].editable &&\n                                <Stack onClick={handleClick} alignItems='center' justifyContent='center' sx={{ mt: .25, height: 28, borderRadius: '3px', px: .5, cursor: 'pointer', bgcolor: '#0000000d', '&:hover': { bgcolor: '#0000001a' } }}>\n                                    <AddIcon sx={{ fontSize: 12 }} />\n                                </Stack>\n                            }\n                        </Stack>\n                    </Stack> :\n                    <Box sx={{ p: '6px', height: '100%', display: 'flex' }}>\n                        {\n                            (() => {\n                                if (data.data.length) {\n                                    return (\n                                        <>\n                                            {\n                                                data.data.map((item, i) => {\n                                                    const idx = list.findIndex((e) => e.id === item);\n                                                    return (\n                                                        <Typography key={i} component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? list[idx]?.color : '#b3b0b0', px: 1, mr: .5 }}>\n                                                            <Box\n                                                                sx={{\n                                                                    display: 'flex',\n                                                                    maxWidth: \"100%\",\n                                                                    overflow: \"hidden\",\n                                                                    textOverflow: \"ellipsis\",\n                                                                    whiteSpace: \"pre\",\n                                                                    fontSize: 13,\n                                                                    color: '#fff'\n                                                                }}\n                                                            >\n                                                                {list[idx]?.label}\n                                                            </Box>\n                                                        </Typography>\n                                                    )\n                                                })\n                                            }\n                                        </>\n                                    )\n                                } else {\n                                    return null;\n                                }\n                            })()\n                        }\n                    </Box>\n            }\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                sx={{ '& .MuiPaper-rounded': { width, mt: -1.5, minWidth: 160 } }}\n            >\n                <Box>\n                    <TextField placeholder='Find an option' onChange={(e) => setSelectKey(e.target.value)} autoFocus sx={{ pt: 1, width: '100%', '& fieldset': { display: 'none' }, '& input': { py: 0, px: 1, fontSize: 13 } }} />\n                    {\n                        (() => {\n                            const filtered = list.filter((one) => {\n                                let exist = data.data.findIndex((a) => a === one.id);\n                                return (exist === -1 && one.label.toLowerCase().search(selectKey) !== -1);\n                            });\n                            if (filtered.length) {\n                                return (\n                                    <>\n                                        {\n                                            filtered.map(({ label, color, id }, idx) => (\n                                                <MenuItem onClick={() => close(id, label, color)} key={idx}>\n                                                    <Typography component='span' sx={{ height: 18, borderRadius: 50, bgcolor: header[position[1]].colored ? color : '#b3b0b0', px: 1, minWidth: 18 }}>\n                                                        <Box\n                                                            sx={{\n                                                                display: 'flex',\n                                                                maxWidth: \"100%\",\n                                                                overflow: \"hidden\",\n                                                                textOverflow: \"ellipsis\",\n                                                                whiteSpace: \"pre\",\n                                                                fontSize: 13,\n                                                                minWidth: 18,\n                                                                color: '#fff'\n                                                            }}\n                                                        >\n                                                            {label}\n                                                        </Box>\n                                                    </Typography>\n                                                </MenuItem>\n                                            ))\n                                        }\n                                    </>\n                                )\n                            } else {\n                                return <Box sx={{ p: 1 }} />\n                            }\n                        })()\n                    }\n                </Box>\n            </Popover>\n        </>\n    )\n}\n\nexport default MultiSelectCell;","import SimpleString from \"./SimpleString\";\nimport LongText from \"./LongText\";\nimport Attached from \"./Attached\";\nimport SelectCell from \"./SelectCell\";\nimport MultiSelectCell from \"./MultiSelectCell\";\nimport DateCell from \"./DateCell\";\nimport LinkField from \"./LinkField\";\nimport CheckBoxCell from \"./CheckBoxCell\";\nimport LogDate from \"./LogDate\";\nimport LogUser from \"./LogUser\";\n\nconst CellType = (props) => {\n    const { data, type, status, focus, width, height, position, group } = props;\n    return (\n        <>\n            {\n                (() => {\n                    switch (type) {\n                        case 'text':\n                        case 'email':\n                            return <SimpleString group={group} data={data} status={status} position={position} />\n                        case 'link':\n                            return <LinkField group={group} data={data} status={status} position={position} />\n                        case 'longText':\n                            return <LongText group={group} data={data} status={status} height={height} position={position} />\n                        case 'attached':\n                            return <Attached group={group} data={data} focus={focus} position={position} />\n                        case 'date':\n                            return <DateCell group={group} data={data} position={position} />\n                        case 'select':\n                            return <SelectCell group={group} data={data} width={width} position={position} />\n                        case 'multiSelect':\n                            return <MultiSelectCell group={group} data={data} width={width} position={position} />\n                        case 'checkBox':\n                            return <CheckBoxCell group={group} data={data} width={width} position={position} />\n                        case 'createdAt':\n                        case 'updatedAt':\n                            return <LogDate group={group} data={data} width={width} position={position} />\n                        case 'createdBy':\n                        case 'updatedBy':\n                            return <LogUser group={group} data={data} width={width} position={position} />\n                        default:\n                            return <SimpleString group={group} data={data} status={status} position={position} />\n                    }\n                })()\n            }\n        </>\n    )\n}\n\nexport default CellType;","import { useContext, useMemo } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nimport { TableContext } from '../../../contexts/table';\nimport CellType from './CellType';\n\n\nconst Cell = (props) => {\n    const { data, handleContextMenu, width, position, type, order, group, cssClass } = props;\n    const { active, selectActive, editable, selectEditable, selectEditabled, } = useContext(TableContext);\n\n    const style = {\n        order,\n        zIndex: 1,\n        width: width,\n        bgcolor: data.search ? '#97ffa2' : '#fff',\n        overflow: 'hidden',\n        borderTop: '1px solid #dde1e3',\n        borderRight: '1px solid #dde1e3',\n    }\n\n    const activeStyle = {\n        boxSizing: \"content-box\",\n        border: \"1px solid transparent\",\n        mt: \"-1px\",\n        ml: \"-2px\",\n        pr: 0,\n        borderRight: 0,\n        boxShadow: type === 'multiSelect' ? \"\" : \"0 0 0 2px #2d7ff9 !important\",\n        borderRadius: \"1px\",\n        zIndex: \"8 !important\"\n    }\n\n\n    const setActive = () => {\n        if (position.join('_') !== active) {\n            selectActive(position.join('_'))\n            selectEditable(\"\");\n            selectEditabled(editable);\n        }\n    }\n\n    // const editState = () => {\n    //     if (type === 'attached') {\n    //         selectActive(position.join('_'))\n    //     } else if (type === 'select') {\n    //         selectActive(position.join('_'))\n    //     }\n    //     else {\n    //         selectEditabled(editable);\n    //         selectEditable(position.join('_'));\n    //     }\n    // }\n\n    // const handleKeyDown = (event) => {\n    //     if (active === position.join('_') && editable !== position.join('_')) {\n    //         if (type === 'longText' || type === 'text' || type === 'link') {\n    //             selectEditabled(editable);\n    //             selectEditable(position.join('_'));\n    //         }\n    //     }\n    // }\n\n    /* eslint-disable */\n    const height = useMemo(() => {\n        if (editable === position.join('_') && active === position.join('_')) {\n            if (type === 'longText') {\n                return 142\n            } else {\n                return 32;\n            }\n        } else if (editable === position.join('_') || active === position.join('_')) {\n            if (type === 'attached') {\n                return 40;\n            } else {\n                return 32;\n            }\n        } else {\n            return 32;\n        }\n    }, [editable, position])\n    /* eslint-enable */\n\n    return (\n        <Stack\n            className={'cell' + cssClass}\n            onClick={() => setActive()}\n            onContextMenu={handleContextMenu}\n            tabIndex={position.join('-')}\n            sx={active === position.join('_') ?\n                { ...style, ...activeStyle, height: height } :\n                { ...style, height: height }}\n        >\n            <Box sx={{ height: '100%' }}>\n                <CellType group={group} data={data} width={width} height={height} type={type} status={editable === position.join('_')} position={position} focus={active === position.join('_')} />\n            </Box>\n        </Stack>\n    )\n}\n\nexport default Cell;","import React from 'react'\nimport Stack from '@mui/material/Stack';\n\nimport FirstCell from './FirstCell'\nimport Cell from './Cell'\nimport useTableContext from '../../../hooks/useTable';\n\n\nconst TableRow = ({ group, row, y, popup, visible, setVisible, setOrder, isFixed }) => {\n    const { header, body } = useTableContext();\n\n    const handleContextMenu = (event) => {\n        event.preventDefault();\n        setVisible(true);\n        setOrder({ id: row._id, index: row.order });\n        if (popup.current) {\n            const clickX = event.clientX;\n            const clickY = event.clientY;\n            const screenW = window.innerWidth;\n            const screenH = window.innerHeight;\n            const rootW = 200;\n            const rootH = 193;\n            // const rootW = popup.current.offsetWidth;\n            // const rootH = popup.current.offsetHeight;\n\n            const right = (screenW - clickX) > rootW;\n            const left = !right;\n            const top = (screenH - clickY) > rootH;\n            const bottom = !top;\n\n            if (right) {\n                popup.current.style.left = `${clickX + 5}px`;\n            }\n\n            if (left) {\n                popup.current.style.left = `${clickX - rootW - 5}px`;\n            }\n\n            if (top) {\n                popup.current.style.top = `${clickY - 120}px`;\n            }\n\n            if (bottom) {\n                popup.current.style.top = `${clickY - rootH - 130}px`;\n            }\n        }\n    };\n\n    const makeRow = (data, id) => {\n        if (header.length) {\n            let res = [];\n            if (isFixed) {\n                res.push(<FirstCell order={row.order} id={id} key={y + '_'} y={y} group={group} />)\n            }\n\n            let endOrder = header.filter((e) => e.allowed);\n            if (endOrder.length) {\n                endOrder = endOrder.reduce((max, one) => max.order > one.order ? max : one);\n            } else {\n                endOrder = { order: 0 }\n            }\n\n            for (let i = 0; i < data.length; i++) {\n                let cellData;\n                switch (header[i].type) {\n                    case 'createdAt':\n                        cellData = { data: row.createdAt, search: false };\n                        break;\n                    case 'updatedAt':\n                        cellData = { data: row.updater ? row.updatedAt : null, search: false };\n                        break;\n                    case 'createdBy':\n                        cellData = { data: row.creator, search: false };\n                        break;\n                    case 'updatedBy':\n                        cellData = { data: row.updater, search: false };\n                        break;\n                    default:\n                        cellData = data[i];\n                        break;\n                }\n\n                if (header[i].hide || !header[i].allowed) continue;\n\n                let idx = body.findIndex((e) => e._id === id);\n\n                if (isFixed && header[i].fixed) {\n                    res.push(\n                        <Cell\n                            cssClass={header[i].order === endOrder.order ? ' last' : ''}\n                            key={y + '_' + i}\n                            group={group}\n                            rorder={data.order}\n                            order={header[i].order}\n                            type={header[i].type}\n                            width={header[i].width}\n                            data={cellData}\n                            position={[idx, i]}\n                            popup={popup}\n                            visible={visible}\n                            setVisible={setVisible}\n                            setOrder={setOrder}\n                            handleContextMenu={handleContextMenu}\n                        />\n                    )\n                } else if (!isFixed && !header[i].fixed) {\n                    res.push(\n                        <Cell\n                            cssClass={header[i].order === endOrder.order ? ' last' : ''}\n                            key={y + '_' + i}\n                            group={group}\n                            rorder={data.order}\n                            order={header[i].order}\n                            type={header[i].type}\n                            width={header[i].width}\n                            data={cellData}\n                            position={[idx, i]}\n                            popup={popup}\n                            visible={visible}\n                            setVisible={setVisible}\n                            setOrder={setOrder}\n                            handleContextMenu={handleContextMenu}\n                        />\n                    )\n\n                }\n            }\n            return res;\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <Stack direction='row'\n            className='grid-row'\n            sx={{\n                // order: row.order,\n                height: 32,\n                width: '100%',\n                '&:hover': {\n                    '& .show-head': { opacity: 1 },\n                    '& .row-num': { opacity: 0 },\n                    '& .cell': {\n                        bgcolor: '#f8f8f8',\n                    }\n                }\n            }}>\n            {\n                makeRow(row.row, row._id)\n            }\n        </Stack>\n    )\n\n}\nexport default TableRow;","import React, { useEffect, useState, useRef } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport { updateHeader, } from '../../../utilis/request';\nimport AddColumn from '../../../components/AddColumn';\nimport TableHeader from './TableHeader';\nimport AllCheck from './AllCheck';\nimport TableRow from './TableRow';\nimport { allCheckWidth, checkWidth, processStatusWidth } from '../../../config/constant';\nimport useTableContext from '../../../hooks/useTable';\n\nconst GridBody = ({ mainW }) => {\n    const popup = useRef(0);\n    const { header, changeHeader, body, editable, selectEditable, selectEditabled, selectActive, hId, } = useTableContext();\n    const [index, setIndex] = useState(-1);\n    const [xP, setXp] = useState(-1);\n    const [visible, setVisible] = useState(false);\n\n    const setOrder = (params) => {\n        console.log(params)\n    }\n\n    const teableHeader = () => {\n        let res = [];\n\n        res.push(<AllCheck key={-1} />)\n        let realHeader = Object.assign([], header);\n        realHeader = realHeader.map((e, i) => ({ ...e, index: i })).sort((a, b) => a.order - b.order);\n\n        let fixedW = allCheckWidth + processStatusWidth;\n\n        for (let i = 0; i < realHeader.length; i++) {\n            if (realHeader[i].hide || !realHeader[i].allowed) continue;\n            if (realHeader[i].fixed) {\n                res.push(\n                    <Box key={i} sx={{\n                        order: realHeader[i].order,\n                        height: '100%', position: 'sticky', left: fixedW, zIndex: 9, width: realHeader[i].width, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3'\n                    }}>\n                        <TableHeader me={realHeader[i]} i={realHeader[i].index} />\n                        <Box onMouseDown={(e) => downEvent(e, realHeader[i].index)} onMouseUp={() => upEvent(i)} sx={{ width: '2px', bgcolor: index === realHeader[i].index ? \"#1283da\" : '#f5f5f5', height: \"100%\", position: 'absolute', top: 0, right: 0, '&:hover': { cursor: 'col-resize' } }} />\n                    </Box>\n                )\n                fixedW += realHeader[i].width\n            } else {\n                res.push(\n                    <Box\n                        key={i}\n                        sx={{\n                            order: realHeader[i].order,\n                            height: '100%', position: 'relative', width: realHeader[i].width, bgcolor: '#f5f5f5', borderBottom: '1px solid #d1d1d1', borderRight: '1px solid #dde1e3'\n                        }}>\n                        <TableHeader me={realHeader[i]} i={realHeader[i].index} />\n                    </Box>\n                )\n            }\n        }\n        return res;\n    }\n\n    const tablFooter = () => {\n        let res = [];\n        for (let i = 0; i < header.length; i++) {\n            if (header[i].hide || !header[i].allowed) continue;\n\n            res.push(\n                <Box key={i} sx={{ height: 34, width: header[i].width, }} />\n            )\n        }\n        return res;\n    }\n\n    const downEvent = (e, i) => {\n        setIndex(i)\n        setXp(e.clientX - header[i].width)\n    }\n\n    const upEvent = () => {\n        let row = header.map((e) => {\n            let temp = e;\n            delete temp.hide;\n            return temp;\n        })\n        updateHeader({ row, hId })\n        setIndex(-1)\n        setXp(-1)\n    }\n\n    const clearSelect = () => {\n        selectEditable(\"\");\n        selectEditabled(editable);\n        selectActive(\"\");\n    }\n\n    const leftClick = (event, visible) => {\n        if (event.target.contains) {\n            const wasOutside = !(event.target === popup.current || event.target.parentElement === popup.current);\n            if (wasOutside && visible) {\n                setVisible(false);\n                setOrder({ id: \"\", index: -1 })\n            }\n        }\n    };\n\n    /* eslint-disable */\n    useEffect(() => {\n        const handleMouseMove = (event) => {\n            if (index > -1) {\n                let nHeader = header;\n                let dis = event.clientX - xP;\n\n                if (dis > 130) {\n                    nHeader[index].width = dis;\n                    changeHeader(nHeader);\n                }\n            }\n        };\n\n        window.addEventListener('mousemove', handleMouseMove);\n        return () => {\n            window.removeEventListener(\n                'mousemove',\n                handleMouseMove\n            );\n        };\n    }, [index, xP]);\n\n    useEffect(() => {\n        const handleMouseUp = () => {\n            if (index > -1 && xP > -1) {\n                let row = header.map((e) => {\n                    let temp = e;\n                    delete temp.hide;\n                    return temp;\n                })\n                updateHeader({ row, hId })\n                setIndex(-1)\n                setXp(-1)\n            }\n        };\n\n        window.addEventListener('mouseup', handleMouseUp);\n\n        return () => {\n            window.removeEventListener(\n                'mouseup',\n                handleMouseUp\n            );\n        };\n    }, [xP, index, header]);\n\n    useEffect(() => {\n        window.addEventListener('click', (e) => leftClick(e, visible));\n        return () => {\n            window.removeEventListener('click', (e) => leftClick(e, visible));\n        };\n    }, [visible]);\n    /* eslint-enable */\n\n    return (\n        <>\n            <Box sx={{ height: '200%', position: 'sticky', left: allCheckWidth - 1, width: '6px', bgcolor: '#99999917', zIndex: 99, top: 0 }} >\n                <Box sx={{ height: '100%', width: '1px', bgcolor: '#dde1e3' }} />\n            </Box>\n            <Box sx={{ position: 'absolute', right: 0, width: mainW, left: 0, overflow: 'visible', top: 0, bottom: 0 }}>\n                <Box sx={{ height: 32, top: 0, left: 0, right: 0, zIndex: 3, overflow: 'visible', bgcolor: '#f2f2f2', position: 'sticky', borderBottom: '1px solid #dde1e3' }}>\n                    <Box sx={{ height: 32, position: 'relative' }}>\n                        <Box sx={{ height: 32, display: 'flex' }}>\n                            {\n                                teableHeader()\n                            }\n                        </Box>\n                    </Box>\n                </Box>\n                <Box className='tableBody' sx={{ top: 32, left: 0, right: 0, bottom: 0, zIndex: 0, position: \"absolute\", height: 'calc(100% - 67px)', }}>\n                    <Box sx={{ position: \"relative\", }}>\n                        {\n                            (() => {\n                                let data = body;\n                                let width = 0, fixedW = checkWidth;\n                                let completed = [], activeprojects = [];\n\n                                for (let i = 0; i < header.length; i++) {\n                                    if (header[i].hide || !header[i].allowed) continue;\n                                    if (header[i].fixed) {\n                                        fixedW += header[i].width;\n                                    } else {\n                                        width += header[i].width;\n                                    }\n                                }\n\n                                for (let i = 0; i < data.length; i++) {\n                                    if (data[i].done) {\n                                        completed.push(data[i])\n                                    } else {\n                                        activeprojects.push(data[i])\n                                    }\n                                }\n\n                                completed.sort((a, b) => (new Date(b.updatedAt).valueOf() - new Date(a.updatedAt).valueOf()));\n\n                                return (\n                                    <>\n                                        <Stack>\n                                            <Stack direction='row' sx={{ height: 16 }} onClick={() => clearSelect()}>\n                                                <Box sx={{ width: fixedW, height: '100%', position: 'sticky', left: 0, zIndex: 9, bgcolor: '#f7f7f7' }} />\n                                            </Stack>\n                                            <Box sx={{ display: 'flex' }}>\n                                                <Box sx={{ width: 16, bgcolor: '#f7f7f7', zIndex: 9, position: 'sticky', left: 0 }} onClick={() => clearSelect()} />\n                                                <Stack sx={{ zIndex: 9, position: 'sticky', left: 16, width: fixedW, border: '1px solid #dde1e3', borderTopLeftRadius: 8, borderBottomLeftRadius: 8, '&:before': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', top: -1, left: -7 }, '&:after': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', bottom: -1, left: -7 } }}>\n                                                    <Box sx={{ width: '100%', height: 47, bgcolor: '#fffafa', py: 1, px: 1, borderTopLeftRadius: 8, borderBottomLeftRadius: 8, }} onClick={() => clearSelect()}>\n                                                        <Typography sx={{ color: 'gray' }}>{`Active (${activeprojects.length})`}</Typography>\n                                                    </Box>\n                                                    {\n                                                        activeprojects.map((item, idx) => <TableRow group={'active'} isFixed={true} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                                <Stack sx={{ width: width, borderTopRightRadius: 8, borderBottomRightRadius: 8, borderTop: '1px solid #dde1e3', borderBottom: '1px solid #dde1e3', }} >\n                                                    <Box sx={{ bgcolor: '#fffafa', height: 47, py: 1, px: 1, borderTopRightRadius: 8, borderRight: '1px solid #dde1e3', borderBottomRightRadius: activeprojects.length ? 0 : 8, }} onClick={() => clearSelect()} />\n                                                    {\n                                                        activeprojects.map((item, idx) => <TableRow group={'active'} isFixed={false} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                            </Box>\n\n                                            <Stack direction='row' sx={{ height: 16 }} onClick={() => clearSelect()}>\n                                                <Box sx={{ width: fixedW, height: '100%', position: 'sticky', left: 0, zIndex: 9, bgcolor: '#f7f7f7' }} />\n                                            </Stack>\n                                            <Box sx={{ display: 'flex' }}>\n                                                <Box sx={{ width: 16, bgcolor: '#f7f7f7', zIndex: 9, position: 'sticky', left: 0 }} onClick={() => clearSelect()} />\n                                                <Stack sx={{ zIndex: 9, position: 'sticky', left: 16, width: fixedW, border: '1px solid #dde1e3', borderTopLeftRadius: 8, borderBottomLeftRadius: 8, '&:before': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', top: -1, left: -7 }, '&:after': { content: `\"\"`, height: 2, width: 10, bgcolor: '#f7f7f7', position: 'absolute', bottom: -1, left: -7 } }}>\n                                                    <Box sx={{ width: '100%', height: 47, bgcolor: '#fffafa', py: 1, px: 1, borderTopLeftRadius: 8, borderBottomLeftRadius: 8, }} onClick={() => clearSelect()}>\n                                                        <Typography sx={{ color: 'gray' }}>{`Completed (${completed.length})`}</Typography>\n                                                    </Box>\n                                                    {\n                                                        completed.map((item, idx) => <TableRow group={'completed'} isFixed={true} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                                <Stack sx={{ width: width, borderTopRightRadius: 8, borderBottomRightRadius: 8, borderTop: '1px solid #dde1e3', borderBottom: '1px solid #dde1e3', }} >\n                                                    <Box sx={{ bgcolor: '#fffafa', height: 47, py: 1, px: 1, borderTopRightRadius: 8, borderRight: '1px solid #dde1e3', borderBottomRightRadius: completed.length ? 0 : 8, }} onClick={() => clearSelect()} />\n                                                    {\n                                                        completed.map((item, idx) => <TableRow group={'completed'} isFixed={false} row={item} y={idx} key={idx} popup={popup} visible={visible} setVisible={setVisible} setOrder={setOrder} />)\n                                                    }\n                                                </Stack>\n                                            </Box>\n                                        </Stack>\n                                    </>\n                                )\n                            })()\n                        }\n                    </Box>\n                </Box>\n                <Box sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 3, bgcolor: '#ffffff', borderTop: '1px solid #dde1e3', }} >\n                    <Box sx={{ height: 35, display: 'flex' }}>\n                        <Box sx={{ width: 66, bgcolor: '#ffffff80', borderTop: '1px solid #dde1e3', }}>\n                            <Box sx={{ top: 0, left: 0, height: 34, overflow: 'visible', position: 'absolute', }}>\n                                <Box sx={{ position: 'relative' }}>\n                                    <Stack direction='row' sx={{ position: 'absolute', zIndex: 1, height: 24, left: 0, top: 0 }} >\n                                        <Box sx={{\n                                            px: 1, pt: '3px', pb: '2px', fontSize: 11, width: 'auto', overflow: 'hidden', position: 'static', bgcolor: '#fbfbfb', whiteSpace: 'nowrap', textOverflow: 'ellipsis',\n                                        }}>\n                                            {`${body.length} records`}\n                                        </Box>\n                                    </Stack>\n                                </Box>\n                            </Box>\n                        </Box>\n                        {tablFooter()}\n                    </Box>\n                </Box>\n                <AddColumn />\n            </Box>\n        </>\n    )\n}\n\nexport default GridBody;","import { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\n\nimport TableBody from './TableBody';\nimport { addButtonWidth, allCheckWidth, scrollWidth } from '../../../config/constant';\nimport useTableContext from '../../../hooks/useTable';\n\nconst TableContent = () => {\n    const { header, isAdmin } = useTableContext();\n    const [data, setData] = useState({\n        fixedHeader: [],\n        rightHeader: [],\n        mainW: 0\n    });\n\n    useEffect(() => {\n        let fixed = [], right = [];\n        for (let item of header) {\n            if (item.fixed) {\n                fixed.push(item)\n            } else {\n                right.push(item)\n            }\n        }\n        let mainW = isAdmin ? addButtonWidth + allCheckWidth : allCheckWidth + scrollWidth;\n        for (const one of header) {\n            if (!one.hide && one.allowed) {\n                mainW += one.width;\n            }\n        }\n        mainW = mainW > window.screen.width ? mainW : window.screen.width\n        setData({ fixedHeader: fixed, rightHeader: right, mainW })\n    }, [header, isAdmin])\n\n    const { mainW, } = data;\n\n    return (\n        <Box sx={{\n            top: 56,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            position: 'absolute',\n            overflow: 'auto',\n        }}>\n            <TableBody mainW={mainW} />\n        </Box >\n    )\n}\n\nexport default TableContent;","import React, { useState, useEffect } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nimport { getInviteData } from '../../utilis/request';\n\nimport Loading from '../../components/Loading';\nimport TableContent from './TableContent';\nimport UserManagement from '../../components/UserManagement';\n\nimport useTableContext from '../../hooks/useTable';\nimport { useParams } from 'react-router-dom';\n\nconst View = () => {\n    const { id } = useParams();\n    const { initData, users, setUsers } = useTableContext();\n\n    const [loading, setLoading] = useState(false);\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        (async () => {\n            let data = await getInviteData(id);\n            if (data.status) {\n                data = data.data;\n                const hId = data.header._id ?? \"\";\n                const header = data.header.row;\n                const users = data.users;\n                setName(data.header.name);\n                setUsers(users);\n                initData({ header, hId, body: data.body, notifications: [] });\n                setLoading(true)\n            }\n        })()\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Stack sx={{ width: '100%', height: '100%' }}>\n            <Stack sx={{ width: '100%', height: '100%' }}>\n                <Stack sx={{ height: '100%', width: '100%', bgcolor: '#f5f5f5' }}>\n                    <Stack sx={{ height: '100%', flex: '1 1 auto' }}>\n                        <Stack sx={{ height: '100%', position: 'relative', overflow: 'hidden' }}>\n                            <Box sx={{ height: '100%', width: '100%', bgcolor: '#f7f7f7', }}>\n                                <Box sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    bottom: 0,\n                                    left: 0,\n                                    right: 0,\n                                    zIndex: 4,\n                                    overflow: 'hidden',\n                                    opacity: 1,\n                                }}>\n                                    {\n                                        loading && users.length ?\n                                            <>\n                                                <Box sx={{ width: '100%', position: 'absolute', top: 0, letf: 0, right: 0, bgcolor: (theme) => theme.palette.primary.main }}>\n                                                    <Stack direction='row' alignItems='center' justifyContent='space-between' sx={{ height: 56, px: 2 }}>\n                                                        <Stack direction='row' alignItems='center'>\n                                                            <Stack direction='row' alignItems='center'>\n                                                                <Link href='/' sx={{ display: 'flex' }}>\n                                                                    <Typography sx={{ fontSize: 20, color: \"#fff\" }}>{name}</Typography>\n                                                                </Link>\n                                                            </Stack>\n                                                        </Stack>\n                                                    </Stack>\n\n                                                </Box >\n                                                <TableContent />\n                                            </>\n                                            :\n                                            <Box sx={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                                <Loading />\n                                            </Box>\n                                    }\n                                </Box>\n                            </Box>\n                        </Stack>\n                    </Stack>\n                </Stack>\n            </Stack>\n            <UserManagement />\n        </Stack>\n    )\n}\n\nexport default View;"],"names":["props","i","me","header","useTableContext","Stack","direction","alignItems","justifyContent","sx","height","width","px","overflow","Box","display","Icons","type","editable","maxWidth","textOverflow","whiteSpace","Typography","variant","ml","color","fontWeight","fontSize","userSelect","name","useContext","TableContext","body","deleteRowList","setDeleteRowList","position","left","zIndex","order","allCheckWidth","bgcolor","borderBottom","borderRight","cursor","borderLeft","Checkbox","onChange","e","target","checked","all","map","one","_id","Boolean","length","data","group","useState","list","setList","anchorEl","setAnchorEl","selectKey","setSelectKey","open","useMemo","close","id","label","useEffect","iList","index","borderRadius","border","borderColor","borderWidth","onClick","event","currentTarget","idx","findIndex","component","colored","minWidth","Popover","onClose","anchorOrigin","vertical","horizontal","mt","TextField","placeholder","value","autoFocus","pt","py","filtered","filter","toLowerCase","search","MenuItem","p","className","minHeight","flexWrap","item","mr","IconButton","parentElement","Add","a","onModal","status","isDel","modalChange","changeBody","editabled","user","ConfigContext","setValue","saveRequest","params","old","rowId","updateRow","updater","log","new","dataType","sign","creator","cellName","cellId","columnId","updateLog","alert","join","t","row","temp","firstName","lastName","email","updatedAt","Date","saveData","disabled","defaultValue","multiline","rows","padding","selectEditable","selectEditabled","selectActive","handleKeyDown","key","onKeyDown","href","rel","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","renderInput","moment","format","pr","pl","lineHeight","y","handleClose","changeItem","useConfig","users","isAdmin","hId","setData","setIsDel","commant","setCommant","imgData","setImgData","fullImg","setFullImg","showChat","setShowChat","follower","setFollower","imgIndex","setImgIndex","activeType","setactiveType","anchor","setAnchor","whiteList","setWhiteList","uSearch","setUSearch","openWl","drop","handleCommentType","switchCommentType","document","getElementsByClassName","scroll","top","clientHeight","behavior","getData","allowIds","getLog","logData","followers","Object","keys","lastChild","Dialog","DialogTitle","ExpandLess","ExpandMore","SpeakerNotesOff","ChatBubble","mx","Close","DialogContent","Grid","container","md","spacing","m","allowed","sm","opacity","createdAt","LogUser","mb","Button","textTransform","startIcon","AttachFile","src","j","alt","mimetype","startsWith","uploadUrl","filename","getImg","maxHeight","x","openFullImg","originalname","bottom","right","downloadFile","ArrowCircleDown","size","pb","endIcon","ArrowDropDown","typeLabel","Menu","MenuListProps","ListItemIcon","Check","ListItemText","inset","AvatarGroup","max","Avatar","writer","ReactTimeAgo","date","locale","durationDate","before","sort","b","pop","endDate","diff","getTime","day","Math","floor","mod","hour","mod1","minute","mod2","second","textDecoration","oldColor","history","jdx","flag","Tooltip","title","Diversity3","splice","rmeoveItem","transformOrigin","boxShadow","partner","slice","selectPartner","ImageModal","modalI","setModalI","setIndex","setOpen","checkWidth","borderTop","textAlign","chat","OpenInFull","ViewModal","focus","handleOpenModal","tabIndex","onDoubleClick","active","handleContextMenu","cssClass","style","activeStyle","boxSizing","onContextMenu","popup","visible","setVisible","setOrder","isFixed","preventDefault","current","clickX","clientX","clickY","clientY","window","innerWidth","innerHeight","res","push","endOrder","reduce","cellData","hide","fixed","rorder","makeRow","mainW","useRef","changeHeader","xP","setXp","console","downEvent","upEvent","updateHeader","clearSelect","leftClick","contains","handleMouseMove","nHeader","dis","addEventListener","removeEventListener","handleMouseUp","realHeader","assign","fixedW","processStatusWidth","onMouseDown","onMouseUp","teableHeader","completed","activeprojects","done","valueOf","borderTopLeftRadius","borderBottomLeftRadius","content","borderTopRightRadius","borderBottomRightRadius","tablFooter","AddColumn","fixedHeader","rightHeader","addButtonWidth","scrollWidth","screen","TableBody","useParams","initData","setUsers","loading","setLoading","setName","getInviteData","notifications","flex","letf","theme","palette","primary","main","Link","Loading","UserManagement"],"sourceRoot":""}